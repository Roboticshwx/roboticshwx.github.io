<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Approaches in Studying Effectively</title>
    <url>/2023/10/18/Approaches-in-Studying-Effectively/</url>
    <content><![CDATA[<h1 id="3-Tips-on-How-to-Study-Effectively"><a href="#3-Tips-on-How-to-Study-Effectively" class="headerlink" title="3 Tips on How to Study Effectively"></a>3 Tips on How to Study Effectively</h1><blockquote>
<p>Forgetting is the friend of learning. -Robert Bjork</p>
</blockquote>
<p>This approaches have great impacts on <strong>exam-oriented education</strong>, mostly have great impacts on <strong>memorizing knowledge</strong>.</p>
<p>The Theory of the way to transfer knowledge from short-term memory to long-term memory.</p>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/10/18/Approaches-in-Studying-Effectively/fig_1.png"
                      class="" width="600"
                >

<ul>
<li>The repeated firing strengthens the connection between the neurous.</li>
<li>This transfers is crucial during sleep.</li>
<li>New knowledge is integrated with other related concepts you already know.</li>
</ul>
<h2 id="How"><a href="#How" class="headerlink" title="How"></a>How</h2><ul>
<li>Testing yourself with flashcards and quizzes, forces you to actively retrieve knowledge, which updates and strengthens the memory.<ul>
<li>Rereading textbooks and highlighting notes can generate a false sense of competence, since the information is right in front of you.</li>
<li>Testing yourself allows you to more accurately gauge what you actually know.</li>
<li>Making mistakes can actually improve learning in the long term.</li>
<li>It’s theorized that as you rack your brain for the answer, you activate relevant pieces of knowledge. The brain can better integrate this new information with what you already know after the correct answer is later revealed.</li>
</ul>
</li>
</ul>
<h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><ul>
<li>Mixing multiple topics and subjects, interleaving, or mixing the concepts you focus on in a single session, can lead to better retention than practicing a single skill.<ul>
<li>Cycling through different subjects forces you brain to temporarily forget, then retrieve information, futher strengthen the memory.</li>
</ul>
</li>
</ul>
<h2 id="When"><a href="#When" class="headerlink" title="When"></a>When</h2><ul>
<li>Spacing your review across multiple days allows for rest and sleep between sessions.<ul>
<li>While sleep, the brain is actively at work, storing and integrating knowledge in the neocortex.</li>
<li>Cramming the night before the exam may seem logical, the information won’t stick around for the long term.</li>
</ul>
</li>
</ul>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/10/18/Approaches-in-Studying-Effectively/fig_2.png"
                      class="" width="400"
                >


<h1 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h1><ul>
<li><a class="link"   href="https://www.youtube.com/watch?v=TjPFZaMe2yw" >3 tips on how to study effectively <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
</ul>
]]></content>
      <categories>
        <category>English Learning</category>
      </categories>
  </entry>
  <entry>
    <title>CAD设计技巧</title>
    <url>/2023/07/21/CAD%E8%AE%BE%E8%AE%A1%E6%8A%80%E5%B7%A7/</url>
    <content><![CDATA[<blockquote>
<p>CAD能力的提升在于不断的练习, 熟能生巧.</p>
</blockquote>
<h2 id="SolidWorks"><a href="#SolidWorks" class="headerlink" title="SolidWorks"></a>SolidWorks</h2><p><code>Alt + T</code>+<code>Z</code>可以打开自定义设置，设置鼠标笔势和快捷键。</p>
<h3 id="鼠标笔势"><a href="#鼠标笔势" class="headerlink" title="鼠标笔势"></a>鼠标笔势</h3><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/07/21/CAD%E8%AE%BE%E8%AE%A1%E6%8A%80%E5%B7%A7/fig_1.png"
                      class="" width="600"
                >

<p>将常用的命令分配到对应的鼠标笔势即可。</p>
<h3 id="常用快捷键"><a href="#常用快捷键" class="headerlink" title="常用快捷键"></a>常用快捷键</h3><ul>
<li>将<code>正视于</code>改为空格；</li>
</ul>
<p>常用特征：<br><code>Q</code>为拉伸凸台，<code>W</code>为拉伸切除；<br><code>E</code>为旋转拉伸，<code>R</code>为旋转切除；</p>
<p><code>T</code>为草图的快速尺寸；</p>
<p>草图中，右键能够选中封闭曲线；</p>
<h2 id="UG"><a href="#UG" class="headerlink" title="UG"></a>UG</h2><h3 id="UG常用命令快捷键"><a href="#UG常用命令快捷键" class="headerlink" title="UG常用命令快捷键"></a>UG常用命令快捷键</h3><ul>
<li><code>Ctrl+J</code> 编辑对象显示<ul>
<li>常用于修改对象的图层, 颜色, 透明度等;</li>
</ul>
</li>
<li><code>Ctrl+E</code> 表达式<ul>
<li>定义常量, 用于同个数据的多次标注或者函数表达式;</li>
</ul>
</li>
<li><code>Ctrl+B</code> 隐藏指定对象</li>
<li><code>Ctrl+Shift+B</code> 反隐藏指定对象</li>
<li><code>Ctrl+Shift+U</code> 显示全部对象</li>
<li><code>Ctrl+W</code> 显示与隐藏<ul>
<li>可以单独设置每个对象的隐藏和反隐藏;</li>
</ul>
</li>
<li><code>Ctrl+L</code> 图层设置<ul>
<li>用于查看和设置对象的图层数, 并控制可见与不可见;</li>
</ul>
</li>
<li><code>F8</code> 定向<ul>
<li>通过旋转到临近的面来正视于;</li>
</ul>
</li>
<li><code>Ctrl+F</code> 适合窗口<ul>
<li>当不小心将零件放大缩小到不合适的尺寸的时候, 可以将其适配窗口大小;</li>
</ul>
</li>
<li><code>F4</code> 重复上一步操作步骤</li>
<li><code>Ctrl+S</code> 保存</li>
<li><code>Ctrl+O</code> 打开</li>
<li><code>Ctrl+N</code> 新建</li>
</ul>
<h3 id="图层分类"><a href="#图层分类" class="headerlink" title="图层分类"></a>图层分类</h3><p>按照规定的图层进行分类, 易于零件进行修改和展示;</p>
<table>
<thead>
<tr>
<th align="center">最终实体</th>
<th align="center">1</th>
</tr>
</thead>
<tbody><tr>
<td align="center">实体</td>
<td align="center">11-20</td>
</tr>
<tr>
<td align="center">草图</td>
<td align="center">21-60</td>
</tr>
<tr>
<td align="center">固定基准</td>
<td align="center">61</td>
</tr>
<tr>
<td align="center">基准</td>
<td align="center">62-80</td>
</tr>
<tr>
<td align="center">曲线</td>
<td align="center">81-90</td>
</tr>
<tr>
<td align="center">片体</td>
<td align="center">91-110</td>
</tr>
</tbody></table>
<h3 id="快捷操作"><a href="#快捷操作" class="headerlink" title="快捷操作"></a>快捷操作</h3><p>在新建特征的时候, 窗口有<code>确定</code>和<code>应用</code>两个按钮, 可以通过鼠标中键快速应用和确定(点一次应用, 点两次确定, 确定后串口关闭);</p>
]]></content>
      <categories>
        <category>Mechanical Design</category>
      </categories>
  </entry>
  <entry>
    <title>ESP32入门学习</title>
    <url>/2023/05/11/ESP32%E5%85%A5%E9%97%A8%E5%AD%A6%E4%B9%A0/</url>
    <content><![CDATA[<h1 id="🛠️开发环境搭建"><a href="#🛠️开发环境搭建" class="headerlink" title="🛠️开发环境搭建"></a>🛠️开发环境搭建</h1><hr>
<h2 id="Vscode-PlatformIO"><a href="#Vscode-PlatformIO" class="headerlink" title="Vscode PlatformIO"></a>Vscode PlatformIO</h2><p>利用vscode platformIO搭建开发环境。</p>
<p><strong>1. 将ESP32开发板连接到电脑上，打开设备管理器，查看端口号.</strong></p>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/05/11/ESP32%E5%85%A5%E9%97%A8%E5%AD%A6%E4%B9%A0/fig_1.png"
                      class="" width="600"
                >

<p>这里是COM5，如果没有显示端口号则需要安装驱动。</p>
<p><strong>2. 新建工程文件夹（例如某个项目文件夹里面），在文件夹的环境中打开vscode(Shift+F10 在code环境中打开)，然后打开插件PlarformIO-(左下角)<code>QUICK ACCESS</code>-<code>PIO HOME</code>-<code>Open</code></strong></p>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/05/11/ESP32%E5%85%A5%E9%97%A8%E5%AD%A6%E4%B9%A0/fig_2.png"
                      class="" width="700"
                >

<p>可以在<code>Devices</code>中查看到ESP32的端口号(左边栏)</p>
<p>也可以在<code>Projects</code>中打开其他工程文件夹</p>
<p><strong>3. 新建项目，点击上图<code>New Project</code>，按照下图填上框架。</strong></p>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/05/11/ESP32%E5%85%A5%E9%97%A8%E5%AD%A6%E4%B9%A0/fig_3.png"
                      class="" width="500"
                >

<p>如果vscode没有打开文件夹，则可以在<code>Project Wizzard</code>最下面新建一个项目的文件夹和它的地址；</p>
<p>创建之后在<code>src</code>文件夹中会有一个<code>main.cpp</code>文件，代码就放在这个地方。</p>
<p><strong>编译下载</strong></p>


<p>在vscode左下角</p>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/05/11/ESP32%E5%85%A5%E9%97%A8%E5%AD%A6%E4%B9%A0/fig_9.png"
                      class="" width="800"
                >

<p>点击左边的Build编译，点击右边的Upload下载。</p>
<h1 id="📬ESP32串口通信"><a href="#📬ESP32串口通信" class="headerlink" title="📬ESP32串口通信"></a>📬ESP32串口通信</h1><hr>
<h2 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h2><p>串口是单片机常用的一种通信方式，通过两条线：TX和RX进行通信。</p>
<p>连接方式：一端的Tx接另外一端Rx，一端的Rx接另外一端Tx。</p>
<h2 id="串口收发"><a href="#串口收发" class="headerlink" title="串口收发"></a>串口收发</h2><h3 id="发送"><a href="#发送" class="headerlink" title="发送"></a>发送</h3><p>将ESP32与电脑连接（注意Tx和RX连接方式），利用TTL转USB模块连接。</p>
<p>ESP32有四个串口，分别是：Serial0、Serial1、Serial2、Serial3，一般不用Serial0，因为它用来烧录程序。</p>
<p>这里用Serial1向电脑发送指令，我们用串口调试助手来看效果。</p>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Arduino.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">setup</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  Serial1.<span class="built_in">begin</span>(<span class="number">115200</span>, SERIAL_8N1, <span class="number">17</span>, <span class="number">16</span>); </span><br><span class="line">  <span class="comment">// 初始化Serial1，波特率为115200，帧格式为8位数据位，无校验位，1位停止位，设置接收端IO17为RX, IO16为TX</span></span><br><span class="line"></span><br><span class="line">  Serial1.<span class="built_in">println</span>(<span class="string">&quot;ESP32 Serial Communication Test&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">loop</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  Serial1.<span class="built_in">println</span>(<span class="string">&quot;Hello from ESP32!&quot;</span>);  <span class="comment">// 向电脑发送指令包</span></span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">1000</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

  <div class="note p-4 mb-4 rounded-small default">
    <p><code>SERIAL_8N1</code>表示传输的一帧的帧格式，内容为8位数据位，无校验位，1位停止位。然后先设置Rx引脚，再设置Tx引脚。</p>

  </div>

<p>我们需要在串口调试助手中选择好串口，设置波特率和帧格式，这里设置为115200，8N1。</p>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/05/11/ESP32%E5%85%A5%E9%97%A8%E5%AD%A6%E4%B9%A0/fig_4.png"
                      class="" width="500"
                >

<p>烧录程序，打开串口</p>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/05/11/ESP32%E5%85%A5%E9%97%A8%E5%AD%A6%E4%B9%A0/fig_5.png"
                      class="" width="500"
                >

<p>ESP32不断向电脑发送指令包，电脑不断接收并且显示出来。</p>
<h3 id="接收"><a href="#接收" class="headerlink" title="接收"></a>接收</h3><p>同样的连接方式。</p>
<p>通过LED灯来判断是否接收到数据。</p>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Arduino.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LED_PIN 2</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">setup</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Serial1.<span class="built_in">begin</span>(<span class="number">115200</span>, SERIAL_8N1, <span class="number">17</span>, <span class="number">16</span>);</span><br><span class="line">    <span class="built_in">pinMode</span>(LED_PIN, OUTPUT);</span><br><span class="line">    <span class="built_in">digitalWrite</span>(LED_PIN, LOW);</span><br><span class="line"></span><br><span class="line">    Serial1.<span class="built_in">println</span>(<span class="string">&quot;ESP32 Serial Communication Test&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">loop</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (Serial1.<span class="built_in">available</span>()) <span class="comment">// 检查串口是否有数据</span></span><br><span class="line">    &#123;</span><br><span class="line">        String receiveData = Serial1.<span class="built_in">readString</span>(); <span class="comment">// 读取并存储串口数据</span></span><br><span class="line">        Serial1.<span class="built_in">println</span>(<span class="string">&quot;Received data: &quot;</span> + receiveData); <span class="comment">// 将串口数据发送回电脑</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (receiveData == <span class="string">&quot;on&quot;</span>) <span class="comment">// 如果串口数据为“on”</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">digitalWrite</span>(LED_PIN, HIGH); <span class="comment">// 点亮LED</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">digitalWrite</span>(LED_PIN, LOW); <span class="comment">// 关闭LED</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<p>电脑返回发送的数据：</p>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/05/11/ESP32%E5%85%A5%E9%97%A8%E5%AD%A6%E4%B9%A0/fig_6.png"
                      class="" width="500"
                >
<p>当只发送”on”，则可以点亮LED，发送其他数据则关闭LED。</p>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/05/11/ESP32%E5%85%A5%E9%97%A8%E5%AD%A6%E4%B9%A0/fig_7.jpg"
                      class="" width="200"
                >

<h2 id="16进制数据收发"><a href="#16进制数据收发" class="headerlink" title="16进制数据收发"></a>16进制数据收发</h2><p>通常，我们在串口调试助手中发送的数据都是ASCII码，但是与传感器通信时通常都需要16进制的指令包。</p>
<p>因为一个字节等于两位16进制数，因此发送的时候以两位16进制为单位进行编码，16进制的编码格式：</p>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line">...</span><br><span class="line"><span class="type">const</span> <span class="type">uint8_t</span> PS_Search[] = &#123;<span class="number">0xEF</span>, <span class="number">0x01</span>, <span class="number">0xFF</span>, <span class="number">0x50</span>, <span class="number">0x00</span>, <span class="number">0x0A</span>, <span class="number">0x00</span>, <span class="number">0x68</span>&#125;; </span><br><span class="line"><span class="comment">// 指令包: EF01 FF 01 50 000A 0068</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">setup</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  Serial1.<span class="built_in">begin</span>(<span class="number">57600</span>, SERIAL_8N2, <span class="number">27</span>, <span class="number">26</span>); <span class="comment">// 初始化串口</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">setup</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  Serial1.<span class="built_in">write</span>(PS_Search, <span class="built_in">sizeof</span>(PS_Search)); <span class="comment">// 发送指令包</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<p>如果需要计算校验和，一定要谨慎，校验和的计算很容易出错，计算时先把16进制全部转化为10进制，加起来再转换为16进制。</p>
<p>可以用在线的<a class="link"   href="https://www.sojson.com/hexconvert/10to16.html" >进制转换工具 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>。</p>
<h1 id="📮ESP32SPI通信"><a href="#📮ESP32SPI通信" class="headerlink" title="📮ESP32SPI通信"></a>📮ESP32SPI通信</h1><blockquote>
<p>SPI 串行外设接口 (Serial Peripheral Interface) 是一种高速的，全双工，同步的通信总线。</p>
</blockquote>
<p>ESP32集成了4个SPI控制器，分别是SPI0, SPI1, SPI2, SPI3，由于flash使用SPI0, SPI1，因此SPI2和SPI3是通用的SPI控制器，日常使用这两个SPI进行开发。</p>

  <div class="note p-4 mb-4 rounded-small default">
    <p>SPI2也叫HSPI，SPI3也叫VSPI。</p>

  </div>

<p>使用默认的引脚，可以使用80MHz的时钟。</p>
<table>
<thead>
<tr>
<th>SPI2 (HSPI)</th>
<th>SPI3 (VSPI)</th>
<th>SPI Signal</th>
<th>Description</th>
</tr>
</thead>
<tbody><tr>
<td>13</td>
<td>23</td>
<td>MOSI</td>
<td>主设备输出，从设备输入</td>
</tr>
<tr>
<td>12</td>
<td>19</td>
<td>MISO</td>
<td>主设备输入，从设备输出</td>
</tr>
<tr>
<td>14</td>
<td>18</td>
<td>SCLK</td>
<td>时钟信号</td>
</tr>
<tr>
<td>15</td>
<td>5</td>
<td>SS</td>
<td>片选信号（用于从设备选择）</td>
</tr>
</tbody></table>
<h1 id="🦾ESP32输出PWM信号"><a href="#🦾ESP32输出PWM信号" class="headerlink" title="🦾ESP32输出PWM信号"></a>🦾ESP32输出PWM信号</h1><p>ESP32的芯片中有专门用于脉宽调制（PWM）的模块, pwm信号在ESP32中有两个模块经常用到：</p>
<ul>
<li>LEDc模块<ul>
<li>16个可用通道;</li>
<li>8个可用定时器;</li>
<li>频率范围从1Hz~40MHz;</li>
<li>PWM分别率从1位到16位;</li>
</ul>
</li>
<li>MCPWM (Motor Control PWM)<ul>
<li>6个可用通道;</li>
<li>内置死区控制, 用于电机控制的驱动H桥;</li>
<li>包括捕获功能, 可以读取外部PWM信号的频率和占空比;</li>
<li>主要用于复杂的电机控制;</li>
</ul>
</li>
</ul>
<h2 id="LEDc模块"><a href="#LEDc模块" class="headerlink" title="LEDc模块"></a>LEDc模块</h2><p>LEDc模块通常用于LED控制或者简单的电机控制; 关于为什么不用<code>analogWrite()</code>, 看看gpt怎么说:</p>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/05/11/ESP32%E5%85%A5%E9%97%A8%E5%AD%A6%E4%B9%A0/fig_14.png"
                      class="" width="500"
                >

<p>参考资料: <a class="link"   href="https://www.zhihu.com/tardis/zm/art/639633183?source_id=1005" >深度ESP32 PWM教程如何在ESP32中使用PWM <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p>常用的三个API:</p>
<ul>
<li><code>ledcSetup(channel, frequence, resolution)</code><ul>
<li>设置的参数依次是通道, 频率, 分辨率;</li>
</ul>
</li>
<li><code>ledcAttachPin(pin, channel)</code><ul>
<li>将GPIO与LEDc的通道绑定</li>
</ul>
</li>
<li><code>ledcWrite(channel, Occupational cycle)</code><ul>
<li>输出pwm信号</li>
</ul>
</li>
</ul>
<p>代码示例(用于pwm控制电机)</p>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Arduino.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> motorPinPWM = <span class="number">5</span>; <span class="comment">// 选择一个GPIO用于PWM输出</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> freq = <span class="number">15000</span>;    <span class="comment">// 设置PWM频率为15kHz，根据需要在15-25kHz范围内更改这个值</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> ledChannel = <span class="number">0</span>;  <span class="comment">// 使用LEDc模块的通道0</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> resolution = <span class="number">8</span>;  <span class="comment">// 使用8位解析度，即PWM值在0-255之间</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">setup</span><span class="params">()</span> &#123;</span><br><span class="line">  <span class="comment">// 配置LEDc的定时器</span></span><br><span class="line">  ledcSetup(ledChannel, freq, resolution);</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 将GPIO与LEDc的通道绑定</span></span><br><span class="line">  ledcAttachPin(motorPinPWM, ledChannel);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">loop</span><span class="params">()</span> &#123;</span><br><span class="line">  <span class="comment">// 设置PWM值为中间值</span></span><br><span class="line">  ledcWrite(ledChannel, <span class="number">128</span>);</span><br><span class="line">  </span><br><span class="line">  delay(<span class="number">2000</span>); <span class="comment">// 等待2秒</span></span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 设置PWM值为最大</span></span><br><span class="line">  ledcWrite(ledChannel, <span class="number">255</span>);</span><br><span class="line">  </span><br><span class="line">  delay(<span class="number">2000</span>); <span class="comment">// 等待2秒</span></span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 设置PWM值为最小</span></span><br><span class="line">  ledcWrite(ledChannel, <span class="number">0</span>);</span><br><span class="line">  </span><br><span class="line">  delay(<span class="number">2000</span>); <span class="comment">// 等待2秒</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<p>需要根据电机的调速频率设置<code>freq</code>参数, 这里的电机调速范围是15-25kHz.</p>
<p>如果需要设置脉宽来控制电机或者舵机，可以使用函数：</p>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">setMotorPWM</span><span class="params">(<span class="type">int</span> motor, <span class="type">int</span> pulseWidthUs)</span> &#123;</span><br><span class="line">  <span class="comment">// 计算占空比</span></span><br><span class="line">  <span class="type">uint32_t</span> duty = (pulseWidthUs * (<span class="number">1</span> &lt;&lt; LEDC_RESOLUTION)) / <span class="number">20000</span>;</span><br><span class="line">  ledcWrite(motorChannels[motor], duty);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<p>对于常用的舵机SG90，其PWM信号的周期为20ms（控制频率为50Hz），占空比为0.5ms（0度）<del>2.5ms（180度），在10位分辨率下，占空比为26</del>128</p>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> resolution 10 <span class="comment">// 分辨率</span></span></span><br><span class="line">...</span><br><span class="line"><span class="type">void</span> <span class="title function_">loop</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">  ledcWrite(ledChannel, <span class="number">26</span>); <span class="comment">// 0度</span></span><br><span class="line">  delay(<span class="number">1000</span>);</span><br><span class="line">  ledcWrite(ledChannel, <span class="number">77</span>); <span class="comment">// 90度</span></span><br><span class="line">  delay(<span class="number">1000</span>);</span><br><span class="line">  ledcWrite(ledChannel, <span class="number">128</span>); <span class="comment">// 180度</span></span><br><span class="line">  delay(<span class="number">1000</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></div>





<h1 id="🚦ESP32外部中断"><a href="#🚦ESP32外部中断" class="headerlink" title="🚦ESP32外部中断"></a>🚦ESP32外部中断</h1><p>可以通过配置某些引脚在其状态变化时，触发一个函数。</p>
<h1 id="⚙️ESP32常用模块"><a href="#⚙️ESP32常用模块" class="headerlink" title="⚙️ESP32常用模块"></a>⚙️ESP32常用模块</h1><h2 id="超声波模块"><a href="#超声波模块" class="headerlink" title="超声波模块"></a>超声波模块</h2><p>以HC-SR04为例：</p>

  <div class="note p-4 mb-4 rounded-small primary">
    <p>原理：</p>
<ol>
<li>单片机给模块发送一个至少10us的高电平脉冲到Trig引脚（触发）。</li>
<li>模块接收到脉冲后会在Echo引脚（回声）发出一个高电平脉冲。</li>
<li>这个脉冲的持续时间就是声波从发出到反射回来的时间，通过测量声速往返的时间，便可以得到距离。</li>
</ol>

  </div>



<h2 id="蓝牙模块"><a href="#蓝牙模块" class="headerlink" title="蓝牙模块"></a>蓝牙模块</h2><p>蓝牙模块使用的是&lt;BLEDevice.h&gt;这个库，通过一段示例代码，使得手机或者平板可以通过蓝牙设备搜索，以LED为信号，来尝试连接esp32;</p>
<p>UUID用于区分一个服务器中不同的服务和不同的特性，可以用UUID生成器（直接搜一个）来生成UUID;</p>
<p>在BLE中，有以下几个重要的概念：</p>
<ul>
<li><p>BLE设备 (BLE Device): </p>
<ul>
<li>任何能够进行BLE通信的物理设备都可以被认为是一个BLE设备。这包括手机或平板或ESP32。</li>
</ul>
</li>
<li><p>BLE服务器 (BLE Server): </p>
<ul>
<li>在BLE通信中，服务器是保存并提供数据的设备。服务器拥有一种称为“GATT (Generic Attribute Profile)”的数据结构，这个数据结构包含了这个服务器可以提供的所有数据。</li>
</ul>
</li>
<li><p>BLE服务 (BLE Service): </p>
<ul>
<li>在GATT数据结构中，服务是一种组织数据的方式。每个服务都有一个唯一的UUID，以标识这个服务。服务包含了一组特性，每个特性都代表了一个数据点。</li>
</ul>
</li>
<li><p>BLE特性 (BLE Characteristic): </p>
<ul>
<li>特性代表了一个数据点，例如一个传感器的读数或一个开关的状态。每个特性都有一个唯一的UUID，以标识这个特性。特性可以有不同的属性，例如可以读取、可以写入、可以通知等。</li>
</ul>
</li>
</ul>
<p>因此需要在代码中一步步创建以上四个对象。最后开始服务和开始广播，则可以在手机或者平板中找到对应的esp32设备进行连接。</p>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Arduino.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;BLEDevice.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LED_PIN 2</span></span><br><span class="line"></span><br><span class="line"><span class="type">bool</span> deviceConnected = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SERVICE_UUID           <span class="string">&quot;fdad0fc5-a2af-4afd-a90e-4b1b590687bf&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> CHARACTERISTIC_UUID    <span class="string">&quot;5a5409a9-1206-4f6d-8f0b-c758946329e2&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MyServerCallbacks</span>: <span class="keyword">public</span> BLEServerCallbacks &#123;</span><br><span class="line">  <span class="function"><span class="type">void</span> <span class="title">onConnect</span><span class="params">(BLEServer* pServer)</span> </span>&#123;</span><br><span class="line">    deviceConnected = <span class="literal">true</span>;</span><br><span class="line">    <span class="built_in">digitalWrite</span>(LED_PIN, HIGH);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="type">void</span> <span class="title">onDisconnect</span><span class="params">(BLEServer* pServer)</span> </span>&#123;</span><br><span class="line">    deviceConnected = <span class="literal">false</span>;</span><br><span class="line">    <span class="built_in">digitalWrite</span>(LED_PIN, LOW);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">setup</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  Serial.<span class="built_in">begin</span>(<span class="number">115200</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 创建设备</span></span><br><span class="line">  BLEDevice::<span class="built_in">init</span>(<span class="string">&quot;ESP32_BLE&quot;</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">//创建服务器</span></span><br><span class="line">  BLEServer *pServer = BLEDevice::<span class="built_in">createServer</span>();</span><br><span class="line">  pServer-&gt;<span class="built_in">setCallbacks</span>(<span class="keyword">new</span> <span class="built_in">MyServerCallbacks</span>());</span><br><span class="line"></span><br><span class="line">  <span class="comment">//创建服务</span></span><br><span class="line">  BLEService *pService = pServer-&gt;<span class="built_in">createService</span>(SERVICE_UUID);</span><br><span class="line"></span><br><span class="line">  <span class="comment">//创建特性</span></span><br><span class="line">  BLECharacteristic *pCharacteristic = pService-&gt;<span class="built_in">createCharacteristic</span>(</span><br><span class="line">    CHARACTERISTIC_UUID,</span><br><span class="line">    BLECharacteristic::PROPERTY_READ   |</span><br><span class="line">    BLECharacteristic::PROPERTY_WRITE  |</span><br><span class="line">    BLECharacteristic::PROPERTY_NOTIFY |</span><br><span class="line">    BLECharacteristic::PROPERTY_INDICATE</span><br><span class="line">  );</span><br><span class="line"></span><br><span class="line">  <span class="comment">//开始服务</span></span><br><span class="line">  pService-&gt;<span class="built_in">start</span>();</span><br><span class="line"></span><br><span class="line">  <span class="comment">//开始广播</span></span><br><span class="line">  BLEAdvertising *pAdvertising = pServer-&gt;<span class="built_in">getAdvertising</span>();</span><br><span class="line">  pAdvertising-&gt;<span class="built_in">start</span>();</span><br><span class="line"></span><br><span class="line">  <span class="built_in">pinMode</span>(LED_PIN, OUTPUT);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">loop</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">2000</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>


<h2 id="WiFi模块"><a href="#WiFi模块" class="headerlink" title="WiFi模块"></a>WiFi模块</h2><p>Esp32的WiFi模块有三种工作模式：</p>
<ul>
<li>Wi-Fi Station<ul>
<li>作为网络的客户端，可以连接路由器与互联网交换数据；</li>
</ul>
</li>
<li>Access Point<ul>
<li>作为一个“热点”，可以不需要路由器，其他设备连接Esp32与其交换数据；</li>
</ul>
</li>
<li>Wi-Fi Station + Access Point<ul>
<li>两者功能兼具；</li>
</ul>
</li>
</ul>
<p>参考资料：<a class="link"   href="https://randomnerdtutorials.com/esp32-useful-wi-fi-functions-arduino/" >ESP32 Useful Wi-Fi Library Functions (Arduino IDE) <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<h3 id="Access-Point"><a href="#Access-Point" class="headerlink" title="Access Point"></a>Access Point</h3><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/05/11/ESP32%E5%85%A5%E9%97%A8%E5%AD%A6%E4%B9%A0/fig_11.png"
                      class="" width="600"
                >

<p>在AP模式下, 所有设备可以作为客户端与ESP32进行连接, 利用ESP32的Arduion框架中的<code>WiFi.h</code>, 然后通过设置wifi连接, 同时在代码种通过HTML来设计网页, 可以实现通过wifi网页控制ESP32, 或者控制机器人等.</p>
<p>示例代码, 通过wifi控制ESP32的led开关.</p>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Load Wi-Fi library</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;WiFi.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Replace with your network credentials</span></span><br><span class="line"><span class="type">const</span> <span class="type">char</span>* ssid     = <span class="string">&quot;ESP32-Access-Point&quot;</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">char</span>* password = <span class="string">&quot;123456&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Set web server port number to 80</span></span><br><span class="line">WiFiServer <span class="title function_">server</span><span class="params">(<span class="number">80</span>)</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Variable to store the HTTP request</span></span><br><span class="line">String header;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Auxiliar variables to store the current output state</span></span><br><span class="line">String output2State = <span class="string">&quot;off&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Assign output variables to GPIO pins</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> output2 = <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">setup</span><span class="params">()</span> &#123;</span><br><span class="line">  Serial.begin(<span class="number">115200</span>);</span><br><span class="line">  <span class="comment">// Initialize the output variables as outputs</span></span><br><span class="line">  pinMode(output2, OUTPUT);</span><br><span class="line">  <span class="comment">// Set outputs to LOW</span></span><br><span class="line">  digitalWrite(output2, LOW);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// Connect to Wi-Fi network with SSID and password</span></span><br><span class="line">  Serial.print(<span class="string">&quot;Setting AP (Access Point)…&quot;</span>);</span><br><span class="line">  <span class="comment">// Remove the password parameter, if you want the AP (Access Point) to be open</span></span><br><span class="line">  WiFi.softAP(ssid, password);</span><br><span class="line"></span><br><span class="line">  IPAddress IP = WiFi.softAPIP();</span><br><span class="line">  Serial.print(<span class="string">&quot;AP IP address: &quot;</span>);</span><br><span class="line">  Serial.println(IP);</span><br><span class="line">  </span><br><span class="line">  server.begin();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">loop</span><span class="params">()</span>&#123;</span><br><span class="line">  WiFiClient client = server.available();   <span class="comment">// Listen for incoming clients</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (client) &#123;                             <span class="comment">// If a new client connects,</span></span><br><span class="line">    Serial.println(<span class="string">&quot;New Client.&quot;</span>);          <span class="comment">// print a message out in the serial port</span></span><br><span class="line">    String currentLine = <span class="string">&quot;&quot;</span>;                <span class="comment">// make a String to hold incoming data from the client</span></span><br><span class="line">    <span class="keyword">while</span> (client.connected()) &#123;            <span class="comment">// loop while the client&#x27;s connected</span></span><br><span class="line">      <span class="keyword">if</span> (client.available()) &#123;             <span class="comment">// if there&#x27;s bytes to read from the client,</span></span><br><span class="line">        <span class="type">char</span> c = client.read();             <span class="comment">// read a byte, then</span></span><br><span class="line">        Serial.write(c);                    <span class="comment">// print it out the serial monitor</span></span><br><span class="line">        header += c;</span><br><span class="line">        <span class="keyword">if</span> (c == <span class="string">&#x27;\n&#x27;</span>) &#123;                    <span class="comment">// if the byte is a newline character</span></span><br><span class="line">          <span class="comment">// if the current line is blank, you got two newline characters in a row.</span></span><br><span class="line">          <span class="comment">// that&#x27;s the end of the client HTTP request, so send a response:</span></span><br><span class="line">          <span class="keyword">if</span> (currentLine.length() == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="comment">// HTTP headers always start with a response code (e.g. HTTP/1.1 200 OK)</span></span><br><span class="line">            <span class="comment">// and a content-type so the client knows what&#x27;s coming, then a blank line:</span></span><br><span class="line">            client.println(<span class="string">&quot;HTTP/1.1 200 OK&quot;</span>);</span><br><span class="line">            client.println(<span class="string">&quot;Content-type:text/html&quot;</span>);</span><br><span class="line">            client.println(<span class="string">&quot;Connection: close&quot;</span>);</span><br><span class="line">            client.println();</span><br><span class="line">            </span><br><span class="line">            <span class="comment">// turns the GPIOs on and off</span></span><br><span class="line">            <span class="keyword">if</span> (header.indexOf(<span class="string">&quot;GET /2/on&quot;</span>) &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">              Serial.println(<span class="string">&quot;GPIO 2 on&quot;</span>);</span><br><span class="line">              output2State = <span class="string">&quot;on&quot;</span>;</span><br><span class="line">              digitalWrite(output2, HIGH);</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (header.indexOf(<span class="string">&quot;GET /2/off&quot;</span>) &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">              Serial.println(<span class="string">&quot;GPIO 2 off&quot;</span>);</span><br><span class="line">              output2State = <span class="string">&quot;off&quot;</span>;</span><br><span class="line">              digitalWrite(output2, LOW);</span><br><span class="line">            &#125; </span><br><span class="line"></span><br><span class="line">            <span class="comment">// Display the HTML web page</span></span><br><span class="line">            client.println(<span class="string">&quot;&lt;!DOCTYPE html&gt;&lt;html&gt;&quot;</span>);</span><br><span class="line">            client.println(<span class="string">&quot;&lt;head&gt;&lt;meta name=\&quot;viewport\&quot; content=\&quot;width=device-width, initial-scale=1\&quot;&gt;&quot;</span>);</span><br><span class="line">            client.println(<span class="string">&quot;&lt;link rel=\&quot;icon\&quot; href=\&quot;data:,\&quot;&gt;&quot;</span>);</span><br><span class="line">            <span class="comment">// CSS to style the on/off buttons </span></span><br><span class="line">            <span class="comment">// Feel free to change the background-color and font-size attributes to fit your preferences</span></span><br><span class="line">            client.println(<span class="string">&quot;&lt;style&gt;html &#123; font-family: Helvetica; display: inline-block; margin: 0px auto; text-align: center;&#125;&quot;</span>);</span><br><span class="line">            client.println(<span class="string">&quot;.button &#123; background-color: #4CAF50; border: none; color: white; padding: 16px 40px;&quot;</span>);</span><br><span class="line">            client.println(<span class="string">&quot;text-decoration: none; font-size: 30px; margin: 2px; cursor: pointer;&#125;&quot;</span>);</span><br><span class="line">            client.println(<span class="string">&quot;.button2 &#123;background-color: #555555;&#125;&lt;/style&gt;&lt;/head&gt;&quot;</span>);</span><br><span class="line">            </span><br><span class="line">            <span class="comment">// Web Page Heading</span></span><br><span class="line">            client.println(<span class="string">&quot;&lt;body&gt;&lt;h1&gt;ESP32 Web Server&lt;/h1&gt;&quot;</span>);</span><br><span class="line">            </span><br><span class="line">            <span class="comment">// Display current state, and ON/OFF buttons for GPIO 2  </span></span><br><span class="line">            client.println(<span class="string">&quot;&lt;p&gt;GPIO 2 - State &quot;</span> + output2State + <span class="string">&quot;&lt;/p&gt;&quot;</span>);</span><br><span class="line">            <span class="comment">// If the output2State is off, it displays the ON button       </span></span><br><span class="line">            <span class="keyword">if</span> (output2State==<span class="string">&quot;off&quot;</span>) &#123;</span><br><span class="line">              client.println(<span class="string">&quot;&lt;p&gt;&lt;a href=\&quot;/2/on\&quot;&gt;&lt;button class=\&quot;button\&quot;&gt;ON&lt;/button&gt;&lt;/a&gt;&lt;/p&gt;&quot;</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">              client.println(<span class="string">&quot;&lt;p&gt;&lt;a href=\&quot;/2/off\&quot;&gt;&lt;button class=\&quot;button button2\&quot;&gt;OFF&lt;/button&gt;&lt;/a&gt;&lt;/p&gt;&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            client.println(<span class="string">&quot;&lt;/body&gt;&lt;/html&gt;&quot;</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// The HTTP response ends with another blank line</span></span><br><span class="line">            client.println();</span><br><span class="line">            <span class="comment">// Break out of the while loop</span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">          &#125; <span class="keyword">else</span> &#123; <span class="comment">// if you got a newline, then clear currentLine</span></span><br><span class="line">            currentLine = <span class="string">&quot;&quot;</span>;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (c != <span class="string">&#x27;\r&#x27;</span>) &#123;  <span class="comment">// if you got anything else but a carriage return character,</span></span><br><span class="line">          currentLine += c;      <span class="comment">// add it to the end of the currentLine</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// Clear the header variable</span></span><br><span class="line">    header = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="comment">// Close the connection</span></span><br><span class="line">    client.stop();</span><br><span class="line">    Serial.println(<span class="string">&quot;Client disconnected.&quot;</span>);</span><br><span class="line">    Serial.println(<span class="string">&quot;&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<p>烧录代码后, 打开wifi连接, 选择如下图:</p>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/05/11/ESP32%E5%85%A5%E9%97%A8%E5%AD%A6%E4%B9%A0/fig_12.png"
                      class="" width="400"
                >

<p>然后进入浏览器, 输入ip地址<code>192.168.4.1</code>, 得到以下画面.</p>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/05/11/ESP32%E5%85%A5%E9%97%A8%E5%AD%A6%E4%B9%A0/fig_13.jpg"
                      class="" width="200"
                >

<p>可以进行led的控制了.</p>
<h2 id="Mqtt通信"><a href="#Mqtt通信" class="headerlink" title="Mqtt通信"></a>Mqtt通信</h2><p>在PlatformIO中开发需要提前安装好<code>PubSubClinet.h</code>库；</p>
<p>关于Mqtt的基础知识，可以看这里：<a class="link"   href="https://randomnerdtutorials.com/what-is-mqtt-and-how-it-works/" >What is MQTT and How It Works <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p>烧录代码到esp32中，这里连接了家里的wifi，并且订阅了节点<code>test/led</code>，通过树莓派订阅节点并且向borker发送消息即可点亮或者关闭led;</p>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Arduino.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;PubSubClient.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;WiFi.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Wifi SSID/Password</span></span><br><span class="line"><span class="type">const</span> <span class="type">char</span>* ssid = <span class="string">&quot;HUAWEI&quot;</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">char</span>* password = <span class="string">&quot;22600692&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// MQTT Broker ip</span></span><br><span class="line"><span class="type">const</span> <span class="type">char</span>* mqtt_server = <span class="string">&quot;192.168.3.232&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> ledPin = <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">WiFiClient espClient;</span><br><span class="line">PubSubClient <span class="title function_">client</span><span class="params">(espClient)</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// conncet Wifi and Mqtt</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">setup_wifi</span><span class="params">()</span> &#123;</span><br><span class="line">  delay(<span class="number">10</span>);</span><br><span class="line">  Serial.println();</span><br><span class="line">  Serial.print(<span class="string">&quot;Connecting to &quot;</span>);</span><br><span class="line">  Serial.println(ssid);</span><br><span class="line"></span><br><span class="line">  WiFi.begin(ssid, password);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">while</span> (WiFi.status() != WL_CONNECTED) &#123;</span><br><span class="line">    delay(<span class="number">500</span>);</span><br><span class="line">    Serial.print(<span class="string">&quot;.&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  Serial.println(<span class="string">&quot;&quot;</span>);</span><br><span class="line">  Serial.println(<span class="string">&quot;WiFi connected&quot;</span>);</span><br><span class="line">  Serial.println(<span class="string">&quot;IP address: &quot;</span>);</span><br><span class="line">  Serial.println(WiFi.localIP());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// receive message from topic, check the message and control led</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">callback</span><span class="params">(<span class="type">char</span>* topic, byte* payload, <span class="type">unsigned</span> <span class="type">int</span> length)</span> &#123;</span><br><span class="line">  Serial.print(<span class="string">&quot;Message arrived on topic: &quot;</span>);</span><br><span class="line">  Serial.print(topic);</span><br><span class="line">  Serial.print(<span class="string">&quot;. Message: &quot;</span>);</span><br><span class="line"></span><br><span class="line">  payload[length] = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">  String message = (<span class="type">char</span>*)payload;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (message == <span class="string">&quot;led on&quot;</span>) &#123;</span><br><span class="line">    digitalWrite(ledPin, HIGH);</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (message == <span class="string">&quot;led off&quot;</span>) &#123;</span><br><span class="line">    digitalWrite(ledPin, LOW);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">setup</span><span class="params">()</span> &#123;</span><br><span class="line">  Serial.begin(<span class="number">115200</span>);</span><br><span class="line"></span><br><span class="line">  setup_wifi();</span><br><span class="line">  client.setServer(mqtt_server, <span class="number">1883</span>);</span><br><span class="line">  client.setCallback(callback);</span><br><span class="line"></span><br><span class="line">  pinMode(ledPin, OUTPUT);</span><br><span class="line">  digitalWrite(ledPin, LOW);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// loop until we&#x27;re reconnected</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">reconnect</span><span class="params">()</span> &#123;</span><br><span class="line">  <span class="keyword">while</span> (!client.connected()) &#123;</span><br><span class="line">    Serial.print(<span class="string">&quot;Attempting MQTT connection...&quot;</span>);</span><br><span class="line">    <span class="comment">// Attempt to connect</span></span><br><span class="line">    <span class="keyword">if</span> (client.connect(<span class="string">&quot;ESP8266Client&quot;</span>)) &#123;</span><br><span class="line">      Serial.println(<span class="string">&quot;connected&quot;</span>);</span><br><span class="line">      <span class="comment">// Subscribe to Mqtt topics</span></span><br><span class="line">      client.subscribe(<span class="string">&quot;test/led&quot;</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      Serial.print(<span class="string">&quot;failed, rc=&quot;</span>);</span><br><span class="line">      Serial.print(client.state());</span><br><span class="line">      Serial.println(<span class="string">&quot; try again in 5 seconds&quot;</span>);</span><br><span class="line">      <span class="comment">// Wait 5 seconds before retrying</span></span><br><span class="line">      delay(<span class="number">5000</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">loop</span><span class="params">()</span> &#123;</span><br><span class="line">  <span class="keyword">if</span> (!client.connected()) &#123;</span><br><span class="line">    reconnect();</span><br><span class="line">  &#125;</span><br><span class="line">  client.loop();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>



<p>在树莓派中订阅topic并且发送消息</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">mosquitto_pub -d -t <span class="built_in">test</span>/led -m <span class="string">&quot;led on&quot;</span></span><br><span class="line">mosquitto_pub -d -t <span class="built_in">test</span>/led -m <span class="string">&quot;led off&quot;</span></span><br></pre></td></tr></table></figure></div>
<p>能观察到led的开关。</p>
<h1 id="🪄常见问题"><a href="#🪄常见问题" class="headerlink" title="🪄常见问题"></a>🪄常见问题</h1><hr>
<h2 id="无法定位到库"><a href="#无法定位到库" class="headerlink" title="无法定位到库"></a>无法定位到库</h2><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/05/11/ESP32%E5%85%A5%E9%97%A8%E5%AD%A6%E4%B9%A0/fig_10.png"
                      class="" width="800"
                >

<p>在项目工程文件夹中<code>platformio.ini</code>中添加<code>lib_deps = ESP32Servo</code>，然后重新编译。</p>
<div class="highlight-container" data-rel="Ini"><figure class="iseeu highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="section">[env:esp32dev]</span></span><br><span class="line"><span class="attr">platform</span> = espressif32</span><br><span class="line"><span class="attr">board</span> = esp32dev</span><br><span class="line"><span class="attr">framework</span> = ardui<span class="literal">no</span></span><br><span class="line"><span class="attr">lib_deps</span> = ESP32Servo</span><br></pre></td></tr></table></figure></div>

<p>多个库的话，用空格隔开</p>
<div class="highlight-container" data-rel="Ini"><figure class="iseeu highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="attr">lib_deps</span> = </span><br><span class="line">    MFRC522</span><br><span class="line">    IRremote</span><br></pre></td></tr></table></figure></div>

<h2 id="无法烧录"><a href="#无法烧录" class="headerlink" title="无法烧录"></a>无法烧录</h2><ul>
<li>检查串口是否被占用，或者是否连接到错误的串口；</li>
<li>检查ESP32的pin2是否外部输入高电平，如果是则无法烧录；</li>
</ul>
<h2 id="中断函数"><a href="#中断函数" class="headerlink" title="中断函数"></a>中断函数</h2><p>中断函数很难用，一般情况下不要使用，而且不要在中断函数中用串口发送信息。</p>
]]></content>
      <categories>
        <category>Electronics and Embedded System</category>
      </categories>
  </entry>
  <entry>
    <title>Article Extract</title>
    <url>/2023/10/05/Article-Extract/</url>
    <content><![CDATA[<h1 id="Science-amp-Technology"><a href="#Science-amp-Technology" class="headerlink" title="Science&amp;Technology"></a>Science&amp;Technology</h1><h1 id="Economics"><a href="#Economics" class="headerlink" title="Economics"></a>Economics</h1><h1 id="Psychology"><a href="#Psychology" class="headerlink" title="Psychology"></a>Psychology</h1><h2 id="How-to-get-motivated-even-when-you-don’t-feel-like-it"><a href="#How-to-get-motivated-even-when-you-don’t-feel-like-it" class="headerlink" title="How to get motivated even when you don’t feel like it"></a>How to get motivated even when you don’t feel like it</h2><p>You’ve always aspired to be a professional artist. At last, this dream may become a reality, and you’re creating a portfolio to submit to art programs. But as the application deadline looms, you suddenly find yourself unmotivated, and avoiding the canvas altogether.</p>
<p>Why does motivation seem so fickle? And what even is it in the first place? </p>
<p>Psychologists define motivation as the desire or impetus to initiate and maintain a particular behavior. In other words, it’s the energy that drives you to do something. And knowing the source of that drive is particularly important when it comes to understanding how to maintain it.</p>
<p>These motivational forces generally fall into two broad categories: intrinsic and extrinsic. Intrinsic motivation is involved when you experience an activity as an end in itself. Take a hobby, like playing video games. The experience largely explains the desire to do it. Performing tasks that feel right in the moment or that you find a meaningful, interesting, or satisfying are driven by intrinsic motivation. </p>
<p>Extrinsic motivation, on the other hand, refers to pursuing a task as a means to an end. While few would consider going to the dentist as an enjoyable activity, you’re often motivated by the outcome of having clean, healthy teeth. Other examples of extrinsic motivation include completing a task to receive some sort of reward, whether it’s praise, power, or money. Notably, these rewards tend to come later, like receiving a bonus at the end of a quarter, or winning a competition after months of training. While extrinsic rewards, like getting paid, may seem appealing, their effectiveness can be surprisingly short-lived. </p>
<p>For example, a 2017 study found that those who were highly focused on the outcomes of their New Year’s resolutions or driven by extrinsic motivation weren’t the most likely to stick to them. What did predict persistence, however, was how much a person enjoyed pursuing their goals. In other words, you’re more likely to maintain an exercise routine if you take classes you enjoy, rather than just those that build your biceps. </p>
<p>Years of psychology research have shown that high levels of intrinsic motivation for school, a job, or an exercise class are more likely to keep you engaged in the long run. Day-to-day actions, though, are rarely either exclusively intrinsically motivated. Study for histroy exam, for example, can be intrinsically motivated if you’re curious about the culture of ancient Egypt. But extrinsic motivators may also be at play, as you aim to get good grade or feel pressure from family members to do well in school. But having multiple motivators isn’t always better. </p>
<p>One study of military cadets found that those who were driven both by intrinsic motivators, like self-improvement, and extrinsic motivators, like the outcome of getting a good job, were overall less motivated than cadets driven by just one of these factors. As a result, these cadets performed worse and were less likely to graduate. Psychologists call this phenomenon the overjustification effect, the idea that additional extrinsic motivators can actually muddy the waters when you already have the intrinsic drive to do something. </p>
<p>But this is only a problem if you already find a task motivating. When you’re faced with an activity you find tedious or uninteresing, adding extrinsic rewards can be beneficial. In this way, extrincis motivators can provide sufficient justification. While you may never enjoy doing the laundry, it may feel less daunting if you get praise from a loved one, or even promise yourself that you’ll watch your favorite TV show when you’re done folding. </p>
<p>Motication is complicated. And sometimes, no matter how passionate you are about a goal or hobby, finding the motivation to actually do it can be difficult. But there are things you can do to increase your drive, even when it feels impossible. Focus on building intrinsic motivation by making the task more fun in the moment. Asking a friend to join you or simply putting on your favorite playlist can give you the boost to get started and stick with your goals for the long haul. </p>
]]></content>
  </entry>
  <entry>
    <title>FOC控制器设计</title>
    <url>/2024/04/08/FOC%E6%8E%A7%E5%88%B6%E5%99%A8%E8%AE%BE%E8%AE%A1/</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>Hexo部署Githubpages</title>
    <url>/2023/09/26/Hexo%E9%83%A8%E7%BD%B2Githubpages/</url>
    <content><![CDATA[<blockquote>
<p>本教程用于将本地的hexo博客部署到github pages上, 以实现在互联网上的访问; (github pages目前不需要科学上网)</p>
</blockquote>
<h2 id="设置Github密钥"><a href="#设置Github密钥" class="headerlink" title="设置Github密钥"></a>设置Github密钥</h2><p>github采用ssh加密的方式来推送代码, 推送的时候, git会匹配私钥(自己电脑里)和github上面的公钥是否配对, 若配对则认为你是合法用户, 则允许推送.</p>
<p>(在任意地方)右键打开<code>Git Bash Here</code>.</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">&quot;2557095375@qq.com&quot;</span></span><br></pre></td></tr></table></figure></div>
<p>生成ssh密钥文件, 然后连续三次回车;</p>
<p>打开github的账户中的<code>Settings</code>, 打开<code>SSH and GPG keys</code>这个页面;</p>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/09/26/Hexo%E9%83%A8%E7%BD%B2Githubpages/fig_1.png"
                      class="" width="600"
                >

<p><code>C:\Users\hwx_pc\.ssh</code>在这个路径中找到文件<code>id_rsa.pub</code>(也可以用Everything找), 用记事本打开, 将内容复制并粘贴到<code>key</code>中;</p>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/09/26/Hexo%E9%83%A8%E7%BD%B2Githubpages/fig_2.png"
                      class="" width="600"
                >

<p>添加完成如图；</p>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/09/26/Hexo%E9%83%A8%E7%BD%B2Githubpages/fig_3.png"
                      class="" width="400"
                >

<p>回到<code>github bash</code>, 输入:</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">ssh git@github.com</span><br></pre></td></tr></table></figure></div>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/09/26/Hexo%E9%83%A8%E7%BD%B2Githubpages/fig_4.png"
                      class="" width="400"
                >
<p>这样就是连接成功了.</p>
<h2 id="新建仓库"><a href="#新建仓库" class="headerlink" title="新建仓库"></a>新建仓库</h2><p>在github新建一个仓库, 输入自己的账户名, 后面加上<code>.github.io</code>, 点击<code>Initialize this repository with a README</code></p>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/09/26/Hexo%E9%83%A8%E7%BD%B2Githubpages/fig_6.png"
                      class="" width="400"
                >

<h2 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h2><p>在hexo的根目录下找到<code>_config.yml</code>文件, 修改<code>Deployment</code>中的参数选项;</p>
<div class="highlight-container" data-rel="Yml"><figure class="iseeu highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">https://github.com/Roboticshwx/Roboticshwx.github.io.git</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">main</span></span><br></pre></td></tr></table></figure></div>
<p><code>repo</code>为github pages的访问ip地址;</p>
<h2 id="部署-x2F-更新"><a href="#部署-x2F-更新" class="headerlink" title="部署&#x2F;更新"></a>部署&#x2F;更新</h2><p>想要部署或者内容, 在hexo根目录下输入以下命令</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure></div>
<p>即可访问该网页;<br><a class="link"   href="https://roboticshwx.github.io/" >Fomalhaut Wiki <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<h2 id="问题排查"><a href="#问题排查" class="headerlink" title="问题排查"></a>问题排查</h2><ul>
<li>Connection refuesd<br>在<code>git bash</code>中，输入<code>ssh-keygen -t rsa -C &quot;2557095375@qq.com&quot;</code>后可能会出现一种情况, 报错显示无法访问;<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">ssh: connect to host github.com port 22: Connection refused</span><br></pre></td></tr></table></figure></div>
确认浏览器可以正常登入github之后, 可能是因为22端口被电脑或路由器的防火墙屏蔽了, 则用443端口代替;</li>
</ul>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">vim ~/.ssh/config</span><br></pre></td></tr></table></figure></div>

<p>在这个文件添加如下内容, ssh连接github的时候就会使用443端口;</p>
<div class="highlight-container" data-rel="Vim"><figure class="iseeu highlight vim"><table><tr><td class="code"><pre><span class="line">Host github.<span class="keyword">com</span></span><br><span class="line">    Hostname ssh.github.<span class="keyword">com</span></span><br><span class="line">    Port <span class="number">443</span></span><br></pre></td></tr></table></figure></div>
<p>再进行测试即可.</p>
<p>如果还是不行, 可能github的DNS被污染了, 可以从下面文章找到解决方法.</p>
<p>参考资料: <a class="link"   href="https://zhuanlan.zhihu.com/p/521340971" >坑：ssh: connect to host github.com port 22: Connection refused <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<ul>
<li>Unsupported proxy syntax in ‘:7890’:No host part in the URL</li>
</ul>
<p>输入<code>hexo d</code>之后可能会出现以下报错:</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">fatal: unable to access <span class="string">&#x27;https://github.com/Roboticshwx/Roboticshwx.github.io.git/&#x27;</span>: Unsupported proxy syntax <span class="keyword">in</span> <span class="string">&#x27;:7890&#x27;</span>: No host part <span class="keyword">in</span> the URL</span><br></pre></td></tr></table></figure></div>

<p>这个情况是本机系统代理端口和git端口不一致导致的, 也有可能是没有设置git对应端口;</p>
<p>查看自己本机的系统代理;<br><code>设置</code>–<code>网络和Internet</code>–<code>代理</code>–<code>手动设置代理</code></p>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/09/26/Hexo%E9%83%A8%E7%BD%B2Githubpages/fig_5.png"
                      class="" width="400"
                >

<p>修改git配置, 其中7890为电脑的端口;</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">git config --global http.proxy http://127.0.0.1:7890</span><br><span class="line">git config --global https.proxy http://127.0.0.1:7890</span><br></pre></td></tr></table></figure></div>

<p>再次部署则成功.</p>
<ul>
<li>Error: EPERM: operation not permitted, unlink ‘D:\OneDrive - 华南师范大学\fomalhaut_wiki.deploy_git\2024\09\14’</li>
</ul>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/09/26/Hexo%E9%83%A8%E7%BD%B2Githubpages/fig_7.png"
                      class="" width="400"
                >

<p>疑似OneDrive同步导致的问题, 重启OneDrive等待同步完成即可.</p>
]]></content>
      <categories>
        <category>Basic Computer Programming</category>
      </categories>
  </entry>
  <entry>
    <title>IELTS Writing</title>
    <url>/2023/10/12/IEILTS-Writing/</url>
    <content><![CDATA[<h1 id="IELTs-Writing-Task-1"><a href="#IELTs-Writing-Task-1" class="headerlink" title="IELTs Writing Task 1"></a>IELTs Writing Task 1</h1><h2 id="Graph"><a href="#Graph" class="headerlink" title="Graph"></a>Graph</h2><h3 id="Car-ownership"><a href="#Car-ownership" class="headerlink" title="Car ownership"></a>Car ownership</h3><p><strong>The graph below gives information about car ownership in Britain from 1971 to 2007.</strong></p>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/10/12/IEILTS-Writing/fig_1.png"
                      class="" width="400"
                >

<p>The graph shows changes in the number of cars per household in Great Britain over a period of 36 years.</p>
<p>Overall, car ownership in Britain increased between 1971 and 2007. In particular, the percentage of households with two cars rose, while the figure for households without a car fell.</p>
<p>In 1971, almost half of all British households did not have regular use of car. Around 44% of households had one car, but only about 7% had two cars. It was uncommon for families to own three or more cars, with around 2% of households falling into this category.</p>
<p>The one-car household was the most common type from the late 1970s onwards, although there was little change in the figures for the category. The biggest change was seen in the proportion of households without a car, which fell steadily over the 36-year period to around 25% in 2007. In contrast, the proportion of two-car families rose steadily, reaching about 26% in 2007, and the proportion of households with more than two cars rose by around 5%.</p>
<h3 id="Internet-users"><a href="#Internet-users" class="headerlink" title="Internet users"></a>Internet users</h3><p><strong>The graph below shows changes in the proportion of Internet users in three different countries from 1999 to 2009</strong></p>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/10/12/IEILTS-Writing/fig_2.png"
                      class="" width="400"
                >

<p>The line graph compares the percentage of people in three countries who used the Internet between 1999 and 2009.</p>
<p>It is clear that the proporton of the population who used the Internet in each country over the period shown. Canada experienced the fastest growth in Internet usage, whereas Mexico remained the country with lowest proportion of people who accessed the Internet.</p>
<p>In 1999, the proportion of people using the Internet in the USA stood at about 20%. By contrast, the figures for Canada and Mexico were significantly lower, at around 10% and 5% respectively. However, in the year 2002, Canada overtook the USA in terms of the proportion of its citizens who went online.</p>
<p>In 2005, Internet usage in both the USA and Canada rose to around 70% of the population, while the figure for Mexico reached just over 25%. Four years later, in 2009, the percentage of Internet users was considerably higher in Candada than in the other two countries. In that year, almost 100% of Canadians used the Internet, compared to about 80% of Americans and only 40% of Mexicans.</p>
<h3 id="Migration"><a href="#Migration" class="headerlink" title="Migration"></a>Migration</h3><p><strong>The chart below shows figures for long-term international migration to and from the UK over a 10-year period.</strong></p>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/10/12/IEILTS-Writing/fig_3.png"
                      class="" width="400"
                >

<p>The chart gives information about UK immigration, emigration and net migration between 1999 and 2008.</p>
<p>Both immigration and emigration rates rose over the period shown, but the figures for immigration were significantly higher. Net migration peaked in 2004 and 2007.</p>
<p>In 1999, over 450,000 people came to live in the UK, while the number of people who emigrated stood at just under 300,000. The figure for net migration was around 160,000, and it reamined at a similar level until 2003. From 1999 to 2004, the immigration rate rose by nearly 150,000 people, but there was a much smaller rise in emigration. Net migration peaked at almost 250,000 people in 2004.</p>
<p>After 2004, the rate of immigration remained high, but the number of people emigrating fluctuated. Emigration fell suddenly in 2007, before peaking at about 420,000 people in 2008. As a result, the net migration figure rose to around 240,000 in 2007, but fell back to around 160,000 in 2008.</p>
]]></content>
      <categories>
        <category>English Learning</category>
      </categories>
  </entry>
  <entry>
    <title>IELTS Speaking</title>
    <url>/2023/10/17/IELTS-Speaking/</url>
    <content><![CDATA[<h2 id="Oral-expression-accumulation"><a href="#Oral-expression-accumulation" class="headerlink" title="Oral expression accumulation"></a>Oral expression accumulation</h2>
  <div class="note p-4 mb-4 rounded-small blue">
    <p>Your <strong>vision</strong> was right.</p>

  </div>

<blockquote>
<p>A vision refers to a mental image or a dream, commonly used in the real world to refer to a person’s ability to think about the future with imagination or intelligence.</p>
</blockquote>

  <div class="note p-4 mb-4 rounded-small orange">
    <p>Tai Lung has <strong>broken out</strong> of prison.<br>Do you feel stuck? Try to <strong>break out</strong> of your daily routine.<br>You <strong>broke out</strong> of your normal roles to accomplish something as a family.</p>

  </div>

<blockquote>
<p>It means to escapte from a place, aslo can be used figuratively, meaning to escape a situation.</p>
</blockquote>

  <div class="note p-4 mb-4 rounded-small pink">
    <p>He wasn’t even meant to <strong>be</strong> here.</p>

  </div>

<blockquote>
<p>Contrastive stress. It means something wasn’t planned or supposed to happen.</p>
</blockquote>

  <div class="note p-4 mb-4 rounded-small cyan">
    <p>All good things come to an end.</p>

  </div>

<blockquote>
<p>When going through changes or losses in life, one can refer to this saying. It works as a reminder to appreciate the good moments because they will not always be there.</p>
</blockquote>

  <div class="note p-4 mb-4 rounded-small green">
    <p>I don’t like to use this phrase because it’s offensive to <strong>our kind</strong>.</p>

  </div>

<blockquote>
<p>One’s kind refers to people with whom we have things in common or who share a similar background to ours.</p>
</blockquote>

  <div class="note p-4 mb-4 rounded-small white">
    <p>And if I go back, Max, it’s <strong>the end of the line</strong> for me.</p>

  </div>

<blockquote>
<p>Something is the end of the line, it means that it has ended or that it won’t be possible to continue it and it’s better to give it up.</p>
</blockquote>

  <div class="note p-4 mb-4 rounded-small red">
    <p>Friends, <strong>I am afraid</strong> that I have some terrible news.<br><strong>I’m afraid</strong> I can’t help you. It’s gone, you know.<br>Well, <strong>I’m afraid</strong> Fiona isn’t really warming up to Prince Charming.</p>

  </div>

<blockquote>
<p>It can be used when I have to introduce some sad or bad news. Also can be used as a synonym for I’m sorry.</p>
</blockquote>

  <div class="note p-4 mb-4 rounded-small black">
    <p>He’s not going to eat us, we’ve already <strong>been over</strong> it.<br>But first, let’s <strong>go over</strong> the rules.</p>

  </div>

<blockquote>
<p>Going over something is the same as reviewing, examining, or checking something carefully.</p>
</blockquote>

  <div class="note p-4 mb-4 rounded-small yellow">
    <p>We gotta save him. &#x3D; We have got to save him.<br>You gotta be kidding me. &#x3D; You got to be kidding me.</p>

  </div>

<blockquote>
<p>“we have got to” becomes “we gotta”</p>
</blockquote>

  <div class="note p-4 mb-4 rounded-small grey">
    <p>Same way I <strong>found out</strong> your name.<br>And I intent to <strong>find out</strong> which.</p>

  </div>

<blockquote>
<p>To find out means to discover or to become aware and learn about sth.</p>
</blockquote>

  <div class="note p-4 mb-4 rounded-small blue">
    <p>So your mistake will be <strong>short-lived</strong>.<br>His experience as a professional lawyer was short-lived. </p>

  </div>

<blockquote>
<p>If sth is short-lived, it only lasts for a short period of time.</p>
</blockquote>

  <div class="note p-4 mb-4 rounded-small orange">
    <p>I’m all ears.</p>

  </div>

<blockquote>
<p>I’m all ears &#x3D; I’m listening carefully.</p>
</blockquote>

  <div class="note p-4 mb-4 rounded-small pink">
    
  </div>

<blockquote>
</blockquote>

  <div class="note p-4 mb-4 rounded-small cyan">
    
  </div>

<blockquote>
</blockquote>

  <div class="note p-4 mb-4 rounded-small green">
    
  </div>

<blockquote>
</blockquote>

  <div class="note p-4 mb-4 rounded-small white">
    
  </div>

<blockquote>
</blockquote>

  <div class="note p-4 mb-4 rounded-small red">
    
  </div>

<blockquote>
</blockquote>

  <div class="note p-4 mb-4 rounded-small black">
    
  </div>

<blockquote>
</blockquote>

  <div class="note p-4 mb-4 rounded-small yellow">
    
  </div>

<blockquote>
</blockquote>

  <div class="note p-4 mb-4 rounded-small grey">
    
  </div>

<blockquote>
</blockquote>
<h2 id="Speaking-practice-by-gpt-4"><a href="#Speaking-practice-by-gpt-4" class="headerlink" title="Speaking practice by gpt-4"></a>Speaking practice by gpt-4</h2><blockquote>
<p>Chatgpt prompts: I want you to act as an IELTS speaking examiner. I will show you the question. Then I give a ambiguous answer which refers to my real situation. You should correct it and tell me how to express to the IELTS examiner more colloquially not complicatedly.</p>
</blockquote>
]]></content>
      <categories>
        <category>English Learning</category>
      </categories>
  </entry>
  <entry>
    <title>IELTS阅读做题技巧</title>
    <url>/2024/01/03/IELTS%E9%98%85%E8%AF%BB%E5%81%9A%E9%A2%98%E6%8A%80%E5%B7%A7/</url>
    <content><![CDATA[<h2 id="雅思阅读概述"><a href="#雅思阅读概述" class="headerlink" title="雅思阅读概述"></a>雅思阅读概述</h2><p>流程：听力-阅读-写作<br>时间：60min三篇阅读，平均一篇阅读20min<br>模式：机考&#x2F;纸笔</p>
<p>目标分数：7.5</p>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2024/01/03/IELTS%E9%98%85%E8%AF%BB%E5%81%9A%E9%A2%98%E6%8A%80%E5%B7%A7/fig_1.png"
                      class="" width="400"
                >
<p>错误率： 每篇文章错误在两个以内，三篇文章总共错题不超过六道；</p>
<h2 id="找到定位词"><a href="#找到定位词" class="headerlink" title="找到定位词"></a>找到定位词</h2><p>勾画出题干中的定位词，使用组合定位：</p>
<ul>
<li>眼球词词汇+n. (眼球词词汇指的是能够快速锁定，较为特殊的词汇，例如时间地点数字人名以及长难生词)</li>
<li>adj.+n. (从抽象到具体，抽象名词不需要画出来，只需要记具体名词)</li>
<li>n.+n. (总会有原词出现，因此最好把所有出现的名词都画下来)</li>
</ul>
<blockquote>
<p>名词不好进行同义替换，因此可以用于定位；</p>
</blockquote>
<h2 id="考点词同义替换"><a href="#考点词同义替换" class="headerlink" title="考点词同义替换"></a>考点词同义替换</h2><h3 id="1-词性替换"><a href="#1-词性替换" class="headerlink" title="1.词性替换"></a>1.词性替换</h3><ul>
<li>Egypt - Egyptian</li>
<li>fertilize - fertilizers</li>
</ul>
<h3 id="2-同义替换"><a href="#2-同义替换" class="headerlink" title="2.同义替换"></a>2.同义替换</h3><ul>
<li>tough - difficult</li>
<li>hard - tough</li>
<li>copy - follow - mimic - replicate - duplicate</li>
</ul>
<h3 id="3-肯否转换"><a href="#3-肯否转换" class="headerlink" title="3.肯否转换"></a>3.肯否转换</h3><ul>
<li>not traditional - new</li>
<li>worth exploring - shouldn’t exclude its possibility</li>
</ul>
<h3 id="4-抽象具体转换（子集-amp-具体化）"><a href="#4-抽象具体转换（子集-amp-具体化）" class="headerlink" title="4.抽象具体转换（子集&amp;具体化）"></a>4.抽象具体转换（子集&amp;具体化）</h3><ul>
<li>environment - light, sound and warmth</li>
<li>university - South China Normal University</li>
</ul>
<h3 id="5-解释说明（以名词为主）"><a href="#5-解释说明（以名词为主）" class="headerlink" title="5.解释说明（以名词为主）"></a>5.解释说明（以名词为主）</h3><ul>
<li>lack - do not exist</li>
</ul>
<h3 id="6-主被动"><a href="#6-主被动" class="headerlink" title="6.主被动"></a>6.主被动</h3><p>This room is for Mary - This room is occupied by Mary</p>
<h2 id="题型分解"><a href="#题型分解" class="headerlink" title="题型分解"></a>题型分解</h2><h3 id="小标题-List-of-Headings"><a href="#小标题-List-of-Headings" class="headerlink" title="小标题 List of Headings"></a>小标题 List of Headings</h3><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2024/01/03/IELTS%E9%98%85%E8%AF%BB%E5%81%9A%E9%A2%98%E6%8A%80%E5%B7%A7/fig_2.png"
                      class="" width="400"
                >

<p>对每个段落赋予方框中的一个小标题，对相应的内容进行概括；</p>
<p>可以利用其他题目来做，利用选择题的细节题来找对应；</p>
<p>做题的时候对每一个Headings进行拆解（即先阅读完所有的headings），然后再去扫读文章来确定答案</p>
<p>多注意动词和形容词的，题干中动词和形容词画出来，文章中动词和形容词画出来</p>
<p>每做完一个删除一个，一个词触发答案，所在句要检查；（检查对象，句意）</p>
<p>答案句通常出现在首局和尾句上</p>
<p>可以像老师一样去判断这个段落是否有离题</p>
<h3 id="人名匹配"><a href="#人名匹配" class="headerlink" title="人名匹配"></a>人名匹配</h3><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2024/01/03/IELTS%E9%98%85%E8%AF%BB%E5%81%9A%E9%A2%98%E6%8A%80%E5%B7%A7/fig_3.png"
                      class="" width="400"
                >

<p>把人名与观点或事迹进行对应；</p>
<p>三个位置：</p>
<ul>
<li>全称，完整的名字</li>
<li>指代 &#x2F; last name &#x2F; 身份</li>
<li>两个人一起说观点，观点属于第一作者</li>
</ul>
<p>studied&#x2F;researched&#x2F;experimented&#x2F;suggested&#x2F;chaimed&#x2F;concluded&#x2F;found&#x2F;speculated&#x2F;note+观点</p>
<p>做这种题顺序，先去扫读文章，如果一个段落中没有出现人名，则迅速跳过，如果出现人名，则看题目中有没有出现对应的人物，如果没有也是迅速跳过；</p>
<p>文章中，特定人物对应的内容一般再人物下方，也有可能往上走。</p>
<p>例如出现this，人名前有逻辑关系词(for example)，人名后方内容所剩无几</p>
<p>方向：</p>
<ul>
<li>往下</li>
<li>往上（this, for example, ‘’, 内容所剩无几）</li>
</ul>
<p>重点关注有引号的内容</p>
<h3 id="半句匹配"><a href="#半句匹配" class="headerlink" title="半句匹配"></a>半句匹配</h3><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2024/01/03/IELTS%E9%98%85%E8%AF%BB%E5%81%9A%E9%A2%98%E6%8A%80%E5%B7%A7/fig_4.png"
                      class="" width="400"
                >

<p>题干+选项&#x3D;文章中的一句话，两句话或者是半个段落的同替；</p>
<h3 id="信息包含"><a href="#信息包含" class="headerlink" title="信息包含"></a>信息包含</h3><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2024/01/03/IELTS%E9%98%85%E8%AF%BB%E5%81%9A%E9%A2%98%E6%8A%80%E5%B7%A7/fig_5.png"
                      class="" width="400"
                >

<blockquote>
<p>Which paragraph <strong>contains</strong> the following information?</p>
</blockquote>
<p>题干中的信息对应文章中的信息：原词&#x2F;同替</p>
<p>特点：</p>
<ul>
<li>不需要概括大意，只需要包含信息</li>
<li>可以有原词</li>
<li>本质是词与词的同义替换</li>
</ul>
<p>利用定位词的原理，以及考点词的同义替换，来找到对应的段落；同时借助其他题目来帮助定位；（人名，填空）</p>
<p>先通过题干中出现的抽象词，来判断出一个大致的筛选范围：</p>
<blockquote>
<p>the <strong>importance</strong> of finding the real cause under the dispute</p>
</blockquote>
<p>从题干回到文章之后，只需要扫读，找到对应的单词或者同义替换，不要去理解原文是什么意思。</p>
<p>对应出某一个词后，检查该词所在的句子其他对象是否复现，匹配</p>
<p>抽象词对应：</p>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2024/01/03/IELTS%E9%98%85%E8%AF%BB%E5%81%9A%E9%A2%98%E6%8A%80%E5%B7%A7/fig_10.png"
                      class="" width="400"
                >

<p>抽象词缩小范围，再由具体词锁定段落</p>
<p>可以通过将题干写几个中文的单词，然后再从文章对应</p>
<h3 id="判断题"><a href="#判断题" class="headerlink" title="判断题"></a>判断题</h3><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2024/01/03/IELTS%E9%98%85%E8%AF%BB%E5%81%9A%E9%A2%98%E6%8A%80%E5%B7%A7/fig_6.png"
                      class="" width="400"
                >

<p>三个选项：</p>
<ul>
<li>TRUE</li>
<li>FALSE</li>
<li>NOT GIVEN</li>
</ul>
<p>多了一个选项：if there is no information on this （题干：西瓜，原文：芒果）</p>
<p>三个基础概念：</p>
<ul>
<li>定位词</li>
<li>考点词</li>
<li>陷阱</li>
</ul>
<p>作为细节题，做法与填空题大致相同，通过题干中的定位词找到文章对应的答案句，再从两个句子中找到考点词的同义替换，或者理解句意来做题；</p>
<p>判断题的方法核心在于：<strong>理解句意</strong></p>
<p>五种陷阱：</p>
<ol>
<li>是非能够陷阱</li>
</ol>
<blockquote>
<p>Efficient cities <strong>can improve</strong> the quality of life for their inhabitants.</p>
</blockquote>
<p>can improve这里作为陷阱，句子其余部分可以作为定位词和考点词去寻找文章对应的内容。</p>
<p>文章：pointed out that these more efficient cities were able to put the difference into attracting industry and jobs or creating a better place to live.</p>
<p>显然是T</p>
<ol start="2">
<li>程度陷阱</li>
</ol>
<blockquote>
<p>The ISTP study examined public and private systems in <strong>every</strong> city of the world.</p>
</blockquote>
<p>most, only, all, -est, every, both, 数字 都可以作为程度陷阱</p>
<p>文章：The study compared the proportion of wealth poured into transport by thirty-seven cities around the world.</p>
<p>显然选择F</p>
<ol start="3">
<li>比较陷阱</li>
</ol>
<ul>
<li>不变：谁在比</li>
<li>变：比什么</li>
</ul>
<blockquote>
<p>Private schools in Japan are more modern and spacious than state-run lower secondary schools.</p>
</blockquote>
<p>文章：Schools are usually modern in design, set well back from the road and spacious inside.</p>
<p>显然是不存在比较关系，因此选NG</p>
<ol start="4">
<li>原因目的陷阱</li>
</ol>
<p>（逻辑推理，排除了所有的可能性，剩下的就是答案）</p>
<blockquote>
<p>The FAA was created as a result of the introduction of the jet engine.</p>
</blockquote>
<p>文章：An accident that occurred in the skies over the Grand Canyon in 1956 resulted in the establishment of the Federal Aviation Administration to regulate and oversee the operation of aircraft in the skies over the United States, which were becoming quite congested.</p>
<p>因此选择NG</p>
<ol start="5">
<li>动词后方陷阱</li>
</ol>
<blockquote>
<p>The essay, ‘In the company of ants’, explores ant communication.</p>
</blockquote>
<p>文章：in his essay ‘In the company of ants’, advises readers who ask what to do with the ants in their kitchen to: “Watch where you step. Be carful of little lives.’</p>
<p>根据排他性原则，这题选择NG</p>
<p>Not Given中容易考到的点</p>
<ol>
<li>权威效应<blockquote>
<p>I believe Chinese football team is much better that Brazilian one.</p>
</blockquote>
</li>
</ol>
<p>文章：Chinese football team is much better than Brazilian one.</p>
<p>选择NG，事实和人们认为的往往有出入；</p>
<ol start="2">
<li><p>主客观转换<br>原文出现发誓，承诺，愿望，决心等主观限定词，而题目去掉其限定词变成客观事实陈述，则选Not Given<br>常见有：Promise, Vow, Swear, Aim, Pledge, Resolve, Guarantee</p>
</li>
<li><p>偷换概念，范围大小变化</p>
</li>
</ol>
<ul>
<li>打印机是1885年发明的</li>
<li>激光打印机是1885年发明的</li>
</ul>
<p>一般只要题干和内容讨论的东西不在一个具体的层次，就是NG，为了减少看漏，可以两题为一组去做</p>
<p>关键是看一个行为是否具有排他性</p>
<h3 id="填空题-有选项-x2F-无选项"><a href="#填空题-有选项-x2F-无选项" class="headerlink" title="填空题 有选项&#x2F;无选项"></a>填空题 有选项&#x2F;无选项</h3><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2024/01/03/IELTS%E9%98%85%E8%AF%BB%E5%81%9A%E9%A2%98%E6%8A%80%E5%B7%A7/fig_7.png"
                      class="" width="400"
                >

<p>特征：</p>
<ul>
<li>顺序出题，个别乱序（往前找）</li>
<li>局部范围，细节出题，一般是1~3个段落</li>
<li>必有逻辑，有明现逻辑关系词，空的前后逻辑，看空的前后位置</li>
</ul>
<p><strong>方法</strong>：</p>
<p>填空题方法的核心在于：<strong>特征关系</strong></p>
<p>现在一篇文章中锁定一个段落，然后再到一句话，最后一个词；</p>
<p><strong>定位段落</strong>：<br>在题干中画出定位词之后，回到文章先找<strong>眼球词词汇</strong>，然后再到名词或者形容词+名词；最后是由名词来确定固定的段落；</p>
<p>如果没有眼球词词汇，可以利用邻近题来帮助定位；</p>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2024/01/03/IELTS%E9%98%85%E8%AF%BB%E5%81%9A%E9%A2%98%E6%8A%80%E5%B7%A7/fig_8.png"
                      class="" width="400"
                >

<p>此题的定位词为： complex, Step Pyramid, surroundings, Egyptian, past</p>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2024/01/03/IELTS%E9%98%85%E8%AF%BB%E5%81%9A%E9%A2%98%E6%8A%80%E5%B7%A7/fig_9.png"
                      class="" width="400"
                >

<p>此题的定位词为： 18th century, engineer, first iron bridge</p>
<p><strong>定位句子</strong><br>利用定位词中考点词的同义替换来找到对应的句子；</p>
<p><strong>定位单词</strong></p>
<ul>
<li>逻辑关系词 (but, however, more, in addition…)</li>
</ul>
<p>在空的前后找到逻辑关系词的同义替换，定位到具体的单词；</p>
<ul>
<li>空前后关系<ol>
<li>确定词数</li>
<li>确定词性</li>
<li>确定特征（通过题干的前后找到修饰这个单词的内容）</li>
</ol>
</li>
</ul>
<h3 id="单选题"><a href="#单选题" class="headerlink" title="单选题"></a>单选题</h3><blockquote>
<p>雅思阅读的所有题目，每个问题都有对应的答案句，雅思阅读的题目没有推理，只有对应的答案句，因此每个题目都要找到对应的<strong>答案句</strong>。</p>
</blockquote>
<p>特征：</p>
<ul>
<li>顺序出题，题题之间顺序出题，选项也是顺序出题</li>
<li>出题频率为60%</li>
<li>单题不会跨段出题，找到A选项后，BCD都会在该段落以内，或者没有提到；</li>
</ul>
<p>&#x3D;&#x3D;务必找到答案句！&#x3D;&#x3D;</p>
<p>不需要提前阅读选项，提前阅读容易被误导；</p>
<p>做法：勾画题干的定位词和考点词，然后定位到答案句进行选项比对；（和填空题差不多）</p>
<p>就算选项在文章有对应的地方，即选项是正确的，但是如何选项没有回答题干的问题，则视为错误；</p>
<p>如果题干需要概述<strong>一个段落</strong>，以句为单位找段落中有逻辑关系词的句子；(And不算)</p>
<p>像选项<code>it would be wrong to overlook the contribution of sound to the artistry of films</code>这种用了<code>wrong</code>或者<code>mistaken</code>的委婉语气，一般都是正确的；</p>
<h3 id="多选题"><a href="#多选题" class="headerlink" title="多选题"></a>多选题</h3><ol>
<li>阅读5个题干</li>
<li>勾画定位词</li>
</ol>
<p>通过多选的选项和文章内容进行反复比较，一旦出现足够数目的正确答案就结束；</p>
<p>每次只阅读一个段落</p>
<p>优先选择柔和语气</p>
<h2 id="完整套题做法"><a href="#完整套题做法" class="headerlink" title="完整套题做法"></a>完整套题做法</h2><p>先做细节题，再做全文题</p>
<p>细节题的反应过程中，也可以得到全文题的答案</p>
<p>套题分类：</p>
<ul>
<li>2全文题，1细节题</li>
<li>2细节题，1全文题</li>
<li>全细节题</li>
</ul>
<p>全文题：contain，people，heading</p>
<p>2细节题和全细节题，<strong>需要按题型来做</strong>，即先做细节题，如果发现该段落的细节题已经考察完了，下一个细节题更换段落了，则需要完成该段落的全文题。</p>
<p>当全文题比较多的时候，即2全文题，1细节题时，<strong>应该按照段落去做</strong>，完成一个段落的所有题目，再去完成下一个段落。</p>
<p>先处理好，全文题的选项，定出细节题第一题的位置，不做题，如果一个段落有细节也有全文，先做细节题，可以通过细节题推导全文题</p>
<p>一般只会出现contain+people或者heading+people</p>
<p>判断完细节题开始的段落之后，前面没有细节题的段落可以扫读看有没有人名和contain的代号信息；</p>
]]></content>
      <categories>
        <category>English Learning</category>
      </categories>
  </entry>
  <entry>
    <title>Isaac Sim (Container)学习</title>
    <url>/2024/08/29/Issac-Sim-Container-%E5%AD%A6%E4%B9%A0/</url>
    <content><![CDATA[<blockquote>
<p>与下载到本地Linux的Isaac Sim不同, 由于采用服务器的方式, 整个Isaac Sim都需要在Docker中运行, 所有的应用都要采取Headless mode.</p>
</blockquote>
<h2 id="Isaac-Sim-安装"><a href="#Isaac-Sim-安装" class="headerlink" title="Isaac Sim 安装"></a>Isaac Sim 安装</h2><p><a class="link"   href="https://docs.omniverse.nvidia.com/isaacsim/latest/installation/install_container.html" >Container Installation <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<h2 id="Isaac-Sim-启动"><a href="#Isaac-Sim-启动" class="headerlink" title="Isaac Sim 启动"></a>Isaac Sim 启动</h2><p>创建docker容器</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">docker run --name isaac-sim --entrypoint bash -it --runtime=nvidia --gpus all -e <span class="string">&quot;ACCEPT_EULA=Y&quot;</span> --network=host \</span><br><span class="line">    -e <span class="string">&quot;PRIVACY_CONSENT=Y&quot;</span> \</span><br><span class="line">    -v ~/docker/isaac-sim/cache/kit:/isaac-sim/kit/cache:rw \</span><br><span class="line">    -v ~/docker/isaac-sim/cache/ov:/root/.cache/ov:rw \</span><br><span class="line">    -v ~/docker/isaac-sim/cache/pip:/root/.cache/pip:rw \</span><br><span class="line">    -v ~/docker/isaac-sim/cache/glcache:/root/.cache/nvidia/GLCache:rw \</span><br><span class="line">    -v ~/docker/isaac-sim/cache/computecache:/root/.nv/ComputeCache:rw \</span><br><span class="line">    -v ~/docker/isaac-sim/logs:/root/.nvidia-omniverse/logs:rw \</span><br><span class="line">    -v ~/docker/isaac-sim/data:/root/.local/share/ov/data:rw \</span><br><span class="line">    -v ~/docker/isaac-sim/documents:/root/Documents:rw \</span><br><span class="line">    nvcr.io/nvidia/isaac-sim:4.1.0</span><br></pre></td></tr></table></figure></div>

<p>加载GUI</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">./runheadless.native.sh -v</span><br></pre></td></tr></table></figure></div>

<p>同时启用多个doker容器的终端</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">docker <span class="built_in">exec</span> -it isaac-sim bash</span><br></pre></td></tr></table></figure></div>

<p>之后的docker启动只能从服务器主机进行, 不能直接ssh进到container中启动Isaac Sim</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">ssh -p 22 amdt@10.30.47.11 <span class="comment">#Password: AMDT123456</span></span><br><span class="line">docker start isaac-sim</span><br><span class="line">docker <span class="built_in">exec</span> -it isaac-sim bash</span><br></pre></td></tr></table></figure></div>

<h3 id="Vscode连接source-code"><a href="#Vscode连接source-code" class="headerlink" title="Vscode连接source code"></a>Vscode连接source code</h3><p>由于服务器是通过vscode中的remote ssh连接, 然后isaac-sim在docker中运行.</p>
<p>在docker中配置ssh, 然后用vscode的remote-ssh连接</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 安装ssh</span></span><br><span class="line">apt update</span><br><span class="line">apt install openssh-server</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改配置文件</span></span><br><span class="line">vim /etc/ssh/sshd_config</span><br></pre></td></tr></table></figure></div>

<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">Port 6789</span><br><span class="line">PermitRootLogin <span class="built_in">yes</span></span><br></pre></td></tr></table></figure></div>

<p>然后重启和检查ssh服务</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">service ssh restart</span><br><span class="line">service ssh status</span><br></pre></td></tr></table></figure></div>

<p>设置登录密码</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">passwd <span class="comment">#设置为amdt</span></span><br></pre></td></tr></table></figure></div>

<p>在windows终端, 如果之前生成过ssh key, 需要删除</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">ssh-keygen -R [10.30.47.11]:6789</span><br></pre></td></tr></table></figure></div>

<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">ssh -p 6789 root@10.30.47.11 <span class="comment">#Password: amdt</span></span><br></pre></td></tr></table></figure></div>

<h2 id="基本操作逻辑"><a href="#基本操作逻辑" class="headerlink" title="基本操作逻辑"></a>基本操作逻辑</h2><ul>
<li>Alt+左键旋转视角</li>
<li>鼠标滚轮放大缩小</li>
<li>鼠标滚轮按着平移</li>
<li>右边操作树选中物体后，按F聚焦物体</li>
</ul>
<h2 id="Extension"><a href="#Extension" class="headerlink" title="Extension"></a>Extension</h2><blockquote>
<p>Usage: Building interactive GUIs, custom application modules, and real-time sensitive applications.</p>
</blockquote>
<h2 id="Standalone-Application"><a href="#Standalone-Application" class="headerlink" title="Standalone Application"></a>Standalone Application</h2><blockquote>
<p>Usage: Large scale traning for reinforcement learning, systematic world generation, and modification.</p>
</blockquote>
<p>对于container中的Isaac Sim:</p>
<blockquote>
<p>The Isaac Sim container supports running our Python apps and standalone examples in headless mode only.</p>
</blockquote>
<p>要执行standalone application, 首先需要确定standalone python script和python.sh (通常在根目录下) 的路径.</p>
<p>例如要运行<code>follow_target_with_rmpflow.py</code>, 该路径为<code>standalone_examples/api/omni.isaac.franka/follow_target_with_rmpflow.py</code>;</p>
<h3 id="配置Python-Environment"><a href="#配置Python-Environment" class="headerlink" title="配置Python Environment"></a>配置Python Environment</h3><p>进入isaac-sim的根目录</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> ..</span><br><span class="line"><span class="built_in">cd</span> isaac-sim</span><br></pre></td></tr></table></figure></div>

<p>打开根目录下的apps&#x2F;omni.isaac.sim.python.kit文件, 添加以下内容</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">[dependencies]</span><br><span class="line">...</span><br><span class="line"><span class="comment"># Streaming client</span></span><br><span class="line"><span class="string">&quot;omni.kit.streamsdk.plugins-3.2.1&quot;</span> = &#123;&#125;</span><br><span class="line"><span class="string">&quot;omni.kit.livestream.core-3.2.0&quot;</span> = &#123;&#125;</span><br><span class="line"><span class="string">&quot;omni.kit.livestream.native&quot;</span> = &#123;&#125;</span><br></pre></td></tr></table></figure></div>

<p>对于Python的脚本, 需要进行一个修改:</p>
<div class="highlight-container" data-rel="Py"><figure class="iseeu highlight py"><table><tr><td class="code"><pre><span class="line">simulation_app = SimulationApp(&#123;<span class="string">&quot;headless&quot;</span>: <span class="literal">True</span>&#125;) <span class="comment"># False 改为 True</span></span><br></pre></td></tr></table></figure></div>

<p>启动~</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">./python.sh standalone_examples/api/omni.isaac.franka/follow_target_with_rmpflow.py</span><br></pre></td></tr></table></figure></div>

<h3 id="franka机械臂仿真程序"><a href="#franka机械臂仿真程序" class="headerlink" title="franka机械臂仿真程序"></a>franka机械臂仿真程序</h3><p>以<code>follow_target_with_rmpflow.py</code>和<code>franka_gripper.py</code>为例机型讲解</p>
<h4 id="follow-target-with-rmpflow-py"><a href="#follow-target-with-rmpflow-py" class="headerlink" title="follow_target_with_rmpflow.py"></a><code>follow_target_with_rmpflow.py</code></h4><div class="highlight-container" data-rel="Py"><figure class="iseeu highlight py"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 基础设置</span></span><br><span class="line"><span class="keyword">from</span> isaacsim <span class="keyword">import</span> SimulationApp</span><br><span class="line"></span><br><span class="line"><span class="comment"># Container运行要改为True</span></span><br><span class="line">simulation_app = SimulationApp(&#123;<span class="string">&quot;headless&quot;</span>: <span class="literal">True</span>&#125;) </span><br><span class="line"></span><br><span class="line"><span class="comment"># World是Isaac Sim中的核心场景管理类</span></span><br><span class="line"><span class="keyword">from</span> omni.isaac.core <span class="keyword">import</span> World</span><br><span class="line"></span><br><span class="line"><span class="comment"># 特定任务下的Controller和Tasks</span></span><br><span class="line"><span class="keyword">from</span> omni.isaac.franka.controllers.rmpflow_controller <span class="keyword">import</span> RMPFlowController</span><br><span class="line"><span class="keyword">from</span> omni.isaac.franka.tasks <span class="keyword">import</span> FollowTarget</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建World和Task实例</span></span><br><span class="line">my_world = World(stage_units_in_meters=<span class="number">1.0</span>)</span><br><span class="line">my_task = FollowTarget(name=<span class="string">&quot;follow_target_task&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将Task添加到World中, 并初始化状态</span></span><br><span class="line">my_world.add_task(my_task)</span><br><span class="line">my_world.reset()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取Task的参数, 提取了机器人和目标的名字</span></span><br><span class="line">task_params = my_world.get_task(<span class="string">&quot;follow_target_task&quot;</span>).get_params()</span><br><span class="line">franka_name = task_params[<span class="string">&quot;robot_name&quot;</span>][<span class="string">&quot;value&quot;</span>]</span><br><span class="line">target_name = task_params[<span class="string">&quot;target_name&quot;</span>][<span class="string">&quot;value&quot;</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 利用get_object()从场景中获取franka机械臂对象</span></span><br><span class="line">my_franka = my_world.scene.get_object(franka_name)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建控制器实例, 并且将franka机械臂输入</span></span><br><span class="line">my_controller = RMPFlowController(name=<span class="string">&quot;target_follower_controller&quot;</span>, robot_articulation=my_franka)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 利用get_articulation_controller()获取机械臂的关节控制器, 用于控制动作</span></span><br><span class="line">articulation_controller = my_franka.get_articulation_controller()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 表示是否需要重置, 初始化为False, 确保启动的时候不会重置</span></span><br><span class="line">reset_needed = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 控制循环</span></span><br><span class="line"><span class="keyword">while</span> simulation_app.is_running():</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 仿真世界中前进一帧</span></span><br><span class="line">    my_world.step(render=<span class="literal">True</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 检测仿真是否已停止, 并且准备在下一次播放重置</span></span><br><span class="line">    <span class="keyword">if</span> my_world.is_stopped() <span class="keyword">and</span> <span class="keyword">not</span> reset_needed:</span><br><span class="line">        reset_needed = <span class="literal">True</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 仿真正在运行, 代码进入控制逻辑</span></span><br><span class="line">    <span class="keyword">if</span> my_world.is_playing():</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 如果需要重置, 重置仿真世界和控制器</span></span><br><span class="line">        <span class="keyword">if</span> reset_needed:</span><br><span class="line">            my_world.reset()</span><br><span class="line">            my_controller.reset()</span><br><span class="line">            reset_needed = <span class="literal">False</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 获取机械臂和目标物体当前6D位姿</span></span><br><span class="line">        observations = my_world.get_observations()</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># forward()方法即为控制器中用到的一种传统的路径规划方法</span></span><br><span class="line">        <span class="comment"># 调用控制器的forward()方法, 传入目标末端执行器(方块)的6D位姿, 并输出一个关节动作列表</span></span><br><span class="line">        actions = my_controller.forward(</span><br><span class="line">            target_end_effector_position=observations[target_name][<span class="string">&quot;position&quot;</span>],</span><br><span class="line">            target_end_effector_orientation=observations[target_name][<span class="string">&quot;orientation&quot;</span>],</span><br><span class="line">        )</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 利用apply_action()将forward()方法输出的关节动作列表应用到机械臂的关节上</span></span><br><span class="line">        articulation_controller.apply_action(actions)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 关闭仿真并且清理资源</span></span><br><span class="line">simulation_app.close()</span><br></pre></td></tr></table></figure></div>


<p>其中用到的库文件:<br>&#x2F;isaac-sim&#x2F;exts&#x2F;omni.isaac.franka&#x2F;omni&#x2F;isaac&#x2F;franka&#x2F;controllers&#x2F;rmpflow_controller.py</p>
<div class="highlight-container" data-rel="Py"><figure class="iseeu highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> omni.isaac.motion_generation <span class="keyword">as</span> mg</span><br><span class="line"><span class="keyword">from</span> omni.isaac.core.articulations <span class="keyword">import</span> Articulation</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">RMPFlowController</span>(mg.MotionPolicyController):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;[summary]</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    Args:</span></span><br><span class="line"><span class="string">        name (str): [description]</span></span><br><span class="line"><span class="string">        robot_articulation (Articulation): [description]</span></span><br><span class="line"><span class="string">        physics_dt (float, optional): [description]. Defaults to 1.0/60.0.</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, name: <span class="built_in">str</span>, robot_articulation: Articulation, physics_dt: <span class="built_in">float</span> = <span class="number">1.0</span> / <span class="number">60.0</span></span>) -&gt; <span class="literal">None</span>:</span><br><span class="line">        self.rmp_flow_config = mg.interface_config_loader.load_supported_motion_policy_config(<span class="string">&quot;Franka&quot;</span>, <span class="string">&quot;RMPflow&quot;</span>)</span><br><span class="line">        self.rmp_flow = mg.lula.motion_policies.RmpFlow(**self.rmp_flow_config)</span><br><span class="line"></span><br><span class="line">        self.articulation_rmp = mg.ArticulationMotionPolicy(robot_articulation, self.rmp_flow, physics_dt)</span><br><span class="line"></span><br><span class="line">        mg.MotionPolicyController.__init__(self, name=name, articulation_motion_policy=self.articulation_rmp)</span><br><span class="line">        (</span><br><span class="line">            self._default_position,</span><br><span class="line">            self._default_orientation,</span><br><span class="line">        ) = self._articulation_motion_policy._robot_articulation.get_world_pose()</span><br><span class="line">        self._motion_policy.set_robot_base_pose(</span><br><span class="line">            robot_position=self._default_position, robot_orientation=self._default_orientation</span><br><span class="line">        )</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">reset</span>(<span class="params">self</span>):</span><br><span class="line">        mg.MotionPolicyController.reset(self)</span><br><span class="line">        self._motion_policy.set_robot_base_pose(</span><br><span class="line">            robot_position=self._default_position, robot_orientation=self._default_orientation</span><br><span class="line">        )</span><br></pre></td></tr></table></figure></div>

<p>&#x2F;isaac-sim&#x2F;exts&#x2F;omni.isaac.franka&#x2F;omni&#x2F;isaac&#x2F;franka&#x2F;tasks&#x2F;follow_target.py</p>
<div class="highlight-container" data-rel="Py"><figure class="iseeu highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> typing <span class="keyword">import</span> <span class="type">Optional</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> omni.isaac.core.tasks <span class="keyword">as</span> tasks</span><br><span class="line"><span class="keyword">from</span> omni.isaac.core.utils.prims <span class="keyword">import</span> is_prim_path_valid</span><br><span class="line"><span class="keyword">from</span> omni.isaac.core.utils.string <span class="keyword">import</span> find_unique_string_name</span><br><span class="line"><span class="keyword">from</span> omni.isaac.franka <span class="keyword">import</span> Franka</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">FollowTarget</span>(tasks.FollowTarget):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;[summary]</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    Args:</span></span><br><span class="line"><span class="string">        name (str, optional): [description]. Defaults to &quot;franka_follow_target&quot;.</span></span><br><span class="line"><span class="string">        target_prim_path (Optional[str], optional): [description]. Defaults to None.</span></span><br><span class="line"><span class="string">        target_name (Optional[str], optional): [description]. Defaults to None.</span></span><br><span class="line"><span class="string">        target_position (Optional[np.ndarray], optional): [description]. Defaults to None.</span></span><br><span class="line"><span class="string">        target_orientation (Optional[np.ndarray], optional): [description]. Defaults to None.</span></span><br><span class="line"><span class="string">        offset (Optional[np.ndarray], optional): [description]. Defaults to None.</span></span><br><span class="line"><span class="string">        franka_prim_path (Optional[str], optional): [description]. Defaults to None.</span></span><br><span class="line"><span class="string">        franka_robot_name (Optional[str], optional): [description]. Defaults to None.</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params"></span></span><br><span class="line"><span class="params">        self,</span></span><br><span class="line"><span class="params">        name: <span class="built_in">str</span> = <span class="string">&quot;franka_follow_target&quot;</span>,</span></span><br><span class="line"><span class="params">        target_prim_path: <span class="type">Optional</span>[<span class="built_in">str</span>] = <span class="literal">None</span>,</span></span><br><span class="line"><span class="params">        target_name: <span class="type">Optional</span>[<span class="built_in">str</span>] = <span class="literal">None</span>,</span></span><br><span class="line"><span class="params">        target_position: <span class="type">Optional</span>[np.ndarray] = <span class="literal">None</span>,</span></span><br><span class="line"><span class="params">        target_orientation: <span class="type">Optional</span>[np.ndarray] = <span class="literal">None</span>,</span></span><br><span class="line"><span class="params">        offset: <span class="type">Optional</span>[np.ndarray] = <span class="literal">None</span>,</span></span><br><span class="line"><span class="params">        franka_prim_path: <span class="type">Optional</span>[<span class="built_in">str</span>] = <span class="literal">None</span>,</span></span><br><span class="line"><span class="params">        franka_robot_name: <span class="type">Optional</span>[<span class="built_in">str</span>] = <span class="literal">None</span>,</span></span><br><span class="line"><span class="params">    </span>) -&gt; <span class="literal">None</span>:</span><br><span class="line">        tasks.FollowTarget.__init__(</span><br><span class="line">            self,</span><br><span class="line">            name=name,</span><br><span class="line">            target_prim_path=target_prim_path,</span><br><span class="line">            target_name=target_name,</span><br><span class="line">            target_position=target_position,</span><br><span class="line">            target_orientation=target_orientation,</span><br><span class="line">            offset=offset,</span><br><span class="line">        )</span><br><span class="line">        self._franka_prim_path = franka_prim_path</span><br><span class="line">        self._franka_robot_name = franka_robot_name</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">set_robot</span>(<span class="params">self</span>) -&gt; Franka:</span><br><span class="line">        <span class="string">&quot;&quot;&quot;[summary]</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        Returns:</span></span><br><span class="line"><span class="string">            Franka: [description]</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">if</span> self._franka_prim_path <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">            self._franka_prim_path = find_unique_string_name(</span><br><span class="line">                initial_name=<span class="string">&quot;/World/Franka&quot;</span>, is_unique_fn=<span class="keyword">lambda</span> x: <span class="keyword">not</span> is_prim_path_valid(x)</span><br><span class="line">            )</span><br><span class="line">        <span class="keyword">if</span> self._franka_robot_name <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">            self._franka_robot_name = find_unique_string_name(</span><br><span class="line">                initial_name=<span class="string">&quot;my_franka&quot;</span>, is_unique_fn=<span class="keyword">lambda</span> x: <span class="keyword">not</span> self.scene.object_exists(x)</span><br><span class="line">            )</span><br><span class="line">        <span class="keyword">return</span> Franka(prim_path=self._franka_prim_path, name=self._franka_robot_name)</span><br></pre></td></tr></table></figure></div>

<h4 id="franka-gripper-py"><a href="#franka-gripper-py" class="headerlink" title="franka_gripper.py"></a><code>franka_gripper.py</code></h4><div class="highlight-container" data-rel="Py"><figure class="iseeu highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> isaacsim <span class="keyword">import</span> SimulationApp</span><br><span class="line"></span><br><span class="line">simulation_app = SimulationApp(&#123;<span class="string">&quot;headless&quot;</span>: <span class="literal">False</span>&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> argparse</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> omni.isaac.core <span class="keyword">import</span> World</span><br><span class="line"><span class="keyword">from</span> omni.isaac.core.utils.types <span class="keyword">import</span> ArticulationAction</span><br><span class="line"><span class="keyword">from</span> omni.isaac.franka <span class="keyword">import</span> Franka</span><br><span class="line"></span><br><span class="line">parser = argparse.ArgumentParser()</span><br><span class="line">parser.add_argument(<span class="string">&quot;--test&quot;</span>, default=<span class="literal">False</span>, action=<span class="string">&quot;store_true&quot;</span>, <span class="built_in">help</span>=<span class="string">&quot;Run in test mode&quot;</span>)</span><br><span class="line">args, unknown = parser.parse_known_args()</span><br><span class="line"></span><br><span class="line">my_world = World(stage_units_in_meters=<span class="number">1.0</span>)</span><br><span class="line">my_franka = my_world.scene.add(Franka(prim_path=<span class="string">&quot;/World/Franka&quot;</span>, name=<span class="string">&quot;my_franka&quot;</span>))</span><br><span class="line">my_world.scene.add_default_ground_plane()</span><br><span class="line">my_world.reset()</span><br><span class="line"></span><br><span class="line">i = <span class="number">0</span></span><br><span class="line">reset_needed = <span class="literal">False</span></span><br><span class="line"><span class="keyword">while</span> simulation_app.is_running():</span><br><span class="line">    my_world.step(render=<span class="literal">True</span>)</span><br><span class="line">    <span class="keyword">if</span> my_world.is_stopped() <span class="keyword">and</span> <span class="keyword">not</span> reset_needed:</span><br><span class="line">        reset_needed = <span class="literal">True</span></span><br><span class="line">    <span class="keyword">if</span> my_world.is_playing():</span><br><span class="line">        <span class="keyword">if</span> reset_needed:</span><br><span class="line">            my_world.reset()</span><br><span class="line">            reset_needed = <span class="literal">False</span></span><br><span class="line">        i += <span class="number">1</span></span><br><span class="line">        gripper_positions = my_franka.gripper.get_joint_positions()</span><br><span class="line">        <span class="keyword">if</span> i &lt; <span class="number">500</span>:</span><br><span class="line">            my_franka.gripper.apply_action(</span><br><span class="line">                ArticulationAction(joint_positions=[gripper_positions[<span class="number">0</span>] - (<span class="number">0.005</span>), gripper_positions[<span class="number">1</span>] - (<span class="number">0.005</span>)])</span><br><span class="line">            )</span><br><span class="line">        <span class="keyword">if</span> i &gt; <span class="number">500</span>:</span><br><span class="line">            my_franka.gripper.apply_action(</span><br><span class="line">                ArticulationAction(joint_positions=[gripper_positions[<span class="number">0</span>] + (<span class="number">0.005</span>), gripper_positions[<span class="number">1</span>] + (<span class="number">0.005</span>)])</span><br><span class="line">            )</span><br><span class="line">        <span class="keyword">if</span> i == <span class="number">1000</span>:</span><br><span class="line">            i = <span class="number">0</span></span><br><span class="line">    <span class="keyword">if</span> args.test <span class="keyword">is</span> <span class="literal">True</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">simulation_app.close()</span><br></pre></td></tr></table></figure></div>


<h2 id="Isaac-Lab"><a href="#Isaac-Lab" class="headerlink" title="Isaac Lab"></a>Isaac Lab</h2><blockquote>
<p>Isaac Lab is the official robot learning framework for Isaac Sim, providing APIs and examples for reinforcement learning, imitation learning, and more.</p>
</blockquote>
<blockquote>
<p>Isaac Gym is a deprecated framework. All reinforcement learning and imitation learning examples have been migrated to Isaac Lab.</p>
</blockquote>
<h2 id="Troubleshooting"><a href="#Troubleshooting" class="headerlink" title="Troubleshooting"></a>Troubleshooting</h2><ul>
<li>一直警告: 2024-09-18 09:42:53 [17,934ms] [Warning] [omni.graph.core.plugin] OmniGraphSettings::getCudaDeviceOrdinal: unable to get a valid CUDA device id from the renderer. Defaulting to GPU0.</li>
</ul>
<p>之前启用的python脚本占用了CUDA的ID, 但是没有释放, 重新启动docker即可.</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">docker stop isaac-sim</span><br><span class="line">docker start isaac-sim</span><br></pre></td></tr></table></figure></div>


<h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><a class="link"   href="https://zhaoxuhui.top/blog/2023/02/19/omniverse-and-isaac-sim-note9-standalone-workflow-and-imu-frequency-setting.html" >NVIDIA Omniverse和Isaac Sim笔记9：Standalone工作流介绍与IMU帧率设置 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
]]></content>
  </entry>
  <entry>
    <title>Iterative Optimal Control for Robotics System</title>
    <url>/2024/08/30/Iterative-Optimal-Control-for-Robotics-System/</url>
    <content><![CDATA[<blockquote>
<p>系统性的学习Iterative Optimal Control.</p>
</blockquote>
<h2 id="最优控制理论基础"><a href="#最优控制理论基础" class="headerlink" title="最优控制理论基础"></a>最优控制理论基础</h2><blockquote>
<p>最优控制理论最早是在航空航天领域发展的, 用于设计发射和航行轨迹; 核心问题是寻找一种控制策略，使系统在满足某些约束的条件下，能够优化某个目标（例如时间、能量、成本等）。<br>控制系统的模型和目标函数都是非线性的, 这导致最优控制理论优化问题变成非凸问题;</p>
</blockquote>
<h2 id="Model-Predictive-Control-MPC"><a href="#Model-Predictive-Control-MPC" class="headerlink" title="Model Predictive Control (MPC)"></a>Model Predictive Control (MPC)</h2><p>MPC的核心思想是利用<strong>系统的数学模型来预测未来的行为</strong>，并在每个控制周期上求解一个优化问题，来确定最佳的控制输入。关键优势之一是能够处理多变量系统, 并且可以显示地考虑约束条件. 它能在动态和复杂的环境下, 提供稳健的控制解决方案.</p>
<p>MPC是一个线性或非线性动态方程, 用来描述系统在未来时刻的行为. 常见的形式是线性离散时间模型:</p>
<p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="51.003ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 22543.2 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mtext"><path data-c="73" d="M295 316Q295 356 268 385T190 414Q154 414 128 401Q98 382 98 349Q97 344 98 336T114 312T157 287Q175 282 201 278T245 269T277 256Q294 248 310 236T342 195T359 133Q359 71 321 31T198 -10H190Q138 -10 94 26L86 19L77 10Q71 4 65 -1L54 -11H46H42Q39 -11 33 -5V74V132Q33 153 35 157T45 162H54Q66 162 70 158T75 146T82 119T101 77Q136 26 198 26Q295 26 295 104Q295 133 277 151Q257 175 194 187T111 210Q75 227 54 256T33 318Q33 357 50 384T93 424T143 442T187 447H198Q238 447 268 432L283 424L292 431Q302 440 314 448H322H326Q329 448 335 442V310L329 304H301Q295 310 295 316Z"></path><path data-c="75" d="M383 58Q327 -10 256 -10H249Q124 -10 105 89Q104 96 103 226Q102 335 102 348T96 369Q86 385 36 385H25V408Q25 431 27 431L38 432Q48 433 67 434T105 436Q122 437 142 438T172 441T184 442H187V261Q188 77 190 64Q193 49 204 40Q224 26 264 26Q290 26 311 35T343 58T363 90T375 120T379 144Q379 145 379 161T380 201T380 248V315Q380 361 370 372T320 385H302V431Q304 431 378 436T457 442H464V264Q464 84 465 81Q468 61 479 55T524 46H542V0Q540 0 467 -5T390 -11H383V58Z" transform="translate(394,0)"></path><path data-c="62" d="M307 -11Q234 -11 168 55L158 37Q156 34 153 28T147 17T143 10L138 1L118 0H98V298Q98 599 97 603Q94 622 83 628T38 637H20V660Q20 683 22 683L32 684Q42 685 61 686T98 688Q115 689 135 690T165 693T176 694H179V543Q179 391 180 391L183 394Q186 397 192 401T207 411T228 421T254 431T286 439T323 442Q401 442 461 379T522 216Q522 115 458 52T307 -11ZM182 98Q182 97 187 90T196 79T206 67T218 55T233 44T250 35T271 29T295 26Q330 26 363 46T412 113Q424 148 424 212Q424 287 412 323Q385 405 300 405Q270 405 239 390T188 347L182 339V98Z" transform="translate(950,0)"></path><path data-c="6A" d="M98 609Q98 637 116 653T160 669Q183 667 200 652T217 609Q217 579 200 564T158 549Q133 549 116 564T98 609ZM28 -163Q58 -168 64 -168Q124 -168 135 -77Q137 -65 137 141T136 353Q132 371 120 377T72 385H52V408Q52 431 54 431L58 432Q62 432 70 432T87 433T108 434T133 436Q151 437 171 438T202 441T214 442H218V184Q217 -36 217 -59T211 -98Q195 -145 153 -175T58 -205Q9 -205 -23 -179T-55 -117Q-55 -94 -40 -79T-2 -64T36 -79T52 -118Q52 -143 28 -163Z" transform="translate(1506,0)"></path><path data-c="65" d="M28 218Q28 273 48 318T98 391T163 433T229 448Q282 448 320 430T378 380T406 316T415 245Q415 238 408 231H126V216Q126 68 226 36Q246 30 270 30Q312 30 342 62Q359 79 369 104L379 128Q382 131 395 131H398Q415 131 415 121Q415 117 412 108Q393 53 349 21T250 -11Q155 -11 92 58T28 218ZM333 275Q322 403 238 411H236Q228 411 220 410T195 402T166 381T143 340T127 274V267H333V275Z" transform="translate(1812,0)"></path><path data-c="63" d="M370 305T349 305T313 320T297 358Q297 381 312 396Q317 401 317 402T307 404Q281 408 258 408Q209 408 178 376Q131 329 131 219Q131 137 162 90Q203 29 272 29Q313 29 338 55T374 117Q376 125 379 127T395 129H409Q415 123 415 120Q415 116 411 104T395 71T366 33T318 2T249 -11Q163 -11 99 53T34 214Q34 318 99 383T250 448T370 421T404 357Q404 334 387 320Z" transform="translate(2256,0)"></path><path data-c="74" d="M27 422Q80 426 109 478T141 600V615H181V431H316V385H181V241Q182 116 182 100T189 68Q203 29 238 29Q282 29 292 100Q293 108 293 146V181H333V146V134Q333 57 291 17Q264 -10 221 -10Q187 -10 162 2T124 33T105 68T98 100Q97 107 97 248V385H18V422H27Z" transform="translate(2700,0)"></path><path data-c="20" d="" transform="translate(3089,0)"></path><path data-c="74" d="M27 422Q80 426 109 478T141 600V615H181V431H316V385H181V241Q182 116 182 100T189 68Q203 29 238 29Q282 29 292 100Q293 108 293 146V181H333V146V134Q333 57 291 17Q264 -10 221 -10Q187 -10 162 2T124 33T105 68T98 100Q97 107 97 248V385H18V422H27Z" transform="translate(3339,0)"></path><path data-c="6F" d="M28 214Q28 309 93 378T250 448Q340 448 405 380T471 215Q471 120 407 55T250 -10Q153 -10 91 57T28 214ZM250 30Q372 30 372 193V225V250Q372 272 371 288T364 326T348 362T317 390T268 410Q263 411 252 411Q222 411 195 399Q152 377 139 338T126 246V226Q126 130 145 91Q177 30 250 30Z" transform="translate(3728,0)"></path><path data-c="3A" d="M78 370Q78 394 95 412T138 430Q162 430 180 414T199 371Q199 346 182 328T139 310T96 327T78 370ZM78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z" transform="translate(4228,0)"></path></g><g data-mml-node="mstyle" transform="translate(4506,0)"><g data-mml-node="mspace"></g></g><g data-mml-node="mi" transform="translate(5506,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(6078,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(6467,0)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mo" transform="translate(7210.2,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mn" transform="translate(8210.4,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(8710.4,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(9377.2,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mi" transform="translate(10433,0)"><path data-c="1D434" d="M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z"></path></g><g data-mml-node="mi" transform="translate(11183,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(11755,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(12144,0)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mo" transform="translate(12665,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(13276.2,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mi" transform="translate(14276.4,0)"><path data-c="1D435" d="M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z"></path></g><g data-mml-node="mi" transform="translate(15035.4,0)"><path data-c="1D462" d="M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(15607.4,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(15996.4,0)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mo" transform="translate(16517.4,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(16906.4,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mstyle" transform="translate(17184.4,0)"><g data-mml-node="mspace"></g></g><g data-mml-node="mi" transform="translate(18351.1,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(18923.1,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mn" transform="translate(19312.1,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g><g data-mml-node="mo" transform="translate(19812.1,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(20478.9,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="msub" transform="translate(21534.7,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mn" transform="translate(605,-150) scale(0.707)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g></g></g></g></svg></mjx-container></p>
<p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -2.864ex;" xmlns="http://www.w3.org/2000/svg" width="43.69ex" height="6.784ex" role="img" focusable="false" viewBox="0 -1733 19310.9 2998.7"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="munder"><g data-mml-node="mo"><path data-c="6D" d="M41 46H55Q94 46 102 60V68Q102 77 102 91T102 122T103 161T103 203Q103 234 103 269T102 328V351Q99 370 88 376T43 385H25V408Q25 431 27 431L37 432Q47 433 65 434T102 436Q119 437 138 438T167 441T178 442H181V402Q181 364 182 364T187 369T199 384T218 402T247 421T285 437Q305 442 336 442Q351 442 364 440T387 434T406 426T421 417T432 406T441 395T448 384T452 374T455 366L457 361L460 365Q463 369 466 373T475 384T488 397T503 410T523 422T546 432T572 439T603 442Q729 442 740 329Q741 322 741 190V104Q741 66 743 59T754 49Q775 46 803 46H819V0H811L788 1Q764 2 737 2T699 3Q596 3 587 0H579V46H595Q656 46 656 62Q657 64 657 200Q656 335 655 343Q649 371 635 385T611 402T585 404Q540 404 506 370Q479 343 472 315T464 232V168V108Q464 78 465 68T468 55T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z"></path><path data-c="69" d="M69 609Q69 637 87 653T131 669Q154 667 171 652T188 609Q188 579 171 564T129 549Q104 549 87 564T69 609ZM247 0Q232 3 143 3Q132 3 106 3T56 1L34 0H26V46H42Q70 46 91 49Q100 53 102 60T104 102V205V293Q104 345 102 359T88 378Q74 385 41 385H30V408Q30 431 32 431L42 432Q52 433 70 434T106 436Q123 437 142 438T171 441T182 442H185V62Q190 52 197 50T232 46H255V0H247Z" transform="translate(833,0)"></path><path data-c="6E" d="M41 46H55Q94 46 102 60V68Q102 77 102 91T102 122T103 161T103 203Q103 234 103 269T102 328V351Q99 370 88 376T43 385H25V408Q25 431 27 431L37 432Q47 433 65 434T102 436Q119 437 138 438T167 441T178 442H181V402Q181 364 182 364T187 369T199 384T218 402T247 421T285 437Q305 442 336 442Q450 438 463 329Q464 322 464 190V104Q464 66 466 59T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z" transform="translate(1111,0)"></path></g><g data-mml-node="TeXAtom" transform="translate(228.6,-697.3) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D462" d="M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(572,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(961,0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mo" transform="translate(1322,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="munderover" transform="translate(1833.7,0)"><g data-mml-node="mo" transform="translate(43.8,0)"><path data-c="2211" d="M60 948Q63 950 665 950H1267L1325 815Q1384 677 1388 669H1348L1341 683Q1320 724 1285 761Q1235 809 1174 838T1033 881T882 898T699 902H574H543H251L259 891Q722 258 724 252Q725 250 724 246Q721 243 460 -56L196 -356Q196 -357 407 -357Q459 -357 548 -357T676 -358Q812 -358 896 -353T1063 -332T1204 -283T1307 -196Q1328 -170 1348 -124H1388Q1388 -125 1381 -145T1356 -210T1325 -294L1267 -449L666 -450Q64 -450 61 -448Q55 -446 55 -439Q55 -437 57 -433L590 177Q590 178 557 222T452 366T322 544L56 909L55 924Q55 945 60 948Z"></path></g><g data-mml-node="TeXAtom" transform="translate(129.8,-1107.7) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mo" transform="translate(521,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(1299,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(0,1150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D441" d="M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z"></path></g><g data-mml-node="mo" transform="translate(888,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(1666,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g><g data-mml-node="mrow" transform="translate(3531.9,0)"><g data-mml-node="mo" transform="translate(0 -0.5)"><path data-c="28" d="M152 251Q152 646 388 850H416Q422 844 422 841Q422 837 403 816T357 753T302 649T255 482T236 250Q236 124 255 19T301 -147T356 -251T403 -315T422 -340Q422 -343 416 -349H388Q359 -325 332 -296T271 -213T212 -97T170 56T152 251Z"></path></g><g data-mml-node="mi" transform="translate(458,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(1030,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1419,0)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mo" transform="translate(2162.2,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mn" transform="translate(3162.4,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="msup" transform="translate(3662.4,0)"><g data-mml-node="mo"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mi" transform="translate(422,413) scale(0.707)"><path data-c="1D447" d="M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z"></path></g></g><g data-mml-node="mi" transform="translate(4632.2,0)"><path data-c="1D444" d="M399 -80Q399 -47 400 -30T402 -11V-7L387 -11Q341 -22 303 -22Q208 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435Q740 255 592 107Q529 47 461 16L444 8V3Q444 2 449 -24T470 -66T516 -82Q551 -82 583 -60T625 -3Q631 11 638 11Q647 11 649 2Q649 -6 639 -34T611 -100T557 -165T481 -194Q399 -194 399 -87V-80ZM636 468Q636 523 621 564T580 625T530 655T477 665Q429 665 379 640Q277 591 215 464T153 216Q153 110 207 59Q231 38 236 38V46Q236 86 269 120T347 155Q372 155 390 144T417 114T429 82T435 55L448 64Q512 108 557 185T619 334T636 468ZM314 18Q362 18 404 39L403 49Q399 104 366 115Q354 117 347 117Q344 117 341 117T337 118Q317 118 296 98T274 52Q274 18 314 18Z"></path></g><g data-mml-node="mi" transform="translate(5423.2,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(5995.2,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(6384.2,0)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mo" transform="translate(7127.5,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mn" transform="translate(8127.7,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(8627.7,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(9238.9,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mi" transform="translate(10239.1,0)"><path data-c="1D462" d="M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(10811.1,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(11200.1,0)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="msup" transform="translate(11721.1,0)"><g data-mml-node="mo"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mi" transform="translate(422,413) scale(0.707)"><path data-c="1D447" d="M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z"></path></g></g><g data-mml-node="mi" transform="translate(12690.9,0)"><path data-c="1D445" d="M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z"></path></g><g data-mml-node="mi" transform="translate(13449.9,0)"><path data-c="1D462" d="M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(14021.9,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(14410.9,0)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mo" transform="translate(14931.9,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(15320.9,0) translate(0 -0.5)"><path data-c="29" d="M305 251Q305 -145 69 -349H56Q43 -349 39 -347T35 -338Q37 -333 60 -307T108 -239T160 -136T204 27T221 250T204 473T160 636T108 740T60 807T35 839Q35 850 50 850H56H69Q197 743 256 566Q305 425 305 251Z"></path></g></g></g></g></svg></mjx-container></p>
<h2 id="Reinforcement-Learning-RL"><a href="#Reinforcement-Learning-RL" class="headerlink" title="Reinforcement Learning (RL)"></a>Reinforcement Learning (RL)</h2><p>机器学习广义上的分类:</p>
<ul>
<li>Supervised Learning (监督学习)</li>
<li>Unsupervised Learning (无监督学习)</li>
<li>Reinforcement Learning (强化学习)</li>
</ul>
<p>RL很重要的一个特性就是与环境进行实时的交互. 与其他两种机器学习不同, 其目标不是对数据进行分类或标记, 而是找到能够产生最优结果的最佳动作序列.<br>(RL work with dynamic enviroments.)</p>
<p>两个策略需要很好的平衡</p>
<ul>
<li>Exploration<ul>
<li>Explore new areas in the environment.</li>
</ul>
</li>
<li>Exploitation<ul>
<li>Collect the most reward you already know.</li>
</ul>
</li>
</ul>
<p>使用RL的方法设计一个控制器:</p>
<ul>
<li>We have to set up the controller structure. (Policy)</li>
<li>We have to know what success is. (Reward)</li>
<li>We have to learn efficiently. (Learning Algorithm)</li>
</ul>
<h3 id="WorkFlow"><a href="#WorkFlow" class="headerlink" title="WorkFlow"></a>WorkFlow</h3><img lazyload="" src="/images/loading.svg" data-src="/2024/08/30/Iterative-Optimal-Control-for-Robotics-System/1.png" class="" width="500">

<p>环境Environment是指除了Agent以外的所有事物, 机器人通过与环境交互, 从而得到奖励rewards和observation观测值.</p>
<img lazyload="" src="/images/loading.svg" data-src="/2024/08/30/Iterative-Optimal-Control-for-Robotics-System/2.png" class="" width="500">

<p>对于智能体所需要交互的环境, 有两种不同的类型, RL可以基于模型也可以不基于模型</p>
<ul>
<li>Model-Based RL<ul>
<li>通过补偿学习过程来学习最优策略</li>
</ul>
</li>
<li>Model-Free RL<ul>
<li>直接通过与环境交互来学习最优策略</li>
</ul>
</li>
</ul>
<p>设计奖励函数的两个问题:</p>
<ul>
<li>Rewards can come after long sequences of actions. (sparse rewards)<ul>
<li>例如让一个机器人行走十米才能获得奖励, 中间任何步骤都不获得奖励, 那么这个随机探索的过程将会变得非常漫长;</li>
</ul>
</li>
<li>If you give an optimization algorithm a shortcut, it’ll take it.<ul>
<li>例如让机器人只走一米就能获得奖励, 那么机器人可能会摔过去而不是走过去. (更优先于走捷径)</li>
</ul>
</li>
</ul>
<p>对于一个智能体Agent, 其中有两个紧密交织的核心:</p>
<ul>
<li>Policy<ul>
<li>Policy是一个用于接收状态观测值并输出动作的函数. (Input: State, Output: Action)</li>
</ul>
</li>
<li>Learning Algorithm<ul>
<li>如何得到一个最优的Policy, 即设计一个函数的结构, 使得在给定一个State时, 能够选择一个最优的Action.</li>
</ul>
</li>
</ul>
<p>例如在Q函数中, 通过查找对应的状态S, 选择其中一个最有价值的动作A.</p>
<img lazyload="" src="/images/loading.svg" data-src="/2024/08/30/Iterative-Optimal-Control-for-Robotics-System/3.png" class="" width="500">

<p>这个表格称为Q Table, 也会随着时间更新, 每个State不同时间时所对应的Action的价值也会不同.</p>
<p><strong>如何去设计给定一个State时, 选择一个value最大的Action, 这就是Policy的设计.</strong></p>
<p>RL的做法就是通过神经网络去训练得到这个Policy.</p>
<img lazyload="" src="/images/loading.svg" data-src="/2024/08/30/Iterative-Optimal-Control-for-Robotics-System/5.png" class="" width="500">

<p>对于一个需要行走到正确地点的智能体, 它需要计算当前状态下所能采取的每个动作所带来的收益, 并选择其中最大的那个动作.</p>
<img lazyload="" src="/images/loading.svg" data-src="/2024/08/30/Iterative-Optimal-Control-for-Robotics-System/4.png" class="" width="500">

<p>这个过程的算法称之为Value-function based algorithms, 即函数评价器.</p>
<p>在采取一个特定的Action之后, 智能体会使用奖励和新的环境信息来更新它刚刚采取动作的价值;</p>
<p>这里的更新就会用到Bellman Equation, 用于更新Q Table.</p>
<p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="60.776ex" height="2.396ex" role="img" focusable="false" viewBox="0 -809 26862.9 1059"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D441" d="M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z"></path></g><g data-mml-node="mi" transform="translate(888,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(1354,0)"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z"></path></g><g data-mml-node="mi" transform="translate(2070,0)"><path data-c="1D444" d="M399 -80Q399 -47 400 -30T402 -11V-7L387 -11Q341 -22 303 -22Q208 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435Q740 255 592 107Q529 47 461 16L444 8V3Q444 2 449 -24T470 -66T516 -82Q551 -82 583 -60T625 -3Q631 11 638 11Q647 11 649 2Q649 -6 639 -34T611 -100T557 -165T481 -194Q399 -194 399 -87V-80ZM636 468Q636 523 621 564T580 625T530 655T477 665Q429 665 379 640Q277 591 215 464T153 216Q153 110 207 59Q231 38 236 38V46Q236 86 269 120T347 155Q372 155 390 144T417 114T429 82T435 55L448 64Q512 108 557 185T619 334T636 468ZM314 18Q362 18 404 39L403 49Q399 104 366 115Q354 117 347 117Q344 117 341 117T337 118Q317 118 296 98T274 52Q274 18 314 18Z"></path></g><g data-mml-node="mo" transform="translate(2861,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(3250,0)"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></g><g data-mml-node="mo" transform="translate(3719,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(4163.7,0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mo" transform="translate(4692.7,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(5359.4,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mi" transform="translate(6415.2,0)"><path data-c="1D444" d="M399 -80Q399 -47 400 -30T402 -11V-7L387 -11Q341 -22 303 -22Q208 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435Q740 255 592 107Q529 47 461 16L444 8V3Q444 2 449 -24T470 -66T516 -82Q551 -82 583 -60T625 -3Q631 11 638 11Q647 11 649 2Q649 -6 639 -34T611 -100T557 -165T481 -194Q399 -194 399 -87V-80ZM636 468Q636 523 621 564T580 625T530 655T477 665Q429 665 379 640Q277 591 215 464T153 216Q153 110 207 59Q231 38 236 38V46Q236 86 269 120T347 155Q372 155 390 144T417 114T429 82T435 55L448 64Q512 108 557 185T619 334T636 468ZM314 18Q362 18 404 39L403 49Q399 104 366 115Q354 117 347 117Q344 117 341 117T337 118Q317 118 296 98T274 52Q274 18 314 18Z"></path></g><g data-mml-node="mo" transform="translate(7206.2,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(7595.2,0)"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></g><g data-mml-node="mo" transform="translate(8064.2,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(8508.9,0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mo" transform="translate(9037.9,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(9649.1,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mi" transform="translate(10649.3,0)"><path data-c="1D6FC" d="M34 156Q34 270 120 356T309 442Q379 442 421 402T478 304Q484 275 485 237V208Q534 282 560 374Q564 388 566 390T582 393Q603 393 603 385Q603 376 594 346T558 261T497 161L486 147L487 123Q489 67 495 47T514 26Q528 28 540 37T557 60Q559 67 562 68T577 70Q597 70 597 62Q597 56 591 43Q579 19 556 5T512 -10H505Q438 -10 414 62L411 69L400 61Q390 53 370 41T325 18T267 -2T203 -11Q124 -11 79 39T34 156ZM208 26Q257 26 306 47T379 90L403 112Q401 255 396 290Q382 405 304 405Q235 405 183 332Q156 292 139 224T121 120Q121 71 146 49T208 26Z"></path></g><g data-mml-node="mo" transform="translate(11289.3,0)"><path data-c="5B" d="M118 -250V750H255V710H158V-210H255V-250H118Z"></path></g><g data-mml-node="mi" transform="translate(11567.3,0)"><path data-c="1D445" d="M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z"></path></g><g data-mml-node="mo" transform="translate(12326.3,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(12715.3,0)"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></g><g data-mml-node="mo" transform="translate(13184.3,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(13629,0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mo" transform="translate(14158,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(14769.2,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mi" transform="translate(15769.4,0)"><path data-c="1D6FE" d="M31 249Q11 249 11 258Q11 275 26 304T66 365T129 418T206 441Q233 441 239 440Q287 429 318 386T371 255Q385 195 385 170Q385 166 386 166L398 193Q418 244 443 300T486 391T508 430Q510 431 524 431H537Q543 425 543 422Q543 418 522 378T463 251T391 71Q385 55 378 6T357 -100Q341 -165 330 -190T303 -216Q286 -216 286 -188Q286 -138 340 32L346 51L347 69Q348 79 348 100Q348 257 291 317Q251 355 196 355Q148 355 108 329T51 260Q49 251 47 251Q45 249 31 249Z"></path></g><g data-mml-node="mo" transform="translate(16479.1,0)"><path data-c="6D" d="M41 46H55Q94 46 102 60V68Q102 77 102 91T102 122T103 161T103 203Q103 234 103 269T102 328V351Q99 370 88 376T43 385H25V408Q25 431 27 431L37 432Q47 433 65 434T102 436Q119 437 138 438T167 441T178 442H181V402Q181 364 182 364T187 369T199 384T218 402T247 421T285 437Q305 442 336 442Q351 442 364 440T387 434T406 426T421 417T432 406T441 395T448 384T452 374T455 366L457 361L460 365Q463 369 466 373T475 384T488 397T503 410T523 422T546 432T572 439T603 442Q729 442 740 329Q741 322 741 190V104Q741 66 743 59T754 49Q775 46 803 46H819V0H811L788 1Q764 2 737 2T699 3Q596 3 587 0H579V46H595Q656 46 656 62Q657 64 657 200Q656 335 655 343Q649 371 635 385T611 402T585 404Q540 404 506 370Q479 343 472 315T464 232V168V108Q464 78 465 68T468 55T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z"></path><path data-c="61" d="M137 305T115 305T78 320T63 359Q63 394 97 421T218 448Q291 448 336 416T396 340Q401 326 401 309T402 194V124Q402 76 407 58T428 40Q443 40 448 56T453 109V145H493V106Q492 66 490 59Q481 29 455 12T400 -6T353 12T329 54V58L327 55Q325 52 322 49T314 40T302 29T287 17T269 6T247 -2T221 -8T190 -11Q130 -11 82 20T34 107Q34 128 41 147T68 188T116 225T194 253T304 268H318V290Q318 324 312 340Q290 411 215 411Q197 411 181 410T156 406T148 403Q170 388 170 359Q170 334 154 320ZM126 106Q126 75 150 51T209 26Q247 26 276 49T315 109Q317 116 318 175Q318 233 317 233Q309 233 296 232T251 223T193 203T147 166T126 106Z" transform="translate(833,0)"></path><path data-c="78" d="M201 0Q189 3 102 3Q26 3 17 0H11V46H25Q48 47 67 52T96 61T121 78T139 96T160 122T180 150L226 210L168 288Q159 301 149 315T133 336T122 351T113 363T107 370T100 376T94 379T88 381T80 383Q74 383 44 385H16V431H23Q59 429 126 429Q219 429 229 431H237V385Q201 381 201 369Q201 367 211 353T239 315T268 274L272 270L297 304Q329 345 329 358Q329 364 327 369T322 376T317 380T310 384L307 385H302V431H309Q324 428 408 428Q487 428 493 431H499V385H492Q443 385 411 368Q394 360 377 341T312 257L296 236L358 151Q424 61 429 57T446 50Q464 46 499 46H516V0H510H502Q494 1 482 1T457 2T432 2T414 3Q403 3 377 3T327 1L304 0H295V46H298Q309 46 320 51T331 63Q331 65 291 120L250 175Q249 174 219 133T185 88Q181 83 181 74Q181 63 188 55T206 46Q208 46 208 23V0H201Z" transform="translate(1333,0)"></path></g><g data-mml-node="msup" transform="translate(18506.8,0)"><g data-mml-node="mi"><path data-c="1D444" d="M399 -80Q399 -47 400 -30T402 -11V-7L387 -11Q341 -22 303 -22Q208 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435Q740 255 592 107Q529 47 461 16L444 8V3Q444 2 449 -24T470 -66T516 -82Q551 -82 583 -60T625 -3Q631 11 638 11Q647 11 649 2Q649 -6 639 -34T611 -100T557 -165T481 -194Q399 -194 399 -87V-80ZM636 468Q636 523 621 564T580 625T530 655T477 665Q429 665 379 640Q277 591 215 464T153 216Q153 110 207 59Q231 38 236 38V46Q236 86 269 120T347 155Q372 155 390 144T417 114T429 82T435 55L448 64Q512 108 557 185T619 334T636 468ZM314 18Q362 18 404 39L403 49Q399 104 366 115Q354 117 347 117Q344 117 341 117T337 118Q317 118 296 98T274 52Q274 18 314 18Z"></path></g><g data-mml-node="mo" transform="translate(824,413) scale(0.707)"><path data-c="2032" d="M79 43Q73 43 52 49T30 61Q30 68 85 293T146 528Q161 560 198 560Q218 560 240 545T262 501Q262 496 260 486Q259 479 173 263T84 45T79 43Z"></path></g></g><g data-mml-node="mo" transform="translate(19575.2,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msup" transform="translate(19964.2,0)"><g data-mml-node="mi"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></g><g data-mml-node="mo" transform="translate(502,413) scale(0.707)"><path data-c="2032" d="M79 43Q73 43 52 49T30 61Q30 68 85 293T146 528Q161 560 198 560Q218 560 240 545T262 501Q262 496 260 486Q259 479 173 263T84 45T79 43Z"></path></g></g><g data-mml-node="mo" transform="translate(20710.7,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="msup" transform="translate(21155.4,0)"><g data-mml-node="mi"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mo" transform="translate(562,413) scale(0.707)"><path data-c="2032" d="M79 43Q73 43 52 49T30 61Q30 68 85 293T146 528Q161 560 198 560Q218 560 240 545T262 501Q262 496 260 486Q259 479 173 263T84 45T79 43Z"></path></g></g><g data-mml-node="mo" transform="translate(21961.8,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(22573,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mi" transform="translate(23573.3,0)"><path data-c="1D444" d="M399 -80Q399 -47 400 -30T402 -11V-7L387 -11Q341 -22 303 -22Q208 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435Q740 255 592 107Q529 47 461 16L444 8V3Q444 2 449 -24T470 -66T516 -82Q551 -82 583 -60T625 -3Q631 11 638 11Q647 11 649 2Q649 -6 639 -34T611 -100T557 -165T481 -194Q399 -194 399 -87V-80ZM636 468Q636 523 621 564T580 625T530 655T477 665Q429 665 379 640Q277 591 215 464T153 216Q153 110 207 59Q231 38 236 38V46Q236 86 269 120T347 155Q372 155 390 144T417 114T429 82T435 55L448 64Q512 108 557 185T619 334T636 468ZM314 18Q362 18 404 39L403 49Q399 104 366 115Q354 117 347 117Q344 117 341 117T337 118Q317 118 296 98T274 52Q274 18 314 18Z"></path></g><g data-mml-node="mo" transform="translate(24364.3,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(24753.3,0)"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></g><g data-mml-node="mo" transform="translate(25222.3,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(25666.9,0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mo" transform="translate(26195.9,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(26584.9,0)"><path data-c="5D" d="M22 710V750H159V-250H22V-210H119V710H22Z"></path></g></g></g></svg></mjx-container></p>
<ul>
<li><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="6.741ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 2979.7 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D445" d="M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z"></path></g><g data-mml-node="mo" transform="translate(759,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1148,0)"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></g><g data-mml-node="mo" transform="translate(1617,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(2061.7,0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mo" transform="translate(2590.7,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container>时对执行动作<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.023ex;" xmlns="http://www.w3.org/2000/svg" width="1.197ex" height="1.02ex" role="img" focusable="false" viewBox="0 -441 529 451"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g></g></g></svg></mjx-container>后的奖励;</li>
<li><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.489ex;" xmlns="http://www.w3.org/2000/svg" width="1.229ex" height="1.486ex" role="img" focusable="false" viewBox="0 -441 543 657"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D6FE" d="M31 249Q11 249 11 258Q11 275 26 304T66 365T129 418T206 441Q233 441 239 440Q287 429 318 386T371 255Q385 195 385 170Q385 166 386 166L398 193Q418 244 443 300T486 391T508 430Q510 431 524 431H537Q543 425 543 422Q543 418 522 378T463 251T391 71Q385 55 378 6T357 -100Q341 -165 330 -190T303 -216Q286 -216 286 -188Q286 -138 340 32L346 51L347 69Q348 79 348 100Q348 257 291 317Q251 355 196 355Q148 355 108 329T51 260Q49 251 47 251Q45 249 31 249Z"></path></g></g></g></svg></mjx-container>是折扣因子, 用于平衡当前奖励和未来奖励, 大小取0~1;</li>
<li><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="13.284ex" height="2.283ex" role="img" focusable="false" viewBox="0 -759 5871.7 1009"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="6D" d="M41 46H55Q94 46 102 60V68Q102 77 102 91T102 122T103 161T103 203Q103 234 103 269T102 328V351Q99 370 88 376T43 385H25V408Q25 431 27 431L37 432Q47 433 65 434T102 436Q119 437 138 438T167 441T178 442H181V402Q181 364 182 364T187 369T199 384T218 402T247 421T285 437Q305 442 336 442Q351 442 364 440T387 434T406 426T421 417T432 406T441 395T448 384T452 374T455 366L457 361L460 365Q463 369 466 373T475 384T488 397T503 410T523 422T546 432T572 439T603 442Q729 442 740 329Q741 322 741 190V104Q741 66 743 59T754 49Q775 46 803 46H819V0H811L788 1Q764 2 737 2T699 3Q596 3 587 0H579V46H595Q656 46 656 62Q657 64 657 200Q656 335 655 343Q649 371 635 385T611 402T585 404Q540 404 506 370Q479 343 472 315T464 232V168V108Q464 78 465 68T468 55T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z"></path><path data-c="61" d="M137 305T115 305T78 320T63 359Q63 394 97 421T218 448Q291 448 336 416T396 340Q401 326 401 309T402 194V124Q402 76 407 58T428 40Q443 40 448 56T453 109V145H493V106Q492 66 490 59Q481 29 455 12T400 -6T353 12T329 54V58L327 55Q325 52 322 49T314 40T302 29T287 17T269 6T247 -2T221 -8T190 -11Q130 -11 82 20T34 107Q34 128 41 147T68 188T116 225T194 253T304 268H318V290Q318 324 312 340Q290 411 215 411Q197 411 181 410T156 406T148 403Q170 388 170 359Q170 334 154 320ZM126 106Q126 75 150 51T209 26Q247 26 276 49T315 109Q317 116 318 175Q318 233 317 233Q309 233 296 232T251 223T193 203T147 166T126 106Z" transform="translate(833,0)"></path><path data-c="78" d="M201 0Q189 3 102 3Q26 3 17 0H11V46H25Q48 47 67 52T96 61T121 78T139 96T160 122T180 150L226 210L168 288Q159 301 149 315T133 336T122 351T113 363T107 370T100 376T94 379T88 381T80 383Q74 383 44 385H16V431H23Q59 429 126 429Q219 429 229 431H237V385Q201 381 201 369Q201 367 211 353T239 315T268 274L272 270L297 304Q329 345 329 358Q329 364 327 369T322 376T317 380T310 384L307 385H302V431H309Q324 428 408 428Q487 428 493 431H499V385H492Q443 385 411 368Q394 360 377 341T312 257L296 236L358 151Q424 61 429 57T446 50Q464 46 499 46H516V0H510H502Q494 1 482 1T457 2T432 2T414 3Q403 3 377 3T327 1L304 0H295V46H298Q309 46 320 51T331 63Q331 65 291 120L250 175Q249 174 219 133T185 88Q181 83 181 74Q181 63 188 55T206 46Q208 46 208 23V0H201Z" transform="translate(1333,0)"></path></g><g data-mml-node="msup" transform="translate(2027.7,0)"><g data-mml-node="mi"><path data-c="1D444" d="M399 -80Q399 -47 400 -30T402 -11V-7L387 -11Q341 -22 303 -22Q208 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435Q740 255 592 107Q529 47 461 16L444 8V3Q444 2 449 -24T470 -66T516 -82Q551 -82 583 -60T625 -3Q631 11 638 11Q647 11 649 2Q649 -6 639 -34T611 -100T557 -165T481 -194Q399 -194 399 -87V-80ZM636 468Q636 523 621 564T580 625T530 655T477 665Q429 665 379 640Q277 591 215 464T153 216Q153 110 207 59Q231 38 236 38V46Q236 86 269 120T347 155Q372 155 390 144T417 114T429 82T435 55L448 64Q512 108 557 185T619 334T636 468ZM314 18Q362 18 404 39L403 49Q399 104 366 115Q354 117 347 117Q344 117 341 117T337 118Q317 118 296 98T274 52Q274 18 314 18Z"></path></g><g data-mml-node="mo" transform="translate(824,363) scale(0.707)"><path data-c="2032" d="M79 43Q73 43 52 49T30 61Q30 68 85 293T146 528Q161 560 198 560Q218 560 240 545T262 501Q262 496 260 486Q259 479 173 263T84 45T79 43Z"></path></g></g><g data-mml-node="mo" transform="translate(3096.1,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msup" transform="translate(3485.1,0)"><g data-mml-node="mi"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></g><g data-mml-node="mo" transform="translate(502,363) scale(0.707)"><path data-c="2032" d="M79 43Q73 43 52 49T30 61Q30 68 85 293T146 528Q161 560 198 560Q218 560 240 545T262 501Q262 496 260 486Q259 479 173 263T84 45T79 43Z"></path></g></g><g data-mml-node="mo" transform="translate(4231.6,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="msup" transform="translate(4676.2,0)"><g data-mml-node="mi"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mo" transform="translate(562,363) scale(0.707)"><path data-c="2032" d="M79 43Q73 43 52 49T30 61Q30 68 85 293T146 528Q161 560 198 560Q218 560 240 545T262 501Q262 496 260 486Q259 479 173 263T84 45T79 43Z"></path></g></g><g data-mml-node="mo" transform="translate(5482.7,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container>是下一个状态的最大价值;</li>
<li><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="1.448ex" height="1.025ex" role="img" focusable="false" viewBox="0 -442 640 453"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D6FC" d="M34 156Q34 270 120 356T309 442Q379 442 421 402T478 304Q484 275 485 237V208Q534 282 560 374Q564 388 566 390T582 393Q603 393 603 385Q603 376 594 346T558 261T497 161L486 147L487 123Q489 67 495 47T514 26Q528 28 540 37T557 60Q559 67 562 68T577 70Q597 70 597 62Q597 56 591 43Q579 19 556 5T512 -10H505Q438 -10 414 62L411 69L400 61Q390 53 370 41T325 18T267 -2T203 -11Q124 -11 79 39T34 156ZM208 26Q257 26 306 47T379 90L403 112Q401 255 396 290Q382 405 304 405Q235 405 183 332Q156 292 139 224T121 120Q121 71 146 49T208 26Z"></path></g></g></g></svg></mjx-container>是学习率, 用于控制更新的速度.</li>
</ul>
<p>在States和Actions都是连续的情况下, 无法使用Q Table, 这时候也同样需要使用神经网络来拟合Q函数. 网络的输入为State和Action, 输出为Q值, 即最大期望价值.</p>
<img lazyload="" src="/images/loading.svg" data-src="/2024/08/30/Iterative-Optimal-Control-for-Robotics-System/6.png" class="" width="500">

<p>最后两个神经网络形成一个Actor-Critic结构, Actor用于选择动作, Critic用于评价动作的价值.</p>
<img lazyload="" src="/images/loading.svg" data-src="/2024/08/30/Iterative-Optimal-Control-for-Robotics-System/7.png" class="" width="500">

<h2 id="MPC-vs-RL"><a href="#MPC-vs-RL" class="headerlink" title="MPC vs RL"></a>MPC vs RL</h2><blockquote>
<p>Indeed, I do favor MPC over RL.<br>I’ve been making that point since at least 2016.<br>RL requires ridiculously large numbers of trials to learn any new task.<br>In contrast MPC is zero shot: If you have a good world model and a task objective, MPC can solve new tasks without any task-specific learning.<br>That’s the magic of planning.<br>It doesn’t mean that RL is useless, but its use should be a last resort.<br>—-Yann LeCun</p>
</blockquote>
<p>MPC的问题在于如何求解精确的MPC模型, MPC的前提是有一个准确的模型, 但是在实际应用中, 很难得到一个准确的模型, 这就是MPC的局限性.</p>
<p>对于难以建模或具有复杂动态的问题, 强化学习是一个更好的选择. 对于建模良好且动态可预测的问题. MPC模型预测控制是一个更好的选择.</p>
<p>很多人认为, MPC与RL的结合, MPC用于实时系统的控制, RL用于参数的调整以获得更好的性能.</p>
<blockquote>
<p>MPC controls real-time movement, while RL adapts parameters for better performance.</p>
</blockquote>
<h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ul>
<li><p><a class="link" href="https://www.bilibili.com/video/BV1WbeueyELJ?p=1&vd_source=3c842e78ba17ee7afd3375b35f554ca1">【强化学习训练走路的机器人】油管最强动画强化学习入门！不愧是MATLAB官方教程，行走机器人|深度学习|AI 人工智能 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
</li>
<li><p><a class="link" href="https://www.bilibili.com/video/BV1zp421972W/?spm_id_from=333.788.recommend_more_video.0&vd_source=3c842e78ba17ee7afd3375b35f554ca1">(强推!) 2024CMU最新【最优控制与强化学习】全套教程，私立顶尖大学的水平！-人工智能/卡内基梅隆大学/16-745 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
</li>
<li><p><a class="link" href="https://www.bilibili.com/video/BV1RF411u7T4/?spm_id_from=333.337.search-card.all.click&vd_source=3c842e78ba17ee7afd3375b35f554ca1">「现代控制理论」Chap12 最优控制 泛函与变分 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
</li>
</ul>
]]></content>
      <categories>
        <category>Mathematics</category>
      </categories>
  </entry>
  <entry>
    <title>LLM + Robotics</title>
    <url>/2024/09/12/LLM-Robotics/</url>
    <content><![CDATA[<h2 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h2><blockquote>
<p>The way we program robots today is rigid! They can’t be flexibly re-programmed by everyday users.</p>
</blockquote>
<p>传统机器人执行pick and place任务的流程:</p>
<ol>
<li>利用cv算法检测出要抓取的目标物体;</li>
<li>计算机械臂该用什么姿势抓取物体;</li>
<li>移动机械臂到抓取姿势并抓取</li>
<li>根据要求移动机械臂到指定位置;</li>
<li>计算机械臂放下物体的姿势并放下;</li>
</ol>
<p>传统机器人控制中存在的弊端:</p>
<ul>
<li>对于每一个任务, 现实中有大量边缘情况, 需要设计更复杂的规则来应对;</li>
<li>对于每一个任务都需要人类专家设计规则, 但现实中复杂任务数不胜数, 且任务之间很难融洽;</li>
</ul>
<p>Two Fundamental Challenges:</p>
<ul>
<li>Ground natural language in robot state.</li>
</ul>
<p>如何把自然语言转换成能够被机器人识别, 处理的状态?</p>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2024/09/12/LLM-Robotics/1.png"
                      class="" width="500"
                >

<p>例如抓取桌子最左边的红色方块, 需要机器人识别和定位到桌子, 桌子上的物体, 红色的方块, 以及相对位置关系.</p>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2024/09/12/LLM-Robotics/2.png"
                      class="" width="500"
                >

<ul>
<li>Planning actions to solve a task.</li>
</ul>
<p>如何规划合适的动作来完成任务?</p>
<p>例如”把货架的苹果放到桌子上”, 整个执行流程随着任务的复杂程度不断增加;</p>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2024/09/12/LLM-Robotics/3.png"
                      class="" width="500"
                >

<p>同样的, 多个物体的task planning.</p>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2024/09/12/LLM-Robotics/4.png"
                      class="" width="500"
                >


<p>Microsoft提出了Robotics with ChatGPT的设计原则:</p>
<ol>
<li>设计一个task-relevant的API Library, 这个库将high-level的自然语言指令转换为low-level的机器人动作.</li>
<li>给chatgpt设计prompt, 用来描述任务目标并且需要陈输出high-level的库, 这些prompt也会包含任务的约束;</li>
<li>用户通过实验结果不断优化prompt来优化chatgpt的输出;</li>
<li>如果用户对目前的chatgpt的输出感到满意, 则最后部署到实际的机器人上.</li>
</ol>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2024/09/12/LLM-Robotics/5.png"
                      class="" width="1000"
                >

<h2 id="科研机器人设计思路"><a href="#科研机器人设计思路" class="headerlink" title="科研机器人设计思路"></a>科研机器人设计思路</h2><p>目标是设计出一个机器人, 能够泛化的执行一些科研任务, 例如做材料实验, 化学实验等;</p>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2024/09/12/LLM-Robotics/6.png"
                      class="" width="800"
                >


<p>LLM在观测后输出一整个计划的行动序列, 就需要LLM对环境的未来走向有很好的了解.</p>
<h3 id="Tricks-for-Improving-Plan"><a href="#Tricks-for-Improving-Plan" class="headerlink" title="Tricks for Improving Plan"></a>Tricks for Improving Plan</h3><ul>
<li>执行前Self-refine</li>
</ul>
<p>在LLM生成plan后, 使用另一个LLM (或者人类设定的启发式评估函数) 来评估其好坏, 并且给出指导性意见;</p>
<p>但在这种情况下, LLM常常无法正确定位出错误; 通常会出现自己误导自己的情况;</p>
<ul>
<li>Self-consistency</li>
</ul>
<p>LLM通过多次生成规划并且选择最优的生成结果.</p>
<ul>
<li>执行后Self-reflection</li>
</ul>
<p>让LLM从环境的反馈+自身反思中优化计划;</p>
<p>环境的反馈可能包括以下失败的原因:</p>
<ul>
<li>生成的动作不合规范, 没有正确调用action function;</li>
<li>没有满足动作的执行条件, 如手中没有物体时, 执行放下物体的动作;</li>
<li>LLM自己以为生成的plan已经完成了任务, 实际任务还没有完成;</li>
<li>生成的plan有很多冗余动作, 导致动作序列太长;</li>
</ul>
<p><strong>Replan机制: 结合ReAct与Planning</strong></p>
<p>生成plan之后, 先执行plan获得环境的反馈和新观测信息后, 从当前状态继续规划;<br>同时, Replan允许LLM分析解决问题, 如可以先执行探索plan, 再根据结果调整和生成后续plan.</p>
<p><strong>Tree search</strong></p>
<p>如果计划未通过self-evaluation或执行失败, 在计划中的各步思考有哪些可行解决方案;</p>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2024/09/12/LLM-Robotics/7.png"
                      class="" width="800"
                >

<p>使用DFS或BFS, 在叶节点进行self-evaluation, 最终选择一条最优计划;</p>
<p>Tree search的缺点是</p>
<ul>
<li>消耗的tokens数大大增加;</li>
<li>容易在错误的分支上花费很多搜索;</li>
</ul>
<p><strong>State tracking</strong></p>
<p>预测出操作一步之后, 环境会发生什么样的变化, 对下一步的状态进行估计;</p>
<p>原本LLM应该包含这一步, 但是由于大模型的幻觉, 可能对下一步的状态估计不准确;</p>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2024/09/12/LLM-Robotics/8.png"
                      class="" width="800"
                >

<p>可以使用另一个LLM作为world model来预测每一步动作后的观测;</p>
<p><strong>问题分析</strong></p>
<ul>
<li>不着急直接输出Plan, 先让LLM自己分析一下这个问题: 这个问题有什么特点, 有什么易错点, 可以借助什么知识;</li>
<li>Step back: 退一步看问题, 先针对问题中的核心概念提一个相关问题, 再回答原问题;</li>
<li>让LLM重新强调一下输入环境和规则的重点, 有助于提取关键信息和进一步思考;</li>
</ul>
<h3 id="Plan-with-Code"><a href="#Plan-with-Code" class="headerlink" title="Plan with Code"></a>Plan with Code</h3><p>当再LLM的API输入high-level action之后得到的low-level actions sequence, 还可以让LLM直接生成代码, 例如生成Python代码;</p>
<p>其优点有:</p>
<ul>
<li>利用代码的逻辑能力和可直接执行性;</li>
<li>有更高的自由性, 不只是调用已有的high-level action;</li>
<li>有更好的复用性, 可以利用他人的代码以及保存已有代码;</li>
</ul>
<p>甚至可以让LLM在code中自行定义有用的function;</p>
<h3 id="Replan机制"><a href="#Replan机制" class="headerlink" title="Replan机制"></a>Replan机制</h3><p>如果计划遇到问题, 可以重新来过然后优化计划, 但是现实中常常不能重新来, 要在犯错后继续规划来完成任务.</p>
<p>需要做的事情:</p>
<ul>
<li>环境返回执行错误的原因,以及当前最新状态和观测</li>
<li>让LLM解释犯错的原因</li>
</ul>
<p>可以使用LLM worker, 监视每一步的执行结果, 或者在Plan code里面设定一些checkpoint, 保证环境变量按照计划执行;</p>
<h2 id="A-Inspector-based-on-Markov-Chain-for-low-level-action-sequence-An-Innovative-Idea"><a href="#A-Inspector-based-on-Markov-Chain-for-low-level-action-sequence-An-Innovative-Idea" class="headerlink" title="A Inspector based on Markov Chain for low-level action sequence (An Innovative Idea)"></a>A Inspector based on Markov Chain for low-level action sequence (An Innovative Idea)</h2><p>马尔可夫链数学基础参考教程:</p>
<ul>
<li><a class="link"   href="https://math.libretexts.org/Bookshelves/Applied_Mathematics/Applied_Finite_Mathematics_(Sekhon_and_Bloom)/10%3A_Markov_Chains/10.01%3A_Introduction_to_Markov_Chains" >Introduction to Markov Chains <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
</ul>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2024/09/12/LLM-Robotics/9.png"
                      class="" width="600"
                >

<p>由于LLM以及大模型存在的幻觉, low-level action sequence本身的action或者sequence是有可能出错的;</p>
<p>对于像生物, 材料, 化学等实验任务, 必须保证实验的正确性和严谨性, 同时由于这些理科实验, 必须满足严格的逻辑, 因此借助马尔可夫链来检验low-level action sequence的正确性;</p>
<h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ul>
<li><a class="link"   href="https://github.com/GT-RIPL/Awesome-LLM-Robotics" >Awesome-LLM-Robotics <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://zhuanlan.zhihu.com/p/668053911" >Robotics+LLM系列通过大语言模型控制机器人 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://www.microsoft.com/en-us/research/articles/chatgpt-for-robotics/" >ChatGPT for Robotics: Design Principles and Model Abilities <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://www.bilibili.com/video/BV1JgsxebEf5/?spm_id_from=333.788&vd_source=3c842e78ba17ee7afd3375b35f554ca1" >LLM for Robotics前沿- 系统性讲解大语言模型如何助力通用机器人 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
</ul>
]]></content>
      <categories>
        <category>Robotics</category>
      </categories>
  </entry>
  <entry>
    <title>Latex入门</title>
    <url>/2023/07/28/Latex%E5%85%A5%E9%97%A8/</url>
    <content><![CDATA[<h2 id="为什么用latex"><a href="#为什么用latex" class="headerlink" title="为什么用latex"></a>为什么用latex</h2><p>提高技术文档的工作效率，无论是官方的文档还是挑战杯、大创等等都需要大量的技术材料，这种专业的技术材料的写作通常都会使用latex进行排版，在战队编写文档的过程中，使用word容易出现格式不统一，整理和排版混乱的情况，在22赛季末的赛季总结排版工作中尤为严重，需要花费大量大量的时间和精力去做，因此使用latex进行替代，可以提前对文档进行排版，最终整合大家内容只需要进行一些简单的搬运工作即可完成最终的整合，同时能够形成风格统一，格式严整的文档，另外还可以使用git进行版本管理。</p>
<p>在做presentation中，通常还需要用到PPT，这里提供一个latex_beamer的解决方案，能够在短时间内，做出一份学术性强，比较academic的幻灯片，适合用于组会汇报，技术学术分享演讲等等。</p>
<h2 id="Latex写作环境配置"><a href="#Latex写作环境配置" class="headerlink" title="Latex写作环境配置"></a>Latex写作环境配置</h2><ol>
<li>给vscode安装插件（安装vscode记得选择添加到path）：</li>
</ol>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/07/28/Latex%E5%85%A5%E9%97%A8/fig_1.png"
                      class="" width="300"
                >

<ol start="2">
<li>安装Texlive</li>
</ol>
<p><a class="link"   href="https://tug.org/texlive/" >Texlive官网 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p>选择<code>install on Windows</code>-&gt;<code>install-tl-windows.exe</code></p>
<p>下载好之后右键<code>以管理员身份运行</code>开始安装：（自行选择安装位置）</p>
<div style="display: flex; align-items: center;">
    <div style="flex: 50%; padding: 5px;">
        <img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/07/28/Latex%E5%85%A5%E9%97%A8/fig_2.png"
                      class="" width="500"
                >
    </div>
    <div style="flex: 50%; padding: 5px;">
        <img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/07/28/Latex%E5%85%A5%E9%97%A8/fig_3.png"
                      class="" width="420"
                >
    </div>
</div>

<p>由于默认的编辑器并不好用，可以把<code>安装TeXworks前端</code>去掉；</p>
<div style="display: flex; align-items: center;">
    <div style="flex: 50%; padding: 5px;">
        <img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/07/28/Latex%E5%85%A5%E9%97%A8/fig_4.png"
                      class="" width="300"
                >
    </div>
    <div style="flex: 50%; padding: 5px;">
        <img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/07/28/Latex%E5%85%A5%E9%97%A8/fig_5.png"
                      class="" width="400"
                >
    </div>
</div>

<ol start="3">
<li>配置vscode</li>
</ol>
<p>安装好texlive重启vscode，<code>Ctrl+,</code>打开设置，右上角打开<code>setting.json</code></p>
<p>添加以下内容，用花括号包起来：</p>
<div class="highlight-container" data-rel="Json"><figure class="iseeu highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;latex-workshop.latex.autoBuild.run&quot;</span><span class="punctuation">:</span> <span class="string">&quot;never&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;latex-workshop.showContextMenu&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;latex-workshop.intellisense.package.enabled&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;latex-workshop.message.error.show&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;latex-workshop.message.warning.show&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;latex-workshop.latex.tools&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;xelatex&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;command&quot;</span><span class="punctuation">:</span> <span class="string">&quot;xelatex&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;args&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                <span class="string">&quot;-synctex=1&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;-interaction=nonstopmode&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;-file-line-error&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;%DOCFILE%&quot;</span></span><br><span class="line">            <span class="punctuation">]</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;pdflatex&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;command&quot;</span><span class="punctuation">:</span> <span class="string">&quot;pdflatex&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;args&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                <span class="string">&quot;-synctex=1&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;-interaction=nonstopmode&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;-file-line-error&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;%DOCFILE%&quot;</span></span><br><span class="line">            <span class="punctuation">]</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;latexmk&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;command&quot;</span><span class="punctuation">:</span> <span class="string">&quot;latexmk&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;args&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                <span class="string">&quot;-synctex=1&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;-interaction=nonstopmode&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;-file-line-error&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;-pdf&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;-outdir=%OUTDIR%&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;%DOCFILE%&quot;</span></span><br><span class="line">            <span class="punctuation">]</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;bibtex&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;command&quot;</span><span class="punctuation">:</span> <span class="string">&quot;bibtex&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;args&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                <span class="string">&quot;%DOCFILE%&quot;</span></span><br><span class="line">            <span class="punctuation">]</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;latex-workshop.latex.recipes&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;XeLaTeX&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;tools&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                <span class="string">&quot;xelatex&quot;</span></span><br><span class="line">            <span class="punctuation">]</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;PDFLaTeX&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;tools&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                <span class="string">&quot;pdflatex&quot;</span></span><br><span class="line">            <span class="punctuation">]</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;BibTeX&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;tools&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                <span class="string">&quot;bibtex&quot;</span></span><br><span class="line">            <span class="punctuation">]</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;LaTeXmk&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;tools&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                <span class="string">&quot;latexmk&quot;</span></span><br><span class="line">            <span class="punctuation">]</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;xelatex -&gt; bibtex -&gt; xelatex*2&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;tools&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                <span class="string">&quot;xelatex&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;bibtex&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;xelatex&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;xelatex&quot;</span></span><br><span class="line">            <span class="punctuation">]</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;pdflatex -&gt; bibtex -&gt; pdflatex*2&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;tools&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                <span class="string">&quot;pdflatex&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;bibtex&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;pdflatex&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;pdflatex&quot;</span></span><br><span class="line">            <span class="punctuation">]</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;latex-workshop.latex.clean.fileTypes&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="string">&quot;*.aux&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;*.bbl&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;*.blg&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;*.idx&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;*.ind&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;*.lof&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;*.lot&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;*.out&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;*.toc&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;*.acn&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;*.acr&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;*.alg&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;*.glg&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;*.glo&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;*.gls&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;*.ist&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;*.fls&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;*.log&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;*.fdb_latexmk&quot;</span></span><br><span class="line">    <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;latex-workshop.latex.autoClean.run&quot;</span><span class="punctuation">:</span> <span class="string">&quot;onFailed&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;latex-workshop.latex.recipe.default&quot;</span><span class="punctuation">:</span> <span class="string">&quot;lastUsed&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;latex-workshop.view.pdf.internal.synctex.keybinding&quot;</span><span class="punctuation">:</span> <span class="string">&quot;double-click&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure></div>

<ol start="4">
<li>安装SumatraPdf</li>
</ol>
<p>SumatraPdf是vscode+latex的好帮手，同时也是一个好用的pdf阅读器；</p>
<p><a class="link"   href="https://www.sumatrapdfreader.org/download-free-pdf-viewer" >官网 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p>在<code>setting.json</code>中添加内容: (注意修改路径!)</p>
<div class="highlight-container" data-rel="Json"><figure class="iseeu highlight json"><table><tr><td class="code"><pre><span class="line"><span class="attr">&quot;latex-workshop.view.pdf.external.synctex.command&quot;</span><span class="punctuation">:</span></span><br><span class="line">    <span class="string">&quot;D:/Code/SumatraPDF/SumatraPDF.exe&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;latex-workshop.view.pdf.external.synctex.args&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="string">&quot;-forward-search&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="string">&quot;%TEX%&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="string">&quot;%LINE%&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="string">&quot;%PDF%&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="punctuation">]</span><span class="punctuation">,</span></span><br></pre></td></tr></table></figure></div>

<ol start="5">
<li>设置SumatraPdf</li>
</ol>
<p>选择<code>设置</code>，选择<code>高级选项</code>，然后打开一个<code>.txt</code>文件</p>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/07/28/Latex%E5%85%A5%E9%97%A8/fig_6.png"
                      class="" width="400"
                >

<p>在最后一行加入以下内容：（注意修改vscode的安装路径, 可以在应用的属性中找到, 这里的斜杠不用改, 且需要更改两处）</p>
<div class="highlight-container" data-rel="Txt"><figure class="iseeu highlight txt"><table><tr><td class="code"><pre><span class="line">InverseSearchCmdLine = &quot;C:\Users\hwx_pc\AppData\Local\Programs\Microsoft VS Code\Code.exe&quot; &quot;C:\Users\hwx_pc\AppData\Local\Programs\Microsoft VS Code\resources\app\out\cli.js&quot;  --ms-enable-electron-run-as-node -r -g &quot;%f:%l&quot;</span><br><span class="line">EnableTeXEnhancements = true</span><br></pre></td></tr></table></figure></div>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/07/28/Latex%E5%85%A5%E9%97%A8/fig_7.png"
                      class="" width="400"
                >

<p>这样，就基本完成所有的配置了；</p>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/07/28/Latex%E5%85%A5%E9%97%A8/fig_8.png"
                      class="" width="400"
                >


  <div class="note p-4 mb-4 rounded-small info">
    <p>正向搜索：右键vscode界面，选择<code>SyncTex form cursor</code>，即可跳转到源代码对应pdf的内容。</p>

  </div>

<ol start="6">
<li>测试</li>
</ol>
<p>新建一个工程文件夹, 用vscode打开, 新建一个<code>.tex</code>文件;</p>
<p>输入:</p>
<div class="highlight-container" data-rel="Tex"><figure class="iseeu highlight tex"><table><tr><td class="code"><pre><span class="line"><span class="keyword">\documentclass</span>[UTF8]&#123;ctexart&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\begin</span>&#123;document&#125;</span><br><span class="line"></span><br><span class="line">你好！！！</span><br><span class="line"></span><br><span class="line"><span class="keyword">\end</span>&#123;document&#125;</span><br></pre></td></tr></table></figure></div>
<p>编写完内容后点击绿色的编译按钮，左下角显示编译成功后，在点击打开pdf，即可查看pdf和导出。</p>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/07/28/Latex%E5%85%A5%E9%97%A8/fig_9.png"
                      class="" width="500"
                >

<h2 id="Latex基础语法"><a href="#Latex基础语法" class="headerlink" title="Latex基础语法"></a>Latex基础语法</h2><h3 id="开头"><a href="#开头" class="headerlink" title="开头"></a>开头</h3><p>当我们需要一个中英文混排的文档的时候，需要对文档类型进行定义，一般使用命令<code>\documentclass[UTF8]&#123;ctexart&#125;</code>，UTF8是默认使用的编码类型，需要在命令中定义，否则可能会出现乱码。</p>
<p>所有位于<code>\begin&#123;document&#125;</code>之前的内容都被称作是导言区（preamble），写作开始前要在前言中做以下事情：</p>
<ul>
<li>设置文档的格式；</li>
<li>设定页面的尺寸；</li>
<li>在指定的文档中导入需要的宏包；<br>介于<code>\begin&#123;document&#125;</code>和<code>\end&#123;document&#125;</code>之间的内容称为文档的正文区。</li>
</ul>

  <div class="note p-4 mb-4 rounded-small tip">
    <p>💡在修改导言区的设置中，一般需要编译两次才能成功修改文档的结果，而在正文区写作只需要编译一次即可。</p>

  </div>

<h3 id="封面"><a href="#封面" class="headerlink" title="封面"></a>封面</h3><p>在导言区加入三行命令，分别是题目、作者和日期，同时在正文区加一行\maketitle，便可以实现一个简单的封面。</p>
<div class="highlight-container" data-rel="Tex"><figure class="iseeu highlight tex"><table><tr><td class="code"><pre><span class="line"><span class="keyword">\documentclass</span>[UTF8]&#123;ctexart&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\title</span>&#123;RoboMaster步兵发射机构研究&#125;</span><br><span class="line"><span class="keyword">\author</span>&#123;智宝&#125;</span><br><span class="line"><span class="keyword">\date</span>&#123;<span class="keyword">\today</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\begin</span>&#123;document&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\maketitle</span></span><br><span class="line"></span><br><span class="line">你好！！！</span><br><span class="line"></span><br><span class="line"><span class="keyword">\end</span>&#123;document&#125;</span><br></pre></td></tr></table></figure></div>

<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/07/28/Latex%E5%85%A5%E9%97%A8/fig_10.png"
                      class="" width="600"
                >


<h3 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h3><div class="highlight-container" data-rel="Tex"><figure class="iseeu highlight tex"><table><tr><td class="code"><pre><span class="line"><span class="keyword">\clearpage</span></span><br><span class="line"><span class="keyword">\tableofcontents</span></span><br></pre></td></tr></table></figure></div>
<p>生成目录的命令需要编译两次！</p>
<h3 id="格式化命令"><a href="#格式化命令" class="headerlink" title="格式化命令"></a>格式化命令</h3><p>在正文区的写作中，在格式化命令的情况下，只需要将文字放入花括号即可。</p>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/07/28/Latex%E5%85%A5%E9%97%A8/fig_11.png"
                      class="" width="800"
                >

<div class="highlight-container" data-rel="Tex"><figure class="iseeu highlight tex"><table><tr><td class="code"><pre><span class="line"><span class="keyword">\textbf</span>&#123;在比赛中，由于常用的电机只用寥寥几种，若采用直驱的方式，则会有很多场景无法使用，例如英雄的Pitch控制，单独用一个RM6020电机会导致动力不足，</span><br><span class="line">采用两个6020则会显得过于笨重。&#125;</span><br><span class="line"><span class="keyword">\textit</span>&#123;若采用同步带，齿轮，连杆等传动结构，则能够实现控制的同时保证机构的灵活性，&#125;</span><br><span class="line"><span class="keyword">\underline</span>&#123;同时也能起到节省成本的作用。&#125;</span><br><span class="line"></span><br><span class="line">通过修改3508的减速箱的减速比，使得云台控制可以更换为重量更轻的3508电机使得整个机器人更加灵活。</span><br></pre></td></tr></table></figure></div>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/07/28/Latex%E5%85%A5%E9%97%A8/fig_13.png"
                      class="" width="600"
                >


<h3 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h3><div class="highlight-container" data-rel="Tex"><figure class="iseeu highlight tex"><table><tr><td class="code"><pre><span class="line"><span class="keyword">\section</span>*&#123;第一章&#125;</span><br><span class="line">这是第一章的内容</span><br><span class="line"></span><br><span class="line"><span class="keyword">\subsection</span>*&#123;第一章的子章节&#125;</span><br><span class="line">这是子章节的内容</span><br><span class="line"></span><br><span class="line"><span class="keyword">\section</span>*&#123;第二章&#125;</span><br><span class="line">这是第二章的内容</span><br><span class="line"></span><br><span class="line"><span class="keyword">\section</span>&#123;第三章&#125;</span><br><span class="line">这是第三章的内容</span><br></pre></td></tr></table></figure></div>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/07/28/Latex%E5%85%A5%E9%97%A8/fig_12.png"
                      class="" width="500"
                >

<h3 id="添加图片"><a href="#添加图片" class="headerlink" title="添加图片"></a>添加图片</h3><p>需要在导言区中添加<code>\usepackage&#123;graphicx&#125;</code>宏包。</p>
<p>然后在正文中添加<code>\includegraphics&#123;&#125;</code>，花括号中的内容是图片的文件名，图片文件需要放入tex的文件夹中，一般不需要写文件后缀名，或者也可以利用vscode直接选择对应的文件。</p>
<p>通常图片的尺寸会很不合适，因此需要将图片的尺寸与文本进行匹配。这里的<code>\textwidth</code>表示文本的宽度，这里的图片等于文本的0.5倍宽度。</p>
<div class="highlight-container" data-rel="Tex"><figure class="iseeu highlight tex"><table><tr><td class="code"><pre><span class="line"><span class="keyword">\includegraphics</span>[width=0.5<span class="keyword">\textwidth</span>]&#123;figure<span class="built_in">_</span>1&#125;</span><br></pre></td></tr></table></figure></div>
<p>正常情况下还需要将图片居中，给图片出一个标题，因此需要图片嵌套在一个figure的环境中，利用<code>\caption</code>指定图片的标题。利用<code>\centering</code>命令将图片居中。</p>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/07/28/Latex%E5%85%A5%E9%97%A8/fig_14.png"
                      class="" width="500"
                >

<p>有时候图片会产生错位, 需要进行以下修改:</p>
<div class="highlight-container" data-rel="Tex"><figure class="iseeu highlight tex"><table><tr><td class="code"><pre><span class="line">...</span><br><span class="line"><span class="keyword">\usepackage</span>&#123;float&#125;</span><br><span class="line">...</span><br><span class="line"><span class="keyword">\begin</span>&#123;figure&#125;[H]</span><br><span class="line">    <span class="keyword">\centering</span></span><br><span class="line">    <span class="keyword">\includegraphics</span>[width=0.5<span class="keyword">\textwidth</span>]&#123;figure<span class="built_in">_</span>1&#125;</span><br><span class="line">    <span class="keyword">\caption</span>&#123;图片&#125;</span><br><span class="line"><span class="keyword">\end</span>&#123;figure&#125;</span><br></pre></td></tr></table></figure></div>

<h3 id="列表的创建"><a href="#列表的创建" class="headerlink" title="列表的创建"></a>列表的创建</h3><div class="highlight-container" data-rel="Tex"><figure class="iseeu highlight tex"><table><tr><td class="code"><pre><span class="line"><span class="keyword">\begin</span>&#123;itemize&#125;</span><br><span class="line">    <span class="keyword">\item</span> 步兵</span><br><span class="line">    <span class="keyword">\item</span> 英雄</span><br><span class="line">    <span class="keyword">\item</span> 工程</span><br><span class="line"><span class="keyword">\end</span>&#123;itemize&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\begin</span>&#123;enumerate&#125;</span><br><span class="line">    <span class="keyword">\item</span> 哨兵</span><br><span class="line">    <span class="keyword">\item</span> 飞镖</span><br><span class="line">    <span class="keyword">\item</span> 雷达</span><br><span class="line"><span class="keyword">\end</span>&#123;enumerate&#125;</span><br></pre></td></tr></table></figure></div>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/07/28/Latex%E5%85%A5%E9%97%A8/fig_15.png"
                      class="" width="500"
                >

<h3 id="数学公式"><a href="#数学公式" class="headerlink" title="数学公式"></a>数学公式</h3><ul>
<li>行内公式通过<code>$...$</code>进行填写；</li>
<li>行外公式利用<code>\begin&#123;equation&#125;...\end&#123;equation&#125;</code>环境进行填写。<div class="highlight-container" data-rel="Tex"><figure class="iseeu highlight tex"><table><tr><td class="code"><pre><span class="line">爱因斯坦在1905年发现的质能守衡方程为: <span class="built_in">$</span>E = mc<span class="built_in">^</span>2<span class="built_in">$</span></span><br><span class="line"></span><br><span class="line">拉普拉斯变换</span><br><span class="line"><span class="keyword">\begin</span>&#123;equation&#125;</span><br><span class="line">    F(p) = <span class="keyword">\int</span><span class="built_in">_</span>0<span class="built_in">^</span><span class="keyword">\infty</span> f(t)e<span class="built_in">^</span>&#123;-pt&#125;d t</span><br><span class="line"><span class="keyword">\end</span>&#123;equation&#125;</span><br></pre></td></tr></table></figure></div>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/07/28/Latex%E5%85%A5%E9%97%A8/fig_16.png"
                      class="" width="500"
                ></li>
</ul>
<blockquote>
<p>补充：数学公式在tex中成一个体系语言，需要用到时上网查阅即可。另外也可以通过各种公式编辑器进行数学公式的输入。</p>
</blockquote>
<p><a class="link"   href="https://www.latexlive.com/" >在线LaTeX公式编辑器-编辑器 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<h3 id="表格的用法"><a href="#表格的用法" class="headerlink" title="表格的用法"></a>表格的用法</h3><p>Latex的表格绘制比较麻烦，可以用表格生成器代替：</p>
<p><a class="link"   href="https://www.tablesgenerator.com/" >Table Generator <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p>将代码直接复制到tex文件即可.</p>
<h3 id="Latex中文手册"><a href="#Latex中文手册" class="headerlink" title="Latex中文手册"></a>Latex中文手册</h3>

	<div class="row">
    <embed src="./lshort-zh-cn.pdf" width="100%" height="550" type="application/pdf">
	</div>




<h2 id="Latex制作幻灯片"><a href="#Latex制作幻灯片" class="headerlink" title="Latex制作幻灯片"></a>Latex制作幻灯片</h2><p>用latex做幻灯片的优点:</p>
<ul>
<li>学术性非常强;</li>
<li>兼容latex的各种命令, 方便移植;</li>
<li>编辑需要较强的逻辑性;</li>
<li>输出为pdf, 方便跨设备分享;</li>
</ul>
<p>利用<code>beamer</code>文档类型作为幻灯片格式，然后进行创作。</p>
<p>幻灯片的每一页都是一帧 frame, beamer的帧分为三类</p>
<div class="highlight-container" data-rel="Tex"><figure class="iseeu highlight tex"><table><tr><td class="code"><pre><span class="line"><span class="comment">% 标题帧</span></span><br><span class="line"><span class="keyword">\frame</span>&#123;<span class="keyword">\titlepage</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">% 普通帧</span></span><br><span class="line"><span class="keyword">\begin</span>&#123;frame&#125;[&lt;对齐方式&gt;]<span class="keyword">\frametitle</span>&#123;帧标题&#125;    <span class="comment">% 对齐方式可以选择 c 和 t，分别是居中和从上往下</span></span><br><span class="line">内容</span><br><span class="line"><span class="keyword">\end</span>&#123;frame&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">% 空白帧（空白帧没有标题）</span></span><br><span class="line"><span class="keyword">\begin</span>&#123;frame&#125;[plain]</span><br><span class="line">内容</span><br><span class="line"><span class="keyword">\end</span>&#123;frame&#125;</span><br></pre></td></tr></table></figure></div>

<p>通过<code>\usetheme&#123;&#125;</code>命令可以选择主题;&#96;</p>
<p><a class="link"   href="https://latex-beamer.com/tutorials/beamer-themes/" >Beamer Themes — Full List <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<h3 id="示例报告"><a href="#示例报告" class="headerlink" title="示例报告"></a>示例报告</h3><div class="highlight-container" data-rel="Tex"><figure class="iseeu highlight tex"><table><tr><td class="code"><pre><span class="line"><span class="keyword">\documentclass</span>[11pt]&#123;beamer&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\usepackage</span>[space,hyperref,UTF8]&#123;ctex&#125;</span><br><span class="line"><span class="keyword">\usepackage</span>&#123;graphicx&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">% chktex-file 44</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">\setbeamertemplate</span>&#123;caption&#125;[numbered]       <span class="comment">% 给表格和图片加上数字</span></span><br><span class="line"><span class="keyword">\setbeamertemplate</span>&#123;navigation&#125;&#123;&#125;    <span class="comment">% 删除导航栏</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">\usefonttheme</span>[onlymath]&#123;serif&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">% 使用背景</span></span><br><span class="line"><span class="keyword">\usetheme</span>&#123;warsaw&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\title</span>&#123;飞镖系统工作汇报&#125;</span><br><span class="line"><span class="keyword">\author</span>&#123;洪汶熙、朱子骐、赵启豪、彭洛延&#125;</span><br><span class="line"><span class="keyword">\date</span>&#123;<span class="keyword">\today</span>&#125;</span><br><span class="line"><span class="keyword">\institute</span>&#123;飞镖组&#125;</span><br><span class="line"><span class="keyword">\titlegraphic</span>&#123;<span class="keyword">\includegraphics</span>[width = 0.35<span class="keyword">\textwidth</span>]&#123;dart&#125;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">% 开始写幻灯片</span></span><br><span class="line"><span class="keyword">\begin</span>&#123;document&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">% 第一帧</span></span><br><span class="line"><span class="keyword">\frame</span>&#123;<span class="keyword">\titlepage</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">% 第二帧</span></span><br><span class="line"><span class="keyword">\begin</span>&#123;frame&#125;[c]<span class="keyword">\frametitle</span>&#123;frame title&#125;</span><br><span class="line">    The context goes here。飞镖系统</span><br><span class="line"><span class="keyword">\end</span>&#123;frame&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">% 第三帧</span></span><br><span class="line"><span class="keyword">\begin</span>&#123;frame&#125;[t]<span class="keyword">\frametitle</span>&#123;机械部分&#125;</span><br><span class="line"><span class="keyword">\begin</span>&#123;description&#125;</span><br><span class="line">    <span class="keyword">\item</span>[First Item] Description of first item</span><br><span class="line">    <span class="keyword">\item</span>[Second Item] Description of second item</span><br><span class="line">    <span class="keyword">\item</span>[Third Item] Description of third item</span><br><span class="line">    <span class="keyword">\item</span>[Forth Item] Description of forth  </span><br><span class="line"><span class="keyword">\end</span>&#123;description&#125;</span><br><span class="line"><span class="keyword">\end</span>&#123;frame&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">% 第四帧</span></span><br><span class="line"><span class="keyword">\begin</span>&#123;frame&#125;</span><br><span class="line"><span class="keyword">\emph</span>&#123;Sample Text&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\textbf</span>&#123;Sample Text&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\textit</span>&#123;Sample Text&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\textsl</span>&#123;Sample Text&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\alert</span>&#123;Sample Text&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\textrm</span>&#123;Sample Text&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\textsf</span>&#123;Sample Text&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\textcolor</span>&#123;green&#125;&#123;Sample Text&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\structure</span>&#123;Sample Text&#125;</span><br><span class="line"><span class="keyword">\end</span>&#123;frame&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">% 第五帧</span></span><br><span class="line"><span class="keyword">\begin</span>&#123;frame&#125;</span><br><span class="line"><span class="keyword">\begin</span>&#123;equation&#125;</span><br><span class="line">    a<span class="built_in">^</span>2 + b<span class="built_in">^</span>2 = c<span class="built_in">^</span>2</span><br><span class="line"><span class="keyword">\end</span>&#123;equation&#125;</span><br><span class="line"><span class="keyword">\end</span>&#123;frame&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">% 第六帧</span></span><br><span class="line"><span class="keyword">\begin</span>&#123;frame&#125;</span><br><span class="line">    <span class="keyword">\begin</span>&#123;columns&#125;</span><br><span class="line">    <span class="keyword">\begin</span>&#123;column&#125;&#123;0.5<span class="keyword">\textwidth</span>&#125;</span><br><span class="line">        <span class="keyword">\begin</span>&#123;itemize&#125; </span><br><span class="line">            <span class="keyword">\item</span> The first item</span><br><span class="line">            <span class="keyword">\item</span> The second tiem</span><br><span class="line">            <span class="keyword">\item</span> The third item</span><br><span class="line">            <span class="keyword">\item</span> The fourth item</span><br><span class="line">        <span class="keyword">\end</span>&#123;itemize&#125;</span><br><span class="line">    <span class="keyword">\end</span>&#123;column&#125;</span><br><span class="line">    <span class="keyword">\begin</span>&#123;column&#125;&#123;0.5<span class="keyword">\textwidth</span>&#125;</span><br><span class="line">        <span class="keyword">\begin</span>&#123;enumerate&#125;</span><br><span class="line">            <span class="keyword">\item</span> The first item</span><br><span class="line">            <span class="keyword">\item</span> The second item</span><br><span class="line">            <span class="keyword">\item</span> The third item</span><br><span class="line">        <span class="keyword">\end</span>&#123;enumerate&#125;</span><br><span class="line">    <span class="keyword">\end</span>&#123;column&#125;</span><br><span class="line">    <span class="keyword">\end</span>&#123;columns&#125;</span><br><span class="line"><span class="keyword">\end</span>&#123;frame&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">% 第七帧</span></span><br><span class="line"><span class="keyword">\begin</span>&#123;frame&#125;</span><br><span class="line">    <span class="keyword">\begin</span>&#123;theorem&#125;[雷诺数方程]</span><br><span class="line">        <span class="keyword">\begin</span>&#123;equation&#125;</span><br><span class="line">            Re = <span class="keyword">\frac</span>&#123;<span class="keyword">\rho</span> uL&#125;&#123;<span class="keyword">\mu</span>&#125;</span><br><span class="line">        <span class="keyword">\end</span>&#123;equation&#125;</span><br><span class="line">    <span class="keyword">\end</span>&#123;theorem&#125;</span><br><span class="line">    <span class="keyword">\begin</span>&#123;example&#125;</span><br><span class="line">        This is a example block environment.hahahaha</span><br><span class="line">    <span class="keyword">\end</span>&#123;example&#125;</span><br><span class="line"><span class="keyword">\end</span>&#123;frame&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">% 第八帧</span></span><br><span class="line"><span class="keyword">\begin</span>&#123;frame&#125;[c]</span><br><span class="line">    <span class="keyword">\frametitle</span>&#123;table&#125;</span><br><span class="line">    <span class="keyword">\begin</span>&#123;table&#125;</span><br><span class="line">    <span class="keyword">\centering</span></span><br><span class="line">    <span class="keyword">\caption</span>&#123;飞镖系统部分bom表&#125;</span><br><span class="line">    <span class="keyword">\begin</span>&#123;tabular&#125;&#123;|c|c|c|c|c|&#125;</span><br><span class="line">        <span class="keyword">\hline</span></span><br><span class="line">        发射云台    <span class="built_in">&amp;</span>   发射轨道    <span class="built_in">&amp;</span>   4   <span class="built_in">&amp;</span>   皮筋触发    <span class="built_in">&amp;</span>   1   <span class="keyword">\\</span></span><br><span class="line">        <span class="keyword">\hline</span></span><br><span class="line">        发射云台    <span class="built_in">&amp;</span>   发射轨道    <span class="built_in">&amp;</span>   4   <span class="built_in">&amp;</span>   底板    <span class="built_in">&amp;</span> 1   <span class="keyword">\\</span></span><br><span class="line">        <span class="keyword">\hline</span></span><br><span class="line">        发射云台    <span class="built_in">&amp;</span>   发射轨道    <span class="built_in">&amp;</span>   4   <span class="built_in">&amp;</span>   滑轨    <span class="built_in">&amp;</span> 1   <span class="keyword">\\</span></span><br><span class="line">        <span class="keyword">\hline</span></span><br><span class="line">        发射云台    <span class="built_in">&amp;</span>   发射轨道    <span class="built_in">&amp;</span>   4   <span class="built_in">&amp;</span>   小滑块连接片    <span class="built_in">&amp;</span> 1   <span class="keyword">\\</span></span><br><span class="line">        <span class="keyword">\hline</span></span><br><span class="line">        发射云台    <span class="built_in">&amp;</span>   发射轨道    <span class="built_in">&amp;</span>   4   <span class="built_in">&amp;</span>   连接铜柱    <span class="built_in">&amp;</span>   4   <span class="keyword">\\</span></span><br><span class="line">        <span class="keyword">\hline</span></span><br><span class="line">        发射云台    <span class="built_in">&amp;</span>   发射轨道    <span class="built_in">&amp;</span>   4   <span class="built_in">&amp;</span>   飞镖对接口  <span class="built_in">&amp;</span>    1   <span class="keyword">\\</span></span><br><span class="line">        <span class="keyword">\hline</span></span><br><span class="line">        发射云台    <span class="built_in">&amp;</span>   发射轨道    <span class="built_in">&amp;</span>   4   <span class="built_in">&amp;</span>   小滑块 <span class="built_in">&amp;</span>   1   <span class="keyword">\\</span></span><br><span class="line">        <span class="keyword">\hline</span></span><br><span class="line">    <span class="keyword">\end</span>&#123;tabular&#125;</span><br><span class="line">    <span class="keyword">\end</span>&#123;table&#125;</span><br><span class="line"><span class="keyword">\end</span>&#123;frame&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">% 第九帧</span></span><br><span class="line"><span class="keyword">\begin</span>&#123;frame&#125;</span><br><span class="line">    <span class="keyword">\frametitle</span>&#123;picture&#125;</span><br><span class="line">    <span class="keyword">\centering</span></span><br><span class="line">    <span class="keyword">\includegraphics</span>[width = 0.5<span class="keyword">\textwidth</span>]&#123;matlab.png&#125;</span><br><span class="line"><span class="keyword">\end</span>&#123;frame&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">% 空白帧</span></span><br><span class="line"><span class="keyword">\begin</span>&#123;frame&#125;[plain]</span><br><span class="line"></span><br><span class="line">    啥都没有</span><br><span class="line"></span><br><span class="line"><span class="keyword">\end</span>&#123;frame&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\end</span>&#123;document&#125;</span><br></pre></td></tr></table></figure></div>


	<div class="row">
    <embed src="./report.pdf" width="100%" height="550" type="application/pdf">
	</div>





<h2 id="查看宏包说明"><a href="#查看宏包说明" class="headerlink" title="查看宏包说明"></a>查看宏包说明</h2><p>在安装TexLive的情况下，在vscode中，利用快捷键<code>Ctrl+Shift+</code>新建一个终端，输入<code>texdoc &lt;package&gt;</code>即可查看该宏包的官方说明文档；举例：输入texdoc background即可查看 background 宏包.</p>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/07/28/Latex%E5%85%A5%E9%97%A8/fig_17.png"
                      class="" width="400"
                >

<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/07/28/Latex%E5%85%A5%E9%97%A8/fig_18.png"
                      class="" width="300"
                >


<p>在电脑安装Everything的情况下（快速检索文件的一个软件），搜索<code>&lt;package&gt;.sty</code>即可得到该宏包的源码文件，通常无法更改，将该文件的属性中的权限改为可编辑即可修改。</p>
<p>例如<code>background</code>宏包通常有一个<code>bug</code>，搜索<code>background.sty</code>并更改编辑权限即可修改宏包的设置。</p>
<h2 id="Latex模板"><a href="#Latex模板" class="headerlink" title="Latex模板"></a>Latex模板</h2><h3 id="课程论文模板"><a href="#课程论文模板" class="headerlink" title="课程论文模板"></a>课程论文模板</h3><div class="highlight-container" data-rel="Tex"><figure class="iseeu highlight tex"><table><tr><td class="code"><pre><span class="line"><span class="keyword">\documentclass</span>[UTF8]&#123;ctexart&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">%题目</span></span><br><span class="line"><span class="keyword">\title</span>&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\date</span>&#123;<span class="keyword">\today</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\author</span>&#123;xxx,xxx&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\usepackage</span>&#123;graphicx&#125;</span><br><span class="line"><span class="keyword">\usepackage</span>&#123;float&#125;</span><br><span class="line"><span class="keyword">\usepackage</span>[colorlinks = true]&#123;hyperref&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">%正文开始</span></span><br><span class="line"><span class="keyword">\begin</span>&#123;document&#125;</span><br><span class="line"><span class="keyword">\maketitle</span></span><br><span class="line"></span><br><span class="line"><span class="comment">%摘要部分</span></span><br><span class="line"><span class="comment">%\begin&#123;abstract&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">%\end&#123;abstract&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">%\clearpage</span></span><br><span class="line"><span class="comment">%\tableofcontents</span></span><br><span class="line"></span><br><span class="line"><span class="comment">%标题</span></span><br><span class="line"><span class="keyword">\section</span>&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\section</span>&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">%文献引用</span></span><br><span class="line"><span class="keyword">\begin</span>&#123;thebibliography&#125;&#123;99&#125;</span><br><span class="line"><span class="keyword">\bibitem</span>&#123;key1&#125; Author1, Title1, Journal1, Year1</span><br><span class="line"><span class="keyword">\bibitem</span>&#123;key2&#125; Author2, Title2, Journal2, Year2</span><br><span class="line"><span class="keyword">\end</span>&#123;thebibliography&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\end</span>&#123;document&#125;</span><br></pre></td></tr></table></figure></div>
<div class="highlight-container" data-rel="Tex"><figure class="iseeu highlight tex"><table><tr><td class="code"><pre><span class="line"><span class="comment">%插入图片格式</span></span><br><span class="line"><span class="keyword">\begin</span>&#123;figure&#125;[H]</span><br><span class="line">    <span class="keyword">\centering</span></span><br><span class="line">    <span class="keyword">\includegraphics</span>[width=0.6<span class="keyword">\textwidth</span>]&#123;figure<span class="built_in">_</span>3&#125;</span><br><span class="line">    <span class="keyword">\caption</span>&#123;&#125;</span><br><span class="line"><span class="keyword">\end</span>&#123;figure&#125;</span><br></pre></td></tr></table></figure></div>

<h3 id="RBCC报告"><a href="#RBCC报告" class="headerlink" title="RBCC报告"></a>RBCC报告</h3><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ul>
<li><a class="link"   href="https://www.bilibili.com/video/BV1Y34y1r7jH/?spm_id_from=333.337.search-card.all.click" >https://www.bilibili.com/video/BV1Y34y1r7jH/?spm_id_from=333.337.search-card.all.click <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://ljguo1020.github.io/2022/02/25/LaTeX-vscode/" >https://ljguo1020.github.io/2022/02/25/LaTeX-vscode/ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
</ul>
]]></content>
      <categories>
        <category>Basic Computer Programming</category>
      </categories>
  </entry>
  <entry>
    <title>Introduction to Machine Learning</title>
    <url>/2023/11/08/Machine-Learning-Course-by-Andrew-Ng/</url>
    <content><![CDATA[<h2 id="Overview-of-Machine-Learning"><a href="#Overview-of-Machine-Learning" class="headerlink" title="Overview of Machine Learning"></a>Overview of Machine Learning</h2><h3 id="Formal-Definition-of-Machine-Learning"><a href="#Formal-Definition-of-Machine-Learning" class="headerlink" title="Formal Definition of Machine Learning"></a>Formal Definition of Machine Learning</h3><blockquote>
<p>Field of study that gives computers the ability to learn without being explicitly programmed. – Arthur Samuel, 1959</p>
</blockquote>
<h3 id="Supervised-Learning"><a href="#Supervised-Learning" class="headerlink" title="Supervised Learning"></a>Supervised Learning</h3><ul>
<li><strong>Regression</strong>: Learning input, output, or x to y mapping in order to predict numbers out.</li>
</ul>
<img lazyload="" src="/images/loading.svg" data-src="/2023/11/08/Machine-Learning-Course-by-Andrew-Ng/fig_2.png" class="" width="600">

<ul>
<li><strong>Classification</strong>: Making a prediction of a category all of a small and discrete set of possible outputs.</li>
</ul>
<blockquote>
<p>This is different from regression which tries to predict any numbers all of the infinitely many number of possible outputs. There are only two possible outputs is what makes this classification.</p>
</blockquote>
<img lazyload="" src="/images/loading.svg" data-src="/2023/11/08/Machine-Learning-Course-by-Andrew-Ng/fig_3.png" class="" width="600">

<p>Many more input values are required, in this case, such as the thickness of the tumor clump, uniformity of the cell size, uniformity of the cell shape and so on.</p>
<h3 id="Unsupervised-Learning"><a href="#Unsupervised-Learning" class="headerlink" title="Unsupervised Learning"></a>Unsupervised Learning</h3><blockquote>
<p>Data only comes with inputs x, but not output lables y. Algorithm has to find <strong>structure</strong> in the data.</p>
</blockquote>
<img lazyload="" src="/images/loading.svg" data-src="/2023/11/08/Machine-Learning-Course-by-Andrew-Ng/fig_1.png" class="" width="600">

<p>It places the unlabled data.</p>
<ul>
<li><strong>Clustering</strong>: Grouping similar examples together.</li>
</ul>
<img lazyload="" src="/images/loading.svg" data-src="/2023/11/08/Machine-Learning-Course-by-Andrew-Ng/fig_4.png" class="" width="600">

<p>Each tiny column represents the genetic or DNA activity of one person, the role represent a gene that affects eye color or how tall someone is.</p>
<img lazyload="" src="/images/loading.svg" data-src="/2023/11/08/Machine-Learning-Course-by-Andrew-Ng/fig_5.png" class="" width="600">

<p>Group your customers into different market segments so that you can more efficiently serve your customers.</p>
<ul>
<li><strong>Anomaly detection</strong>: Find unusual data points.</li>
<li><strong>Dimensionality reduction</strong>: Compress data using fewer numbers.</li>
</ul>
<h3 id="Jupyter-Notebooks"><a href="#Jupyter-Notebooks" class="headerlink" title="Jupyter Notebooks"></a>Jupyter Notebooks</h3><blockquote>
<p>Jupyter Notebooks is the most widely used tool by machine learning and data science practitioners.</p>
</blockquote>
<h2 id="Linear-Regression"><a href="#Linear-Regression" class="headerlink" title="Linear Regression"></a>Linear Regression</h2><h3 id="Regression-Model-with-One-Feature"><a href="#Regression-Model-with-One-Feature" class="headerlink" title="Regression Model with One Feature"></a>Regression Model with One Feature</h3><blockquote>
<p>Regression model predicts numbers.</p>
</blockquote>
<p>A training set in supervised learning includes both the input <strong>features</strong> and the output <strong>targets</strong>.</p>
<img lazyload="" src="/images/loading.svg" data-src="/2023/11/08/Machine-Learning-Course-by-Andrew-Ng/fig_6.png" class="" width="600">

<p>In a linear regression with one feature (Univariate linear regression), the <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.464ex;" xmlns="http://www.w3.org/2000/svg" width="1.244ex" height="2.059ex" role="img" focusable="false" viewBox="0 -705 550 910"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g></g></g></svg></mjx-container> represent:</p>
<p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -0.65ex;" xmlns="http://www.w3.org/2000/svg" width="16.295ex" height="2.347ex" role="img" focusable="false" viewBox="0 -750 7202.2 1037.2"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="TeXAtom" transform="translate(523,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z"></path></g><g data-mml-node="mo" transform="translate(716,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(994,0)"><path data-c="1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"></path></g></g></g><g data-mml-node="mo" transform="translate(1579.2,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1968.2,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(2540.2,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(3207,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mi" transform="translate(4262.8,0)"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z"></path></g><g data-mml-node="mi" transform="translate(4978.8,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(5773,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mi" transform="translate(6773.2,0)"><path data-c="1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"></path></g></g></g></svg></mjx-container></p>
<p>In order to find <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="1.62ex" height="1.027ex" role="img" focusable="false" viewBox="0 -443 716 454"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z"></path></g></g></g></svg></mjx-container> and <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="0.971ex" height="1.595ex" role="img" focusable="false" viewBox="0 -694 429 705"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"></path></g></g></g></svg></mjx-container>, we need to construct a <strong>cost function</strong>.</p>
<p><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="1.62ex" height="1.027ex" role="img" focusable="false" viewBox="0 -443 716 454"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z"></path></g></g></g></svg></mjx-container> and <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="0.971ex" height="1.595ex" role="img" focusable="false" viewBox="0 -694 429 705"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"></path></g></g></g></svg></mjx-container> are the <strong>parameters</strong> of the model.</p>
<h3 id="Cost-function"><a href="#Cost-function" class="headerlink" title="Cost function"></a>Cost function</h3><p><strong>Squared error cost function</strong></p>
<p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -2.819ex;" xmlns="http://www.w3.org/2000/svg" width="29.263ex" height="6.354ex" role="img" focusable="false" viewBox="0 -1562.5 12934 2808.5"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D43D" d="M447 625Q447 637 354 637H329Q323 642 323 645T325 664Q329 677 335 683H352Q393 681 498 681Q541 681 568 681T605 682T619 682Q633 682 633 672Q633 670 630 658Q626 642 623 640T604 637Q552 637 545 623Q541 610 483 376Q420 128 419 127Q397 64 333 21T195 -22Q137 -22 97 8T57 88Q57 130 80 152T132 174Q177 174 182 130Q182 98 164 80T123 56Q115 54 115 53T122 44Q148 15 197 15Q235 15 271 47T324 130Q328 142 387 380T447 625Z"></path></g><g data-mml-node="mo" transform="translate(633,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1022,0)"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z"></path></g><g data-mml-node="mo" transform="translate(1738,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(2182.7,0)"><path data-c="1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"></path></g><g data-mml-node="mo" transform="translate(2611.7,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(3278.4,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mfrac" transform="translate(4334.2,0)"><g data-mml-node="mn" transform="translate(659,676)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mrow" transform="translate(220,-686)"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mi" transform="translate(500,0)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g><rect width="1578" height="60" x="120" y="220"></rect></g><g data-mml-node="munderover" transform="translate(6318.9,0)"><g data-mml-node="mo"><path data-c="2211" d="M60 948Q63 950 665 950H1267L1325 815Q1384 677 1388 669H1348L1341 683Q1320 724 1285 761Q1235 809 1174 838T1033 881T882 898T699 902H574H543H251L259 891Q722 258 724 252Q725 250 724 246Q721 243 460 -56L196 -356Q196 -357 407 -357Q459 -357 548 -357T676 -358Q812 -358 896 -353T1063 -332T1204 -283T1307 -196Q1328 -170 1348 -124H1388Q1388 -125 1381 -145T1356 -210T1325 -294L1267 -449L666 -450Q64 -450 61 -448Q55 -446 55 -439Q55 -437 57 -433L590 177Q590 178 557 222T452 366T322 544L56 909L55 924Q55 945 60 948Z"></path></g><g data-mml-node="TeXAtom" transform="translate(148.2,-1087.9) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(345,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(1123,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(411.6,1150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g></g><g data-mml-node="mo" transform="translate(7762.9,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msup" transform="translate(8151.9,0)"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mover"><g data-mml-node="mi"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(300.6,16) translate(-250 0)"><path data-c="5E" d="M112 560L249 694L257 686Q387 562 387 560L361 531Q359 532 303 581L250 627L195 580Q182 569 169 557T148 538L140 532Q138 530 125 546L112 560Z"></path></g></g></g><g data-mml-node="TeXAtom" transform="translate(523,413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mo" transform="translate(9741.2,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msup" transform="translate(10741.4,0)"><g data-mml-node="mi"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="TeXAtom" transform="translate(523,413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="msup" transform="translate(12108.5,0)"><g data-mml-node="mo"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mn" transform="translate(422,413) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g></g></svg></mjx-container></p>
<ul>
<li><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="1.986ex" height="1.025ex" role="img" focusable="false" viewBox="0 -442 878 453"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g></g></svg></mjx-container>: number of training examples</li>
<li><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.464ex;" xmlns="http://www.w3.org/2000/svg" width="3.093ex" height="2.485ex" role="img" focusable="false" viewBox="0 -893.3 1367.1 1098.3"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mover"><g data-mml-node="mi"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(300.6,16) translate(-250 0)"><path data-c="5E" d="M112 560L249 694L257 686Q387 562 387 560L361 531Q359 532 303 581L250 627L195 580Q182 569 169 557T148 538L140 532Q138 530 125 546L112 560Z"></path></g></g></g><g data-mml-node="TeXAtom" transform="translate(523,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></g></g></svg></mjx-container>: prediction</li>
<li>error: <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.464ex;" xmlns="http://www.w3.org/2000/svg" width="8.952ex" height="2.485ex" role="img" focusable="false" viewBox="0 -893.3 3956.6 1098.3"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mover"><g data-mml-node="mi"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(300.6,16) translate(-250 0)"><path data-c="5E" d="M112 560L249 694L257 686Q387 562 387 560L361 531Q359 532 303 581L250 627L195 580Q182 569 169 557T148 538L140 532Q138 530 125 546L112 560Z"></path></g></g></g><g data-mml-node="TeXAtom" transform="translate(523,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mo" transform="translate(1589.3,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msup" transform="translate(2589.5,0)"><g data-mml-node="mi"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="TeXAtom" transform="translate(523,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></g></g></svg></mjx-container></li>
<li>By convention, the cost function is divided by <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="3.118ex" height="1.532ex" role="img" focusable="false" viewBox="0 -666 1378 677"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mi" transform="translate(500,0)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g></g></svg></mjx-container>, so that the derivative of the cost function is simpler.<br><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -2.819ex;" xmlns="http://www.w3.org/2000/svg" width="34.781ex" height="6.354ex" role="img" focusable="false" viewBox="0 -1562.5 15373.3 2808.5"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D43D" d="M447 625Q447 637 354 637H329Q323 642 323 645T325 664Q329 677 335 683H352Q393 681 498 681Q541 681 568 681T605 682T619 682Q633 682 633 672Q633 670 630 658Q626 642 623 640T604 637Q552 637 545 623Q541 610 483 376Q420 128 419 127Q397 64 333 21T195 -22Q137 -22 97 8T57 88Q57 130 80 152T132 174Q177 174 182 130Q182 98 164 80T123 56Q115 54 115 53T122 44Q148 15 197 15Q235 15 271 47T324 130Q328 142 387 380T447 625Z"></path></g><g data-mml-node="mo" transform="translate(633,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1022,0)"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z"></path></g><g data-mml-node="mo" transform="translate(1738,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(2182.7,0)"><path data-c="1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"></path></g><g data-mml-node="mo" transform="translate(2611.7,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(3278.4,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mfrac" transform="translate(4334.2,0)"><g data-mml-node="mn" transform="translate(659,676)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mrow" transform="translate(220,-686)"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mi" transform="translate(500,0)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g><rect width="1578" height="60" x="120" y="220"></rect></g><g data-mml-node="munderover" transform="translate(6318.9,0)"><g data-mml-node="mo"><path data-c="2211" d="M60 948Q63 950 665 950H1267L1325 815Q1384 677 1388 669H1348L1341 683Q1320 724 1285 761Q1235 809 1174 838T1033 881T882 898T699 902H574H543H251L259 891Q722 258 724 252Q725 250 724 246Q721 243 460 -56L196 -356Q196 -357 407 -357Q459 -357 548 -357T676 -358Q812 -358 896 -353T1063 -332T1204 -283T1307 -196Q1328 -170 1348 -124H1388Q1388 -125 1381 -145T1356 -210T1325 -294L1267 -449L666 -450Q64 -450 61 -448Q55 -446 55 -439Q55 -437 57 -433L590 177Q590 178 557 222T452 366T322 544L56 909L55 924Q55 945 60 948Z"></path></g><g data-mml-node="TeXAtom" transform="translate(148.2,-1087.9) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(345,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(1123,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(411.6,1150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g></g><g data-mml-node="mo" transform="translate(7762.9,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(8151.9,0)"><g data-mml-node="mi"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="TeXAtom" transform="translate(523,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z"></path></g><g data-mml-node="mo" transform="translate(716,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(994,0)"><path data-c="1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"></path></g></g></g><g data-mml-node="mo" transform="translate(9731.1,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msup" transform="translate(10120.1,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mo" transform="translate(11569.2,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(12180.4,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msup" transform="translate(13180.6,0)"><g data-mml-node="mi"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="TeXAtom" transform="translate(523,413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="msup" transform="translate(14547.7,0)"><g data-mml-node="mo"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mn" transform="translate(422,413) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g></g></svg></mjx-container></li>
</ul>
<p>Linear regression would try to find the values of <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="1.62ex" height="1.027ex" role="img" focusable="false" viewBox="0 -443 716 454"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z"></path></g></g></g></svg></mjx-container> and <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="0.971ex" height="1.595ex" role="img" focusable="false" viewBox="0 -694 429 705"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"></path></g></g></g></svg></mjx-container> that minimize the cost function.</p>
<p>Goal: Minimize <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="6.789ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 3000.7 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D43D" d="M447 625Q447 637 354 637H329Q323 642 323 645T325 664Q329 677 335 683H352Q393 681 498 681Q541 681 568 681T605 682T619 682Q633 682 633 672Q633 670 630 658Q626 642 623 640T604 637Q552 637 545 623Q541 610 483 376Q420 128 419 127Q397 64 333 21T195 -22Q137 -22 97 8T57 88Q57 130 80 152T132 174Q177 174 182 130Q182 98 164 80T123 56Q115 54 115 53T122 44Q148 15 197 15Q235 15 271 47T324 130Q328 142 387 380T447 625Z"></path></g><g data-mml-node="mo" transform="translate(633,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1022,0)"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z"></path></g><g data-mml-node="mo" transform="translate(1738,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(2182.7,0)"><path data-c="1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"></path></g><g data-mml-node="mo" transform="translate(2611.7,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container></p>
<img lazyload="" src="/images/loading.svg" data-src="/2023/11/08/Machine-Learning-Course-by-Andrew-Ng/fig_7.png" class="" width="600">
<img lazyload="" src="/images/loading.svg" data-src="/2023/11/08/Machine-Learning-Course-by-Andrew-Ng/fig_8.png" class="" width="600">

<h3 id="Gradient-Descent"><a href="#Gradient-Descent" class="headerlink" title="Gradient Descent"></a>Gradient Descent</h3><p>For a function <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="6.789ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 3000.7 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D43D" d="M447 625Q447 637 354 637H329Q323 642 323 645T325 664Q329 677 335 683H352Q393 681 498 681Q541 681 568 681T605 682T619 682Q633 682 633 672Q633 670 630 658Q626 642 623 640T604 637Q552 637 545 623Q541 610 483 376Q420 128 419 127Q397 64 333 21T195 -22Q137 -22 97 8T57 88Q57 130 80 152T132 174Q177 174 182 130Q182 98 164 80T123 56Q115 54 115 53T122 44Q148 15 197 15Q235 15 271 47T324 130Q328 142 387 380T447 625Z"></path></g><g data-mml-node="mo" transform="translate(633,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1022,0)"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z"></path></g><g data-mml-node="mo" transform="translate(1738,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(2182.7,0)"><path data-c="1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"></path></g><g data-mml-node="mo" transform="translate(2611.7,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container></p>
<ol>
<li>Start with some initial <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="1.62ex" height="1.027ex" role="img" focusable="false" viewBox="0 -443 716 454"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z"></path></g></g></g></svg></mjx-container> and <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="0.971ex" height="1.595ex" role="img" focusable="false" viewBox="0 -694 429 705"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"></path></g></g></g></svg></mjx-container>;</li>
<li>Keep changing <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="1.62ex" height="1.027ex" role="img" focusable="false" viewBox="0 -443 716 454"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z"></path></g></g></g></svg></mjx-container> and <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="0.971ex" height="1.595ex" role="img" focusable="false" viewBox="0 -694 429 705"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"></path></g></g></g></svg></mjx-container> to reduce <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="6.789ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 3000.7 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D43D" d="M447 625Q447 637 354 637H329Q323 642 323 645T325 664Q329 677 335 683H352Q393 681 498 681Q541 681 568 681T605 682T619 682Q633 682 633 672Q633 670 630 658Q626 642 623 640T604 637Q552 637 545 623Q541 610 483 376Q420 128 419 127Q397 64 333 21T195 -22Q137 -22 97 8T57 88Q57 130 80 152T132 174Q177 174 182 130Q182 98 164 80T123 56Q115 54 115 53T122 44Q148 15 197 15Q235 15 271 47T324 130Q328 142 387 380T447 625Z"></path></g><g data-mml-node="mo" transform="translate(633,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1022,0)"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z"></path></g><g data-mml-node="mo" transform="translate(1738,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(2182.7,0)"><path data-c="1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"></path></g><g data-mml-node="mo" transform="translate(2611.7,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container> until we hopefully end up at a minimum.</li>
<li>The direction to move <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="1.62ex" height="1.027ex" role="img" focusable="false" viewBox="0 -443 716 454"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z"></path></g></g></g></svg></mjx-container> and <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="0.971ex" height="1.595ex" role="img" focusable="false" viewBox="0 -694 429 705"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"></path></g></g></g></svg></mjx-container> is given by the partial derivatives of <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="6.789ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 3000.7 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D43D" d="M447 625Q447 637 354 637H329Q323 642 323 645T325 664Q329 677 335 683H352Q393 681 498 681Q541 681 568 681T605 682T619 682Q633 682 633 672Q633 670 630 658Q626 642 623 640T604 637Q552 637 545 623Q541 610 483 376Q420 128 419 127Q397 64 333 21T195 -22Q137 -22 97 8T57 88Q57 130 80 152T132 174Q177 174 182 130Q182 98 164 80T123 56Q115 54 115 53T122 44Q148 15 197 15Q235 15 271 47T324 130Q328 142 387 380T447 625Z"></path></g><g data-mml-node="mo" transform="translate(633,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1022,0)"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z"></path></g><g data-mml-node="mo" transform="translate(1738,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(2182.7,0)"><path data-c="1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"></path></g><g data-mml-node="mo" transform="translate(2611.7,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container> with respect to <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="1.62ex" height="1.027ex" role="img" focusable="false" viewBox="0 -443 716 454"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z"></path></g></g></g></svg></mjx-container> and <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="0.971ex" height="1.595ex" role="img" focusable="false" viewBox="0 -694 429 705"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"></path></g></g></g></svg></mjx-container>.</li>
</ol>
<p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -1.602ex;" xmlns="http://www.w3.org/2000/svg" width="19.535ex" height="4.905ex" role="img" focusable="false" viewBox="0 -1460 8634.7 2168"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z"></path></g><g data-mml-node="mo" transform="translate(993.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mi" transform="translate(2049.6,0)"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z"></path></g><g data-mml-node="mo" transform="translate(2987.8,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mi" transform="translate(3988,0)"><path data-c="1D6FC" d="M34 156Q34 270 120 356T309 442Q379 442 421 402T478 304Q484 275 485 237V208Q534 282 560 374Q564 388 566 390T582 393Q603 393 603 385Q603 376 594 346T558 261T497 161L486 147L487 123Q489 67 495 47T514 26Q528 28 540 37T557 60Q559 67 562 68T577 70Q597 70 597 62Q597 56 591 43Q579 19 556 5T512 -10H505Q438 -10 414 62L411 69L400 61Q390 53 370 41T325 18T267 -2T203 -11Q124 -11 79 39T34 156ZM208 26Q257 26 306 47T379 90L403 112Q401 255 396 290Q382 405 304 405Q235 405 183 332Q156 292 139 224T121 120Q121 71 146 49T208 26Z"></path></g><g data-mml-node="mfrac" transform="translate(4628,0)"><g data-mml-node="mrow" transform="translate(220,710)"><g data-mml-node="mi"><path data-c="1D715" d="M202 508Q179 508 169 520T158 547Q158 557 164 577T185 624T230 675T301 710L333 715H345Q378 715 384 714Q447 703 489 661T549 568T566 457Q566 362 519 240T402 53Q321 -22 223 -22Q123 -22 73 56Q42 102 42 148V159Q42 276 129 370T322 465Q383 465 414 434T455 367L458 378Q478 461 478 515Q478 603 437 639T344 676Q266 676 223 612Q264 606 264 572Q264 547 246 528T202 508ZM430 306Q430 372 401 400T333 428Q270 428 222 382Q197 354 183 323T150 221Q132 149 132 116Q132 21 232 21Q244 21 250 22Q327 35 374 112Q389 137 409 196T430 306Z"></path></g><g data-mml-node="mi" transform="translate(566,0)"><path data-c="1D43D" d="M447 625Q447 637 354 637H329Q323 642 323 645T325 664Q329 677 335 683H352Q393 681 498 681Q541 681 568 681T605 682T619 682Q633 682 633 672Q633 670 630 658Q626 642 623 640T604 637Q552 637 545 623Q541 610 483 376Q420 128 419 127Q397 64 333 21T195 -22Q137 -22 97 8T57 88Q57 130 80 152T132 174Q177 174 182 130Q182 98 164 80T123 56Q115 54 115 53T122 44Q148 15 197 15Q235 15 271 47T324 130Q328 142 387 380T447 625Z"></path></g><g data-mml-node="mo" transform="translate(1199,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1588,0)"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z"></path></g><g data-mml-node="mo" transform="translate(2304,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(2748.7,0)"><path data-c="1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"></path></g><g data-mml-node="mo" transform="translate(3177.7,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="mrow" transform="translate(1362.3,-686)"><g data-mml-node="mi"><path data-c="1D715" d="M202 508Q179 508 169 520T158 547Q158 557 164 577T185 624T230 675T301 710L333 715H345Q378 715 384 714Q447 703 489 661T549 568T566 457Q566 362 519 240T402 53Q321 -22 223 -22Q123 -22 73 56Q42 102 42 148V159Q42 276 129 370T322 465Q383 465 414 434T455 367L458 378Q478 461 478 515Q478 603 437 639T344 676Q266 676 223 612Q264 606 264 572Q264 547 246 528T202 508ZM430 306Q430 372 401 400T333 428Q270 428 222 382Q197 354 183 323T150 221Q132 149 132 116Q132 21 232 21Q244 21 250 22Q327 35 374 112Q389 137 409 196T430 306Z"></path></g><g data-mml-node="mi" transform="translate(566,0)"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z"></path></g></g><rect width="3766.7" height="60" x="120" y="220"></rect></g></g></g></svg></mjx-container></p>
<ul>
<li><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="1.448ex" height="1.025ex" role="img" focusable="false" viewBox="0 -442 640 453"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D6FC" d="M34 156Q34 270 120 356T309 442Q379 442 421 402T478 304Q484 275 485 237V208Q534 282 560 374Q564 388 566 390T582 393Q603 393 603 385Q603 376 594 346T558 261T497 161L486 147L487 123Q489 67 495 47T514 26Q528 28 540 37T557 60Q559 67 562 68T577 70Q597 70 597 62Q597 56 591 43Q579 19 556 5T512 -10H505Q438 -10 414 62L411 69L400 61Q390 53 370 41T325 18T267 -2T203 -11Q124 -11 79 39T34 156ZM208 26Q257 26 306 47T379 90L403 112Q401 255 396 290Q382 405 304 405Q235 405 183 332Q156 292 139 224T121 120Q121 71 146 49T208 26Z"></path></g></g></g></svg></mjx-container> is called the <strong>learning rate</strong>.</li>
</ul>
<p>For <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="1.448ex" height="1.025ex" role="img" focusable="false" viewBox="0 -442 640 453"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D6FC" d="M34 156Q34 270 120 356T309 442Q379 442 421 402T478 304Q484 275 485 237V208Q534 282 560 374Q564 388 566 390T582 393Q603 393 603 385Q603 376 594 346T558 261T497 161L486 147L487 123Q489 67 495 47T514 26Q528 28 540 37T557 60Q559 67 562 68T577 70Q597 70 597 62Q597 56 591 43Q579 19 556 5T512 -10H505Q438 -10 414 62L411 69L400 61Q390 53 370 41T325 18T267 -2T203 -11Q124 -11 79 39T34 156ZM208 26Q257 26 306 47T379 90L403 112Q401 255 396 290Q382 405 304 405Q235 405 183 332Q156 292 139 224T121 120Q121 71 146 49T208 26Z"></path></g></g></g></svg></mjx-container> is too small or too large, the gradient descent may not converge to the minimum.</p>
<img lazyload="" src="/images/loading.svg" data-src="/2023/11/08/Machine-Learning-Course-by-Andrew-Ng/fig_10.png" class="" width="600">

<p>The tow value of <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="1.62ex" height="1.027ex" role="img" focusable="false" viewBox="0 -443 716 454"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z"></path></g></g></g></svg></mjx-container> and <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="0.971ex" height="1.595ex" role="img" focusable="false" viewBox="0 -694 429 705"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"></path></g></g></g></svg></mjx-container> are updated simultaneously.</p>
<p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -1.602ex;" xmlns="http://www.w3.org/2000/svg" width="63.986ex" height="4.905ex" role="img" focusable="false" viewBox="0 -1460 28281.7 2168"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(361,0)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="msub" transform="translate(1239,0)"><g data-mml-node="mi"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path></g><g data-mml-node="mi" transform="translate(536,-150) scale(0.707)"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z"></path></g></g><g data-mml-node="mo" transform="translate(2609.1,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mi" transform="translate(3664.8,0)"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z"></path></g><g data-mml-node="mo" transform="translate(4603.1,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mi" transform="translate(5603.3,0)"><path data-c="1D6FC" d="M34 156Q34 270 120 356T309 442Q379 442 421 402T478 304Q484 275 485 237V208Q534 282 560 374Q564 388 566 390T582 393Q603 393 603 385Q603 376 594 346T558 261T497 161L486 147L487 123Q489 67 495 47T514 26Q528 28 540 37T557 60Q559 67 562 68T577 70Q597 70 597 62Q597 56 591 43Q579 19 556 5T512 -10H505Q438 -10 414 62L411 69L400 61Q390 53 370 41T325 18T267 -2T203 -11Q124 -11 79 39T34 156ZM208 26Q257 26 306 47T379 90L403 112Q401 255 396 290Q382 405 304 405Q235 405 183 332Q156 292 139 224T121 120Q121 71 146 49T208 26Z"></path></g><g data-mml-node="mfrac" transform="translate(6243.3,0)"><g data-mml-node="mrow" transform="translate(220,710)"><g data-mml-node="mi"><path data-c="1D715" d="M202 508Q179 508 169 520T158 547Q158 557 164 577T185 624T230 675T301 710L333 715H345Q378 715 384 714Q447 703 489 661T549 568T566 457Q566 362 519 240T402 53Q321 -22 223 -22Q123 -22 73 56Q42 102 42 148V159Q42 276 129 370T322 465Q383 465 414 434T455 367L458 378Q478 461 478 515Q478 603 437 639T344 676Q266 676 223 612Q264 606 264 572Q264 547 246 528T202 508ZM430 306Q430 372 401 400T333 428Q270 428 222 382Q197 354 183 323T150 221Q132 149 132 116Q132 21 232 21Q244 21 250 22Q327 35 374 112Q389 137 409 196T430 306Z"></path></g><g data-mml-node="mi" transform="translate(566,0)"><path data-c="1D43D" d="M447 625Q447 637 354 637H329Q323 642 323 645T325 664Q329 677 335 683H352Q393 681 498 681Q541 681 568 681T605 682T619 682Q633 682 633 672Q633 670 630 658Q626 642 623 640T604 637Q552 637 545 623Q541 610 483 376Q420 128 419 127Q397 64 333 21T195 -22Q137 -22 97 8T57 88Q57 130 80 152T132 174Q177 174 182 130Q182 98 164 80T123 56Q115 54 115 53T122 44Q148 15 197 15Q235 15 271 47T324 130Q328 142 387 380T447 625Z"></path></g><g data-mml-node="mo" transform="translate(1199,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1588,0)"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z"></path></g><g data-mml-node="mo" transform="translate(2304,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(2748.7,0)"><path data-c="1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"></path></g><g data-mml-node="mo" transform="translate(3177.7,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="mrow" transform="translate(1362.3,-686)"><g data-mml-node="mi"><path data-c="1D715" d="M202 508Q179 508 169 520T158 547Q158 557 164 577T185 624T230 675T301 710L333 715H345Q378 715 384 714Q447 703 489 661T549 568T566 457Q566 362 519 240T402 53Q321 -22 223 -22Q123 -22 73 56Q42 102 42 148V159Q42 276 129 370T322 465Q383 465 414 434T455 367L458 378Q478 461 478 515Q478 603 437 639T344 676Q266 676 223 612Q264 606 264 572Q264 547 246 528T202 508ZM430 306Q430 372 401 400T333 428Q270 428 222 382Q197 354 183 323T150 221Q132 149 132 116Q132 21 232 21Q244 21 250 22Q327 35 374 112Q389 137 409 196T430 306Z"></path></g><g data-mml-node="mi" transform="translate(566,0)"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z"></path></g></g><rect width="3766.7" height="60" x="120" y="220"></rect></g><g data-mml-node="mi" transform="translate(10250,0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(10611,0)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="msub" transform="translate(11489,0)"><g data-mml-node="mi"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path></g><g data-mml-node="mi" transform="translate(536,-150) scale(0.707)"><path data-c="1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"></path></g></g><g data-mml-node="mo" transform="translate(12656.1,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mi" transform="translate(13711.9,0)"><path data-c="1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"></path></g><g data-mml-node="mo" transform="translate(14363.1,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mi" transform="translate(15363.3,0)"><path data-c="1D6FC" d="M34 156Q34 270 120 356T309 442Q379 442 421 402T478 304Q484 275 485 237V208Q534 282 560 374Q564 388 566 390T582 393Q603 393 603 385Q603 376 594 346T558 261T497 161L486 147L487 123Q489 67 495 47T514 26Q528 28 540 37T557 60Q559 67 562 68T577 70Q597 70 597 62Q597 56 591 43Q579 19 556 5T512 -10H505Q438 -10 414 62L411 69L400 61Q390 53 370 41T325 18T267 -2T203 -11Q124 -11 79 39T34 156ZM208 26Q257 26 306 47T379 90L403 112Q401 255 396 290Q382 405 304 405Q235 405 183 332Q156 292 139 224T121 120Q121 71 146 49T208 26Z"></path></g><g data-mml-node="mfrac" transform="translate(16003.3,0)"><g data-mml-node="mrow" transform="translate(220,710)"><g data-mml-node="mi"><path data-c="1D715" d="M202 508Q179 508 169 520T158 547Q158 557 164 577T185 624T230 675T301 710L333 715H345Q378 715 384 714Q447 703 489 661T549 568T566 457Q566 362 519 240T402 53Q321 -22 223 -22Q123 -22 73 56Q42 102 42 148V159Q42 276 129 370T322 465Q383 465 414 434T455 367L458 378Q478 461 478 515Q478 603 437 639T344 676Q266 676 223 612Q264 606 264 572Q264 547 246 528T202 508ZM430 306Q430 372 401 400T333 428Q270 428 222 382Q197 354 183 323T150 221Q132 149 132 116Q132 21 232 21Q244 21 250 22Q327 35 374 112Q389 137 409 196T430 306Z"></path></g><g data-mml-node="mi" transform="translate(566,0)"><path data-c="1D43D" d="M447 625Q447 637 354 637H329Q323 642 323 645T325 664Q329 677 335 683H352Q393 681 498 681Q541 681 568 681T605 682T619 682Q633 682 633 672Q633 670 630 658Q626 642 623 640T604 637Q552 637 545 623Q541 610 483 376Q420 128 419 127Q397 64 333 21T195 -22Q137 -22 97 8T57 88Q57 130 80 152T132 174Q177 174 182 130Q182 98 164 80T123 56Q115 54 115 53T122 44Q148 15 197 15Q235 15 271 47T324 130Q328 142 387 380T447 625Z"></path></g><g data-mml-node="mo" transform="translate(1199,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1588,0)"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z"></path></g><g data-mml-node="mo" transform="translate(2304,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(2748.7,0)"><path data-c="1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"></path></g><g data-mml-node="mo" transform="translate(3177.7,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="mrow" transform="translate(1505.8,-686)"><g data-mml-node="mi"><path data-c="1D715" d="M202 508Q179 508 169 520T158 547Q158 557 164 577T185 624T230 675T301 710L333 715H345Q378 715 384 714Q447 703 489 661T549 568T566 457Q566 362 519 240T402 53Q321 -22 223 -22Q123 -22 73 56Q42 102 42 148V159Q42 276 129 370T322 465Q383 465 414 434T455 367L458 378Q478 461 478 515Q478 603 437 639T344 676Q266 676 223 612Q264 606 264 572Q264 547 246 528T202 508ZM430 306Q430 372 401 400T333 428Q270 428 222 382Q197 354 183 323T150 221Q132 149 132 116Q132 21 232 21Q244 21 250 22Q327 35 374 112Q389 137 409 196T430 306Z"></path></g><g data-mml-node="mi" transform="translate(566,0)"><path data-c="1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"></path></g></g><rect width="3766.7" height="60" x="120" y="220"></rect></g><g data-mml-node="mi" transform="translate(20010,0)"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z"></path></g><g data-mml-node="mo" transform="translate(21003.7,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mi" transform="translate(22059.5,0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(22420.5,0)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="msub" transform="translate(23298.5,0)"><g data-mml-node="mi"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path></g><g data-mml-node="mi" transform="translate(536,-150) scale(0.707)"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z"></path></g></g><g data-mml-node="mi" transform="translate(24390.8,0)"><path data-c="1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"></path></g><g data-mml-node="mo" transform="translate(25097.6,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mi" transform="translate(26153.4,0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(26514.4,0)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="msub" transform="translate(27392.4,0)"><g data-mml-node="mi"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path></g><g data-mml-node="mi" transform="translate(536,-150) scale(0.707)"><path data-c="1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"></path></g></g></g></g></svg></mjx-container></p>
<blockquote>
<p>Convex function: A function that has only one minimum.(no local minimum)</p>
</blockquote>
<img lazyload="" src="/images/loading.svg" data-src="/2023/11/08/Machine-Learning-Course-by-Andrew-Ng/fig_9.png" class="" width="600">

<p>By using the gradient descent, we can find the minimum of the cost function.</p>
<img lazyload="" src="/images/loading.svg" data-src="/2023/11/08/Machine-Learning-Course-by-Andrew-Ng/fig_11.png" class="" width="600">

<p><strong>Batch gradient descent</strong>: Each step of gradient descent uses all the training examples.</p>
<h3 id="Multiple-Linear-Regression"><a href="#Multiple-Linear-Regression" class="headerlink" title="Multiple Linear Regression"></a>Multiple Linear Regression</h3><p>Notation:</p>
<ul>
<li><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.666ex;" xmlns="http://www.w3.org/2000/svg" width="2.141ex" height="1.666ex" role="img" focusable="false" viewBox="0 -442 946.3 736.2"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mi" transform="translate(605,-150) scale(0.707)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g></g></g></g></svg></mjx-container> = <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.462ex;" xmlns="http://www.w3.org/2000/svg" width="2.619ex" height="2.393ex" role="img" focusable="false" viewBox="0 -853.7 1157.6 1057.7"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="TeXAtom" transform="translate(445,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(361,0)"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z"></path></g></g></g></g></g></svg></mjx-container> input feature</li>
<li>n = number of features</li>
<li><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.991ex;" xmlns="http://www.w3.org/2000/svg" width="3.278ex" height="3.391ex" role="img" focusable="false" viewBox="0 -1060.7 1449.1 1498.8"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msubsup"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,530.4) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(605,-293.8) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g></g></g></g></g></svg></mjx-container> = value of feature <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.462ex;" xmlns="http://www.w3.org/2000/svg" width="0.932ex" height="1.957ex" role="img" focusable="false" viewBox="0 -661 412 865"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g></g></g></svg></mjx-container> in the <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="2.467ex" height="1.956ex" role="img" focusable="false" viewBox="0 -853.7 1090.6 864.7"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="TeXAtom" transform="translate(378,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(361,0)"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z"></path></g></g></g></g></g></svg></mjx-container> training example</li>
</ul>
<p>For a multiple linear regression</p>
<p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -0.864ex;" xmlns="http://www.w3.org/2000/svg" width="50.619ex" height="2.778ex" role="img" focusable="false" viewBox="0 -846 22373.7 1227.8"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="TeXAtom" transform="translate(523,-244.6) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mover"><g data-mml-node="mi"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z"></path></g><g data-mml-node="mo" transform="translate(441.3,32) translate(-250 0)"><path data-c="20D7" d="M377 694Q377 702 382 708T397 714Q404 714 409 709Q414 705 419 690Q429 653 460 633Q471 626 471 615Q471 606 468 603T454 594Q411 572 379 531Q377 529 374 525T369 519T364 517T357 516Q350 516 344 521T337 536Q337 555 384 595H213L42 596Q29 605 29 615Q29 622 42 635H401Q377 673 377 694Z"></path></g></g></g><g data-mml-node="mo" transform="translate(716,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(994,0)"><path data-c="1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"></path></g></g></g><g data-mml-node="mo" transform="translate(1579.2,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(1968.2,0)"><g data-mml-node="mover"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(313.8,31) translate(-250 0)"><path data-c="20D7" d="M377 694Q377 702 382 708T397 714Q404 714 409 709Q414 705 419 690Q429 653 460 633Q471 626 471 615Q471 606 468 603T454 594Q411 572 379 531Q377 529 374 525T369 519T364 517T357 516Q350 516 344 521T337 536Q337 555 384 595H213L42 596Q29 605 29 615Q29 622 42 635H401Q377 673 377 694Z"></path></g></g></g><g data-mml-node="mo" transform="translate(2540.2,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(3207,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="msub" transform="translate(4262.8,0)"><g data-mml-node="mi"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z"></path></g><g data-mml-node="mn" transform="translate(749,-150) scale(0.707)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="msub" transform="translate(5415.3,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mn" transform="translate(605,-150) scale(0.707)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="mo" transform="translate(6646.1,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="msub" transform="translate(7646.3,0)"><g data-mml-node="mi"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z"></path></g><g data-mml-node="mn" transform="translate(749,-150) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="msub" transform="translate(8798.9,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mn" transform="translate(605,-150) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="mo" transform="translate(10029.6,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mo" transform="translate(11029.9,0)"><path data-c="22EF" d="M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250ZM525 250Q525 274 542 292T585 310Q609 310 627 294T646 251Q646 226 629 208T586 190T543 207T525 250ZM972 250Q972 274 989 292T1032 310Q1056 310 1074 294T1093 251Q1093 226 1076 208T1033 190T990 207T972 250Z"></path></g><g data-mml-node="mo" transform="translate(12424.1,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="msub" transform="translate(13424.3,0)"><g data-mml-node="mi"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z"></path></g><g data-mml-node="mi" transform="translate(749,-150) scale(0.707)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g><g data-mml-node="msub" transform="translate(14647.6,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mi" transform="translate(605,-150) scale(0.707)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g><g data-mml-node="mo" transform="translate(15949.1,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mi" transform="translate(16949.3,0)"><path data-c="1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"></path></g><g data-mml-node="mo" transform="translate(17656.1,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(18711.8,0)"><g data-mml-node="mover"><g data-mml-node="mi"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z"></path></g><g data-mml-node="mo" transform="translate(441.3,32) translate(-250 0)"><path data-c="20D7" d="M377 694Q377 702 382 708T397 714Q404 714 409 709Q414 705 419 690Q429 653 460 633Q471 626 471 615Q471 606 468 603T454 594Q411 572 379 531Q377 529 374 525T369 519T364 517T357 516Q350 516 344 521T337 536Q337 555 384 595H213L42 596Q29 605 29 615Q29 622 42 635H401Q377 673 377 694Z"></path></g></g></g><g data-mml-node="mo" transform="translate(19650.1,0)"><path data-c="22C5" d="M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250Z"></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(20150.3,0)"><g data-mml-node="mover"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(313.8,31) translate(-250 0)"><path data-c="20D7" d="M377 694Q377 702 382 708T397 714Q404 714 409 709Q414 705 419 690Q429 653 460 633Q471 626 471 615Q471 606 468 603T454 594Q411 572 379 531Q377 529 374 525T369 519T364 517T357 516Q350 516 344 521T337 536Q337 555 384 595H213L42 596Q29 605 29 615Q29 622 42 635H401Q377 673 377 694Z"></path></g></g></g><g data-mml-node="mo" transform="translate(20944.5,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mi" transform="translate(21944.7,0)"><path data-c="1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"></path></g></g></g></svg></mjx-container></p>
<h3 id="Vectorization"><a href="#Vectorization" class="headerlink" title="Vectorization"></a>Vectorization</h3><p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="29.401ex" height="2.48ex" role="img" focusable="false" viewBox="0 -846 12995.1 1096"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mover"><g data-mml-node="mi"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z"></path></g><g data-mml-node="mo" transform="translate(441.3,32) translate(-250 0)"><path data-c="20D7" d="M377 694Q377 702 382 708T397 714Q404 714 409 709Q414 705 419 690Q429 653 460 633Q471 626 471 615Q471 606 468 603T454 594Q411 572 379 531Q377 529 374 525T369 519T364 517T357 516Q350 516 344 521T337 536Q337 555 384 595H213L42 596Q29 605 29 615Q29 622 42 635H401Q377 673 377 694Z"></path></g></g></g><g data-mml-node="mo" transform="translate(993.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mrow" transform="translate(2049.6,0)"><g data-mml-node="mo"><path data-c="5B" d="M118 -250V750H255V710H158V-210H255V-250H118Z"></path></g><g data-mml-node="mtable" transform="translate(278,0)"><g data-mml-node="mtr"><g data-mml-node="mtd"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z"></path></g><g data-mml-node="mn" transform="translate(749,-150) scale(0.707)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="mtext" transform="translate(1152.6,0)"><path data-c="A0" d=""></path></g><g data-mml-node="msub" transform="translate(1402.6,0)"><g data-mml-node="mi"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z"></path></g><g data-mml-node="mn" transform="translate(749,-150) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="mtext" transform="translate(2555.1,0)"><path data-c="A0" d=""></path></g><g data-mml-node="msub" transform="translate(2805.1,0)"><g data-mml-node="mi"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z"></path></g><g data-mml-node="mn" transform="translate(749,-150) scale(0.707)"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path></g></g></g></g></g><g data-mml-node="mo" transform="translate(4235.7,0)"><path data-c="5D" d="M22 710V750H159V-250H22V-210H119V710H22Z"></path></g></g><g data-mml-node="mo" transform="translate(6563.2,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(7007.9,0)"><g data-mml-node="mover"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(313.8,31) translate(-250 0)"><path data-c="20D7" d="M377 694Q377 702 382 708T397 714Q404 714 409 709Q414 705 419 690Q429 653 460 633Q471 626 471 615Q471 606 468 603T454 594Q411 572 379 531Q377 529 374 525T369 519T364 517T357 516Q350 516 344 521T337 536Q337 555 384 595H213L42 596Q29 605 29 615Q29 622 42 635H401Q377 673 377 694Z"></path></g></g></g><g data-mml-node="mo" transform="translate(7857.7,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mrow" transform="translate(8913.4,0)"><g data-mml-node="mo"><path data-c="5B" d="M118 -250V750H255V710H158V-210H255V-250H118Z"></path></g><g data-mml-node="mtable" transform="translate(278,0)"><g data-mml-node="mtr"><g data-mml-node="mtd"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mn" transform="translate(605,-150) scale(0.707)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="mtext" transform="translate(1008.6,0)"><path data-c="A0" d=""></path></g><g data-mml-node="msub" transform="translate(1258.6,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mn" transform="translate(605,-150) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="mtext" transform="translate(2267.1,0)"><path data-c="A0" d=""></path></g><g data-mml-node="msub" transform="translate(2517.1,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mn" transform="translate(605,-150) scale(0.707)"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path></g></g></g></g></g><g data-mml-node="mo" transform="translate(3803.7,0)"><path data-c="5D" d="M22 710V750H159V-250H22V-210H119V710H22Z"></path></g></g></g></g></svg></mjx-container></p>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line">w = np.array([<span class="number">1.0</span>, <span class="number">2.0</span>, <span class="number">3.0</span>])</span><br><span class="line">b = <span class="number">4</span></span><br><span class="line">x = np.array([<span class="number">10</span>, <span class="number">20</span>, <span class="number">30</span>])</span><br></pre></td></tr></table></figure></div>

<p>Without vectorization:</p>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line">f = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, n):</span><br><span class="line">    f += w[j] * x[j]</span><br><span class="line">f += b</span><br></pre></td></tr></table></figure></div>

<p>Vectorization:</p>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line">f = np.dot(w, x) + b</span><br></pre></td></tr></table></figure></div>

<p>It’s much faster to use vectorization because the computational complexity is <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="4.618ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 2041 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D442" d="M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z"></path></g><g data-mml-node="mo" transform="translate(763,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mn" transform="translate(1152,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(1652,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container> instead of <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="4.844ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 2141 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D442" d="M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z"></path></g><g data-mml-node="mo" transform="translate(763,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1152,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(1752,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container>.</p>
<p>In Gradient descent with <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="1.357ex" height="1.025ex" role="img" focusable="false" viewBox="0 -442 600 453"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g></g></svg></mjx-container> features for multiple regression:</p>
<p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -11.115ex;" xmlns="http://www.w3.org/2000/svg" width="38.901ex" height="23.361ex" role="img" focusable="false" viewBox="0 -5412.7 17194.1 10325.4"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mtable"><g data-mml-node="mtr" transform="translate(0,3850.1)"><g data-mml-node="mtd" transform="translate(141.4,0)"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z"></path></g><g data-mml-node="mn" transform="translate(749,-150) scale(0.707)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="mo" transform="translate(1430.3,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="msub" transform="translate(2486.1,0)"><g data-mml-node="mi"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z"></path></g><g data-mml-node="mn" transform="translate(749,-150) scale(0.707)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="mo" transform="translate(3860.9,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mi" transform="translate(4861.1,0)"><path data-c="1D6FC" d="M34 156Q34 270 120 356T309 442Q379 442 421 402T478 304Q484 275 485 237V208Q534 282 560 374Q564 388 566 390T582 393Q603 393 603 385Q603 376 594 346T558 261T497 161L486 147L487 123Q489 67 495 47T514 26Q528 28 540 37T557 60Q559 67 562 68T577 70Q597 70 597 62Q597 56 591 43Q579 19 556 5T512 -10H505Q438 -10 414 62L411 69L400 61Q390 53 370 41T325 18T267 -2T203 -11Q124 -11 79 39T34 156ZM208 26Q257 26 306 47T379 90L403 112Q401 255 396 290Q382 405 304 405Q235 405 183 332Q156 292 139 224T121 120Q121 71 146 49T208 26Z"></path></g><g data-mml-node="mfrac" transform="translate(5501.1,0)"><g data-mml-node="mn" transform="translate(409,676)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mi" transform="translate(220,-686)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><rect width="1078" height="60" x="120" y="220"></rect></g><g data-mml-node="munderover" transform="translate(6985.8,0)"><g data-mml-node="mo"><path data-c="2211" d="M60 948Q63 950 665 950H1267L1325 815Q1384 677 1388 669H1348L1341 683Q1320 724 1285 761Q1235 809 1174 838T1033 881T882 898T699 902H574H543H251L259 891Q722 258 724 252Q725 250 724 246Q721 243 460 -56L196 -356Q196 -357 407 -357Q459 -357 548 -357T676 -358Q812 -358 896 -353T1063 -332T1204 -283T1307 -196Q1328 -170 1348 -124H1388Q1388 -125 1381 -145T1356 -210T1325 -294L1267 -449L666 -450Q64 -450 61 -448Q55 -446 55 -439Q55 -437 57 -433L590 177Q590 178 557 222T452 366T322 544L56 909L55 924Q55 945 60 948Z"></path></g><g data-mml-node="TeXAtom" transform="translate(148.2,-1087.9) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(345,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(1123,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(411.6,1150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g></g><g data-mml-node="mo" transform="translate(8429.8,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(8818.8,0)"><g data-mml-node="mi"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="TeXAtom" transform="translate(523,-244.6) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mover"><g data-mml-node="mi"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z"></path></g><g data-mml-node="mo" transform="translate(441.3,32) translate(-250 0)"><path data-c="20D7" d="M377 694Q377 702 382 708T397 714Q404 714 409 709Q414 705 419 690Q429 653 460 633Q471 626 471 615Q471 606 468 603T454 594Q411 572 379 531Q377 529 374 525T369 519T364 517T357 516Q350 516 344 521T337 536Q337 555 384 595H213L42 596Q29 605 29 615Q29 622 42 635H401Q377 673 377 694Z"></path></g></g></g><g data-mml-node="mo" transform="translate(716,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(994,0)"><path data-c="1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"></path></g></g></g><g data-mml-node="mo" transform="translate(10398,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msup" transform="translate(10787,0)"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mover"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(313.8,31) translate(-250 0)"><path data-c="20D7" d="M377 694Q377 702 382 708T397 714Q404 714 409 709Q414 705 419 690Q429 653 460 633Q471 626 471 615Q471 606 468 603T454 594Q411 572 379 531Q377 529 374 525T369 519T364 517T357 516Q350 516 344 521T337 536Q337 555 384 595H213L42 596Q29 605 29 615Q29 622 42 635H401Q377 673 377 694Z"></path></g></g></g><g data-mml-node="TeXAtom" transform="translate(605,413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mo" transform="translate(12236.1,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(12847.3,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msup" transform="translate(13847.5,0)"><g data-mml-node="mi"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="TeXAtom" transform="translate(523,413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mo" transform="translate(15214.6,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="msubsup" transform="translate(15603.6,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,530.4) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="mn" transform="translate(605,-297.3) scale(0.707)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g></g><g data-mml-node="mtr" transform="translate(0,1554.2)"><g data-mml-node="mtd" transform="translate(16022.1,0)"><g data-mml-node="mo"><path data-c="2026" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60ZM525 60Q525 84 542 102T585 120Q609 120 627 104T646 61Q646 36 629 18T586 0T543 17T525 60ZM972 60Q972 84 989 102T1032 120Q1056 120 1074 104T1093 61Q1093 36 1076 18T1033 0T990 17T972 60Z"></path></g></g></g><g data-mml-node="mtr" transform="translate(0,-558.3)"><g data-mml-node="mtd"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z"></path></g><g data-mml-node="mi" transform="translate(749,-150) scale(0.707)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g><g data-mml-node="mo" transform="translate(1501,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="msub" transform="translate(2556.8,0)"><g data-mml-node="mi"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z"></path></g><g data-mml-node="mi" transform="translate(749,-150) scale(0.707)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g><g data-mml-node="mo" transform="translate(4002.3,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mi" transform="translate(5002.5,0)"><path data-c="1D6FC" d="M34 156Q34 270 120 356T309 442Q379 442 421 402T478 304Q484 275 485 237V208Q534 282 560 374Q564 388 566 390T582 393Q603 393 603 385Q603 376 594 346T558 261T497 161L486 147L487 123Q489 67 495 47T514 26Q528 28 540 37T557 60Q559 67 562 68T577 70Q597 70 597 62Q597 56 591 43Q579 19 556 5T512 -10H505Q438 -10 414 62L411 69L400 61Q390 53 370 41T325 18T267 -2T203 -11Q124 -11 79 39T34 156ZM208 26Q257 26 306 47T379 90L403 112Q401 255 396 290Q382 405 304 405Q235 405 183 332Q156 292 139 224T121 120Q121 71 146 49T208 26Z"></path></g><g data-mml-node="mfrac" transform="translate(5642.5,0)"><g data-mml-node="mn" transform="translate(409,676)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mi" transform="translate(220,-686)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><rect width="1078" height="60" x="120" y="220"></rect></g><g data-mml-node="munderover" transform="translate(7127.2,0)"><g data-mml-node="mo"><path data-c="2211" d="M60 948Q63 950 665 950H1267L1325 815Q1384 677 1388 669H1348L1341 683Q1320 724 1285 761Q1235 809 1174 838T1033 881T882 898T699 902H574H543H251L259 891Q722 258 724 252Q725 250 724 246Q721 243 460 -56L196 -356Q196 -357 407 -357Q459 -357 548 -357T676 -358Q812 -358 896 -353T1063 -332T1204 -283T1307 -196Q1328 -170 1348 -124H1388Q1388 -125 1381 -145T1356 -210T1325 -294L1267 -449L666 -450Q64 -450 61 -448Q55 -446 55 -439Q55 -437 57 -433L590 177Q590 178 557 222T452 366T322 544L56 909L55 924Q55 945 60 948Z"></path></g><g data-mml-node="TeXAtom" transform="translate(148.2,-1087.9) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(345,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(1123,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(411.6,1150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g></g><g data-mml-node="mo" transform="translate(8571.2,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(8960.2,0)"><g data-mml-node="mi"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="TeXAtom" transform="translate(523,-244.6) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mover"><g data-mml-node="mi"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z"></path></g><g data-mml-node="mo" transform="translate(441.3,32) translate(-250 0)"><path data-c="20D7" d="M377 694Q377 702 382 708T397 714Q404 714 409 709Q414 705 419 690Q429 653 460 633Q471 626 471 615Q471 606 468 603T454 594Q411 572 379 531Q377 529 374 525T369 519T364 517T357 516Q350 516 344 521T337 536Q337 555 384 595H213L42 596Q29 605 29 615Q29 622 42 635H401Q377 673 377 694Z"></path></g></g></g><g data-mml-node="mo" transform="translate(716,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(994,0)"><path data-c="1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"></path></g></g></g><g data-mml-node="mo" transform="translate(10539.4,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msup" transform="translate(10928.4,0)"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mover"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(313.8,31) translate(-250 0)"><path data-c="20D7" d="M377 694Q377 702 382 708T397 714Q404 714 409 709Q414 705 419 690Q429 653 460 633Q471 626 471 615Q471 606 468 603T454 594Q411 572 379 531Q377 529 374 525T369 519T364 517T357 516Q350 516 344 521T337 536Q337 555 384 595H213L42 596Q29 605 29 615Q29 622 42 635H401Q377 673 377 694Z"></path></g></g></g><g data-mml-node="TeXAtom" transform="translate(605,413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mo" transform="translate(12377.5,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(12988.7,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msup" transform="translate(13988.9,0)"><g data-mml-node="mi"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="TeXAtom" transform="translate(523,413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mo" transform="translate(15356,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="msubsup" transform="translate(15745,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,530.4) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="mi" transform="translate(605,-138.9) scale(0.707)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g></g></g><g data-mml-node="mtr" transform="translate(0,-3666.8)"><g data-mml-node="mtd" transform="translate(3037.6,0)"><g data-mml-node="mi"><path data-c="1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"></path></g><g data-mml-node="mo" transform="translate(706.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mi" transform="translate(1762.6,0)"><path data-c="1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"></path></g><g data-mml-node="mo" transform="translate(2413.8,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mi" transform="translate(3414,0)"><path data-c="1D6FC" d="M34 156Q34 270 120 356T309 442Q379 442 421 402T478 304Q484 275 485 237V208Q534 282 560 374Q564 388 566 390T582 393Q603 393 603 385Q603 376 594 346T558 261T497 161L486 147L487 123Q489 67 495 47T514 26Q528 28 540 37T557 60Q559 67 562 68T577 70Q597 70 597 62Q597 56 591 43Q579 19 556 5T512 -10H505Q438 -10 414 62L411 69L400 61Q390 53 370 41T325 18T267 -2T203 -11Q124 -11 79 39T34 156ZM208 26Q257 26 306 47T379 90L403 112Q401 255 396 290Q382 405 304 405Q235 405 183 332Q156 292 139 224T121 120Q121 71 146 49T208 26Z"></path></g><g data-mml-node="mfrac" transform="translate(4054,0)"><g data-mml-node="mn" transform="translate(409,676)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mi" transform="translate(220,-686)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><rect width="1078" height="60" x="120" y="220"></rect></g><g data-mml-node="munderover" transform="translate(5538.7,0)"><g data-mml-node="mo"><path data-c="2211" d="M60 948Q63 950 665 950H1267L1325 815Q1384 677 1388 669H1348L1341 683Q1320 724 1285 761Q1235 809 1174 838T1033 881T882 898T699 902H574H543H251L259 891Q722 258 724 252Q725 250 724 246Q721 243 460 -56L196 -356Q196 -357 407 -357Q459 -357 548 -357T676 -358Q812 -358 896 -353T1063 -332T1204 -283T1307 -196Q1328 -170 1348 -124H1388Q1388 -125 1381 -145T1356 -210T1325 -294L1267 -449L666 -450Q64 -450 61 -448Q55 -446 55 -439Q55 -437 57 -433L590 177Q590 178 557 222T452 366T322 544L56 909L55 924Q55 945 60 948Z"></path></g><g data-mml-node="TeXAtom" transform="translate(148.2,-1087.9) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(345,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(1123,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(411.6,1150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g></g><g data-mml-node="mo" transform="translate(6982.7,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(7371.7,0)"><g data-mml-node="mi"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="TeXAtom" transform="translate(523,-244.6) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mover"><g data-mml-node="mi"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z"></path></g><g data-mml-node="mo" transform="translate(441.3,32) translate(-250 0)"><path data-c="20D7" d="M377 694Q377 702 382 708T397 714Q404 714 409 709Q414 705 419 690Q429 653 460 633Q471 626 471 615Q471 606 468 603T454 594Q411 572 379 531Q377 529 374 525T369 519T364 517T357 516Q350 516 344 521T337 536Q337 555 384 595H213L42 596Q29 605 29 615Q29 622 42 635H401Q377 673 377 694Z"></path></g></g></g><g data-mml-node="mo" transform="translate(716,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(994,0)"><path data-c="1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"></path></g></g></g><g data-mml-node="mo" transform="translate(8950.9,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msup" transform="translate(9339.9,0)"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mover"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(313.8,31) translate(-250 0)"><path data-c="20D7" d="M377 694Q377 702 382 708T397 714Q404 714 409 709Q414 705 419 690Q429 653 460 633Q471 626 471 615Q471 606 468 603T454 594Q411 572 379 531Q377 529 374 525T369 519T364 517T357 516Q350 516 344 521T337 536Q337 555 384 595H213L42 596Q29 605 29 615Q29 622 42 635H401Q377 673 377 694Z"></path></g></g></g><g data-mml-node="TeXAtom" transform="translate(605,413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mo" transform="translate(10789,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(11400.2,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msup" transform="translate(12400.4,0)"><g data-mml-node="mi"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="TeXAtom" transform="translate(523,413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mo" transform="translate(13767.5,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></g></g></g></svg></mjx-container></p>
<p>An alternative to gradient descent is the <strong>normal equation</strong>. And only for linear regression by solving for <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.439ex;" xmlns="http://www.w3.org/2000/svg" width="3.597ex" height="2.009ex" role="img" focusable="false" viewBox="0 -694 1589.7 888"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z"></path></g><g data-mml-node="mo" transform="translate(716,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(1160.7,0)"><path data-c="1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"></path></g></g></g></svg></mjx-container> without iterations.</p>
<p>It also has two disadvantages:</p>
<ul>
<li>Doesn’t generalize to other learning algorithms.</li>
<li>Slow when number of features is large.</li>
</ul>
<h3 id="Feature-Scaling"><a href="#Feature-Scaling" class="headerlink" title="Feature Scaling"></a>Feature Scaling</h3><blockquote>
<p>Feature scaling will enable the gradient descent to converge much faster.</p>
</blockquote>
<img lazyload="" src="/images/loading.svg" data-src="/2023/11/08/Machine-Learning-Course-by-Andrew-Ng/fig_12.png" class="" width="600">

<p>Likewise, when the possible values of the feature are small, like the number of bedrooms, then a reasonable value for its parameters will be relatively large like 50.</p>
<p>A contour plot where the horizontal axis has a much narrower range than the vertical axis.</p>
<p>The key point is that the rescaling of the features can make the cost function look like a nice, symmetric bowl shape, which will make the gradient descent converge much faster.</p>
<p>To recap, when you have different features that take on very different ranges of values, it can cause gradient descent to run slowly but rescaling the different features so they all take on comparable range of values can speed up gradient descent significantly.</p>
<p>Normal method:</p>
<ul>
<li>Feature scaling</li>
<li>Mean normalization</li>
<li>Z-score normalization</li>
</ul>
<h3 id="Check-Gradient-Descent-for-Convergence"><a href="#Check-Gradient-Descent-for-Convergence" class="headerlink" title="Check Gradient Descent for Convergence"></a>Check Gradient Descent for Convergence</h3><p>Looking at this learning curve, we can try to spot whether or not gradient descent is converging.</p>
<img lazyload="" src="/images/loading.svg" data-src="/2023/11/08/Machine-Learning-Course-by-Andrew-Ng/fig_13.png" class="" width="600">

<p>With a small enough <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="1.448ex" height="1.025ex" role="img" focusable="false" viewBox="0 -442 640 453"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D6FC" d="M34 156Q34 270 120 356T309 442Q379 442 421 402T478 304Q484 275 485 237V208Q534 282 560 374Q564 388 566 390T582 393Q603 393 603 385Q603 376 594 346T558 261T497 161L486 147L487 123Q489 67 495 47T514 26Q528 28 540 37T557 60Q559 67 562 68T577 70Q597 70 597 62Q597 56 591 43Q579 19 556 5T512 -10H505Q438 -10 414 62L411 69L400 61Q390 53 370 41T325 18T267 -2T203 -11Q124 -11 79 39T34 156ZM208 26Q257 26 306 47T379 90L403 112Q401 255 396 290Q382 405 304 405Q235 405 183 332Q156 292 139 224T121 120Q121 71 146 49T208 26Z"></path></g></g></g></svg></mjx-container>, <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="6.789ex" height="2.48ex" role="img" focusable="false" viewBox="0 -846 3000.7 1096"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D43D" d="M447 625Q447 637 354 637H329Q323 642 323 645T325 664Q329 677 335 683H352Q393 681 498 681Q541 681 568 681T605 682T619 682Q633 682 633 672Q633 670 630 658Q626 642 623 640T604 637Q552 637 545 623Q541 610 483 376Q420 128 419 127Q397 64 333 21T195 -22Q137 -22 97 8T57 88Q57 130 80 152T132 174Q177 174 182 130Q182 98 164 80T123 56Q115 54 115 53T122 44Q148 15 197 15Q235 15 271 47T324 130Q328 142 387 380T447 625Z"></path></g><g data-mml-node="mo" transform="translate(633,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(1022,0)"><g data-mml-node="mover"><g data-mml-node="mi"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z"></path></g><g data-mml-node="mo" transform="translate(441.3,32) translate(-250 0)"><path data-c="20D7" d="M377 694Q377 702 382 708T397 714Q404 714 409 709Q414 705 419 690Q429 653 460 633Q471 626 471 615Q471 606 468 603T454 594Q411 572 379 531Q377 529 374 525T369 519T364 517T357 516Q350 516 344 521T337 536Q337 555 384 595H213L42 596Q29 605 29 615Q29 622 42 635H401Q377 673 377 694Z"></path></g></g></g><g data-mml-node="mo" transform="translate(1738,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(2182.7,0)"><path data-c="1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"></path></g><g data-mml-node="mo" transform="translate(2611.7,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container> should decrease on every iteration.</p>
<p>If <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="1.448ex" height="1.025ex" role="img" focusable="false" viewBox="0 -442 640 453"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D6FC" d="M34 156Q34 270 120 356T309 442Q379 442 421 402T478 304Q484 275 485 237V208Q534 282 560 374Q564 388 566 390T582 393Q603 393 603 385Q603 376 594 346T558 261T497 161L486 147L487 123Q489 67 495 47T514 26Q528 28 540 37T557 60Q559 67 562 68T577 70Q597 70 597 62Q597 56 591 43Q579 19 556 5T512 -10H505Q438 -10 414 62L411 69L400 61Q390 53 370 41T325 18T267 -2T203 -11Q124 -11 79 39T34 156ZM208 26Q257 26 306 47T379 90L403 112Q401 255 396 290Q382 405 304 405Q235 405 183 332Q156 292 139 224T121 120Q121 71 146 49T208 26Z"></path></g></g></g></svg></mjx-container> is too small, gradient descent takes a lot more iterations to converge.</p>
<img lazyload="" src="/images/loading.svg" data-src="/2023/11/08/Machine-Learning-Course-by-Andrew-Ng/fig_14.png" class="" width="600">

<h3 id="Feature-engineering"><a href="#Feature-engineering" class="headerlink" title="Feature engineering"></a>Feature engineering</h3><blockquote>
<p>Feature engineering: Using intuition to design new features, by transforming or combining original features.</p>
</blockquote>
<img lazyload="" src="/images/loading.svg" data-src="/2023/11/08/Machine-Learning-Course-by-Andrew-Ng/fig_16.png" class="" width="600">

<p>For instance, if we have measurements for the dimensions of a swimming pool(length, width, height), <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.464ex;" xmlns="http://www.w3.org/2000/svg" width="23.85ex" height="2.034ex" role="img" focusable="false" viewBox="0 -694 10541.9 899"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mi" transform="translate(298,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(764,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(1364,0)"><path data-c="1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"></path></g><g data-mml-node="mi" transform="translate(1841,0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(2202,0)"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z"></path></g><g data-mml-node="mo" transform="translate(3000.2,0)"><path data-c="D7" d="M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z"></path></g><g data-mml-node="mi" transform="translate(4000.4,0)"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z"></path></g><g data-mml-node="mi" transform="translate(4716.4,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(5061.4,0)"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="mi" transform="translate(5581.4,0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(5942.4,0)"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z"></path></g><g data-mml-node="mo" transform="translate(6740.7,0)"><path data-c="D7" d="M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z"></path></g><g data-mml-node="mi" transform="translate(7740.9,0)"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z"></path></g><g data-mml-node="mi" transform="translate(8316.9,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(8782.9,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(9127.9,0)"><path data-c="1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"></path></g><g data-mml-node="mi" transform="translate(9604.9,0)"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z"></path></g><g data-mml-node="mi" transform="translate(10180.9,0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g></g></g></svg></mjx-container> would be a more useful engineered feature.</p>
<p>We can also use polynomial regression to fit the data better.</p>
<img lazyload="" src="/images/loading.svg" data-src="/2023/11/08/Machine-Learning-Course-by-Andrew-Ng/fig_15.png" class="" width="600">


<h2 id="Logistic-Regression-for-Classification"><a href="#Logistic-Regression-for-Classification" class="headerlink" title="Logistic Regression for Classification"></a>Logistic Regression for Classification</h2><p>For instance:</p>
<ul>
<li>Is this email spam?</li>
<li>Is the transaction fradulent?</li>
<li>Is the tumor malignant?</li>
</ul>
<blockquote>
<p>In these <strong>binary classification</strong>, y can only be one of two values. Usually 1 for positive class and 0 for negative class.</p>
</blockquote>
<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><p><a class="link" href="https://www.coursera.org/learn/machine-learning/lecture/TxO6F/unsupervised-learning-part-1">https://www.coursera.org/learn/machine-learning/lecture/TxO6F/unsupervised-learning-part-1 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
]]></content>
      <categories>
        <category>Algorithm</category>
      </categories>
  </entry>
  <entry>
    <title>Lean English With Movies and TV Series</title>
    <url>/2023/10/05/Lean-English-With-Movies-and-TV-Series/</url>
    <content><![CDATA[<blockquote>
<p>Translations mostly refers to gpt-4.</p>
</blockquote>
<blockquote>
<p>GPT prompts: I am watching movies now, can you explain the specific words or phrase which I don’t understand? You should also give other examples.</p>
</blockquote>
<h1 id="Minions"><a href="#Minions" class="headerlink" title="Minions"></a>Minions</h1>
  <div class="note p-4 mb-4 rounded-small black">
    <p>Making their master happy was the <strong>tribe’s</strong> very reason for existence.</p>

  </div>
<blockquote>
<p>a group of people of the same race, and with the same customs, language, religion, etc, living in a particular area and often led by a chief.</p>
</blockquote>

  <div class="note p-4 mb-4 rounded-small blue">
    <p>With the <strong>emergence</strong> of the Stone Age came the rise of a new species.</p>

  </div>
<blockquote>
<p>start to exist, to appear or become known</p>
</blockquote>

  <div class="note p-4 mb-4 rounded-small grey">
    <p>But keeping a boss, <strong>therein lies the rub</strong>.</p>

  </div> 
<blockquote>
<p>Suggests that the real challenge or problem is in keeping a boss, <strong>therein lies the rub</strong> &#x3D; that is where the problem is &#x3D; there’s the rub.</p>
</blockquote>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/10/05/Lean-English-With-Movies-and-TV-Series/min_4.png"
                      class="" width="500"
                >


  <div class="note p-4 mb-4 rounded-small green">
    <p>The Minions took an <strong>instant</strong> liking to man.</p>

  </div>
<blockquote>
<p>happening immediately</p>
</blockquote>

  <div class="note p-4 mb-4 rounded-small red">
    <p>Ancient Egypt <strong>held great promise</strong>. </p>

  </div>
<blockquote>
<p>Sth or sb showed a lot of potential or <strong>indicated</strong> (point out, show, be a sign of something) a high <strong>likelihood</strong> (the chance of sth happening; how likely sth is to happen) or future success</p>
</blockquote>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/10/05/Lean-English-With-Movies-and-TV-Series/min_5.png"
                      class="" width="500"
                >


  <div class="note p-4 mb-4 rounded-small orange">
    <p>One particular employer <strong>took their failure very very badly</strong>.</p>

  </div>
<blockquote>
<p>Someone reacted strongly and negatively to their own failure or mistake, it implies a deep sense of disappointment, regret, or emotional pain in response to not succeeding or meeting one’s own expectations</p>
</blockquote>

  <div class="note p-4 mb-4 rounded-small pink">
    <p>And then, when all hope seemed lost, they found <strong>sanctuary</strong>.</p>

  </div>
<blockquote>
<p>A place of <strong>refuge</strong> (a condition or  place of safety, where one is protected from danger, <strong>distress</strong> (it conveys a sense of extreme sorrow, suffering, or discomfort), or trouble.) or safety, a sanctuary can be a place where people or animals are protected and cannot be harmed or captured.</p>
</blockquote>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/10/05/Lean-English-With-Movies-and-TV-Series/min_1.png"
                      class="" width="500"
                >



  <div class="note p-4 mb-4 rounded-small cyan">
    <p>Years passed as the Minions <strong>forged</strong> their own civilization.</p>

  </div>
<blockquote>
<p>Implies a sense of active creation or shaping, often through hard work and determination, Minions built, developed, or established their own unique society or culture over time.</p>
</blockquote>

  <div class="note p-4 mb-4 rounded-small white">
    <p>If this continued any longer, the Minions would <strong>perish</strong>.</p>

  </div>
<blockquote>
<p><strong>Perish</strong> is a formal or literary word that means to die, especially in a sudden or terrible way, suggests a serious, <strong>dire</strong> (describes a situation or event that is extrmely serious or urgent, often involving great risk or suffering.) consequence, emphasizing the severity of the situation. The statement conveys a sense of urgency or danger, implying that the continuation of a certain event or circumstance would lead to the <strong>demise</strong> (refers to a person’s death or the end of sth’s existence or operation.) or extinction of the Minions.</p>
</blockquote>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/10/05/Lean-English-With-Movies-and-TV-Series/min_2.png"
                      class="" width="500"
                >


  <div class="note p-4 mb-4 rounded-small yellow">
    <p>Truth be told, Stuart had no idea what he was chosen for, but was <strong>thrilled</strong> it made people cheer for him.</p>

  </div>
<blockquote>
<p>Stuart was extremely excited, pleased or happy. It conveys a strong feeling of <strong>elation</strong> (a feeling of great joy) or joy.</p>
</blockquote>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/10/05/Lean-English-With-Movies-and-TV-Series/min_3.png"
                      class="" width="500"
                >


  <div class="note p-4 mb-4 rounded-small blue">
    <p>Attend guest lectures from <strong>esteemed</strong> villains, make contacts in the underworld community.</p>

  </div>
<blockquote>
<p><strong>Esteemed</strong> means highly respected or admired.</p>
</blockquote>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/10/05/Lean-English-With-Movies-and-TV-Series/min_7.png"
                      class="" width="500"
                >


  <div class="note p-4 mb-4 rounded-small orange">
    <p>These adorable little <strong>freaks</strong> are headed to Orlando, too!</p>

  </div>
<blockquote>
<p>Tranditionally, freak can refer to sth very unusual or unexpected, sometimes carry a negative or <strong>derogatory</strong>(showing a critical or disrespectful attitude) <strong>connotation</strong>(additional meaning carries beyond its literal definition).</p>
</blockquote>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/10/05/Lean-English-With-Movies-and-TV-Series/min_6.png"
                      class="" width="500"
                >


  <div class="note p-4 mb-4 rounded-small pink">
    <p>Dad! We <strong>got company</strong>! It’s because I tripped the alarm.</p>

  </div>
<blockquote>
<p><strong>Got company</strong> is an informal way to say that someone is approaching or has arrived, typically in an unexpected or unwelcome manner.</p>
</blockquote>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/10/05/Lean-English-With-Movies-and-TV-Series/min_8.png"
                      class="" width="500"
                >


  <div class="note p-4 mb-4 rounded-small cyan">
    <p>What a small world! Hope we’re not in <strong>rival gangs</strong>.</p>

  </div>
<blockquote>
<p>Potential conflicts or differences between the two people meeting.</p>
</blockquote>

  <div class="note p-4 mb-4 rounded-small green">
    <p>Oh, Kevin, you don’t wanna work for him! He ate his last <strong>henchmen</strong>!</p>

  </div>
<blockquote>
<p><strong>Henchmen</strong> refers to loyal and subservient followers or helpers, expecially those who engage in criminal activities for a powerful leader or boss.</p>
</blockquote>

  <div class="note p-4 mb-4 rounded-small white">
    <p><strong>Ten times the evil in half the package</strong>.</p>

  </div>
<blockquote>
<p>This phrase describe sb&#x2F;sth is extremely <strong>malevolent</strong>(having or showing a desire to harm other people) or harmful while being <strong>deceptively</strong>(likely to make you believe sth that is not true) small or unassuming in appearance.</p>
</blockquote>

  <div class="note p-4 mb-4 rounded-small red">
    <p>You see this tiny little <strong>trinket</strong>?</p>

  </div>
<blockquote>
<p><strong>Trinket</strong> refers to a small <strong>ornament</strong>(an object that is used as decoration in a room, garden&#x2F;yard, etc. rather than for a particular purpose) or item of jewelry that is of little value.</p>
</blockquote>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/10/05/Lean-English-With-Movies-and-TV-Series/min_9.png"
                      class="" width="500"
                >


  <div class="note p-4 mb-4 rounded-small black">
    <p>Love the <strong>constume</strong>!</p>

  </div>
<blockquote>
<p>The clothes worn by actors in a play or movie, or worn by sb to make them look like sth else; The clothes worn by people from a particular place or during a particular historical period.</p>
</blockquote>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/10/05/Lean-English-With-Movies-and-TV-Series/min_10.png"
                      class="" width="500"
                >


  <div class="note p-4 mb-4 rounded-small yellow">
    <p><strong>Buckle up</strong>, boys!</p>

  </div>
<blockquote>
<p>Literally, it’s directive to fasten their seatbelts for safety. Figuratively, it’s playful way to say “Get ready for an adventure!”.</p>
</blockquote>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/10/05/Lean-English-With-Movies-and-TV-Series/min_11.png"
                      class="" width="500"
                >


  <div class="note p-4 mb-4 rounded-small grey">
    <p>But right now, it’s <strong>leaking radiation</strong> like you would not believe!</p>

  </div>
<blockquote>
<p>It means that radiation is being emitted or released from a particular source.<br><strong>Like you would not believe</strong>  is an idiomatic expression used to emphasize the extent or degree of sth.</p>
</blockquote>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/10/05/Lean-English-With-Movies-and-TV-Series/min_12.png"
                      class="" width="500"
                >


  <div class="note p-4 mb-4 rounded-small blue">
    <p>Herb, these are the new <strong>recruits</strong>.</p>

  </div>
<blockquote>
<p>It refers to individuals who have recently joined a group, organization, team, or cause.</p>
</blockquote>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/10/05/Lean-English-With-Movies-and-TV-Series/min_13.png"
                      class="" width="500"
                >


  <div class="note p-4 mb-4 rounded-small orange">
    <p>Right on! You guys are crazy little and way yellow, and I dig that!</p>

  </div>
<blockquote>
<p><strong>Right on</strong> is an expression of strong support, approval, or encouragement.<br><strong>Dig</strong> is another common slang term for like. For instance, I dug that movie.</p>
</blockquote>

  <div class="note p-4 mb-4 rounded-small pink">
    <p>Oh, I love England. The music, the fashion. I’m seriously thinking about <strong>overthrowing</strong> it someday.</p>

  </div>
<blockquote>
<p><strong>Overthrowing</strong> refers to forcibly removing or displacing a system, government, ruler, or authority from power.</p>
</blockquote>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/10/05/Lean-English-With-Movies-and-TV-Series/min_14.png"
                      class="" width="500"
                >


  <div class="note p-4 mb-4 rounded-small cyan">
    <p>You can use it to <strong>hypnotize</strong> anyone. Anyone!</p>

  </div>
<blockquote>
<p><strong>Hypnotize</strong> refers to the ability to put someone into a <strong>trance</strong>-like(a state in which sb seems to be asleep but is aware of what is said to them) state, making them <strong>susceptible</strong>(very likely to be influenced, harmed or affected by sb&#x2F;sth) to suggestions or controlling their action, typically using a specific tool or method.</p>
</blockquote>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/10/05/Lean-English-With-Movies-and-TV-Series/min_15.png"
                      class="" width="500"
                >


  <div class="note p-4 mb-4 rounded-small green">
    <p>I feel like a proud mama with three <strong>dashing</strong> evil sons.</p>

  </div>
<blockquote>
<p>Attractive, confident, fashionable and elegant.</p>
</blockquote>

  <div class="note p-4 mb-4 rounded-small white">
    <p>All the three little piggies had to do was just steal on little crown that the beautiful wolf had wanted ever since she was a <strong>penniless little street cub</strong>, unloved and abandoned.</p>

  </div>
<blockquote>
<p>Being <strong>penniless</strong> means she was without money, suggesting poverty or hardship. The term “<strong>street cub</strong>“ implies she was young and alone, roaming the streets, likely fending for herself.</p>
</blockquote>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/10/05/Lean-English-With-Movies-and-TV-Series/min_16.png"
                      class="" width="500"
                >


  <div class="note p-4 mb-4 rounded-small red">
    <p>So the wolf <strong>huffed and puffed</strong>, and she blew them off the face of the earth!</p>

  </div>
<blockquote>
<p>The wolf’s actions are described in a much more intense manner, suggesting that she completely <strong>obliterated</strong>(eliminate) or got rid of the pigs in a significant way.</p>
</blockquote>

  <div class="note p-4 mb-4 rounded-small black">
    <p>You’re not allowed in without an adult. <strong>Scram, hooligans</strong>!</p>

  </div>
<blockquote>
<p><strong>Scram</strong> is a <strong>colloquial</strong>(used in conversation but not in formal speech or writing) term that means “go away” or “leave immediately”.<br><strong>Hooligans</strong> refers to people, typically young, who are noisy, <strong>rowdy</strong>(making a lot of noise or likely to cause trouble), or disruptive.</p>
</blockquote>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/10/05/Lean-English-With-Movies-and-TV-Series/min_17.png"
                      class="" width="500"
                >


  <div class="note p-4 mb-4 rounded-small yellow">
    <p>This is a <strong>restricted</strong> area!</p>

  </div>
<blockquote>
<p><strong>Restricted</strong> means access to this particular location or space is limited or controlled.</p>
</blockquote>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/10/05/Lean-English-With-Movies-and-TV-Series/min_18.png"
                      class="" width="500"
                >


  <div class="note p-4 mb-4 rounded-small grey">
    <p>You think it’s funny to <strong>mock</strong> the elderly, do you?</p>

  </div>
<blockquote>
<p>To mock sb means to <strong>ridicule</strong>(unkind comments that make fun of sb&#x2F;sth or make them look silly), <strong>mimic</strong>(to copy the way sb speaks, moves, behaves, etc., especially in order to make other people laugh), or make fun of them, often in a mean-spirited or <strong>belittling</strong>(to make sb or the things that sb does seem unimportant) manner.</p>
</blockquote>

  <div class="note p-4 mb-4 rounded-small blue">
    <p>The Queen’s crown has been <strong>kidnapped</strong>, Sarge!</p>

  </div>
<blockquote>
<p>Be taken against their will.</p>
</blockquote>

  <div class="note p-4 mb-4 rounded-small orange">
    <p>Bob, who appears to be a <strong>bald</strong>, <strong>jaundiced</strong> child, has pulled the famed sword right from its stone which legend <strong>dictates</strong>, makes him the new king.</p>

  </div>
<blockquote>
<p><strong>Bald</strong> means people without hair on the head.<br><strong>Jaundiced</strong> means Minions has yellow skin here.(Mostly a diease)<br><strong>Legend dictates</strong> refers to what a well-known story or myth prescribes or sets as a standard.</p>
</blockquote>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/10/05/Lean-English-With-Movies-and-TV-Series/min_19.png"
                      class="" width="500"
                >


  <div class="note p-4 mb-4 rounded-small pink">
    <p>Tiny yellow <strong>traitor</strong>!</p>

  </div>
<blockquote>
<p>A persion who betrays sb or sth, such as a friend, cause, or principle.</p>
</blockquote>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/10/05/Lean-English-With-Movies-and-TV-Series/min_20.png"
                      class="" width="500"
                >


  <div class="note p-4 mb-4 rounded-small cyan">
    <p>I’d wear a dress so sparkly, it <strong>glowed</strong>!</p>

  </div>
<blockquote>
<p><strong>It glowed</strong> conveys a wish or a fantasy about wearing a dress that is exceptionally shiny or radiant.</p>
</blockquote>

  <div class="note p-4 mb-4 rounded-small green">
    <p>And you pinheads <strong>screwed it up</strong>!</p>

  </div>
<blockquote>
<p><strong>Screw it up</strong> is a slang expression meaning to make a mistake or mishandle a situation, resulting in negative consequences.</p>
</blockquote>

  <div class="note p-4 mb-4 rounded-small white">
    <p>No, no, no, King Bob! You cannot just <strong>abdicate the throne</strong>!</p>

  </div>
<blockquote>
<p><strong>Abdicate the throne</strong> means to <strong>relinquish</strong>(to stop having sth, especially when this happens unwillingly) or give up one’s position as a monarch or ruler. </p>
</blockquote>

  <div class="note p-4 mb-4 rounded-small red">
    <p>If I wasn’t so polite, I’d say this spells certain <strong>doom</strong> for the country.</p>

  </div>
<blockquote>
<p><strong>Doom</strong> refers to an <strong>impending</strong>(going to happen very soon) negative or disastrous outcome.</p>
</blockquote>

  <div class="note p-4 mb-4 rounded-small black">
    <p>I’m a <strong>dungeon</strong> master. Prepare for <strong>torture</strong> which I do.</p>

  </div>
<blockquote>
<p><strong>Dungeon</strong> is a dark underground room used as a prison, especially in a castle.<br><strong>Torture</strong> means the act of causing sb severe pain in order to punish them or make them say or do sth.</p>
</blockquote>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/10/05/Lean-English-With-Movies-and-TV-Series/min_21.png"
                      class="" width="500"
                >


  <div class="note p-4 mb-4 rounded-small yellow">
    <p>Oh, I’ve got a <strong>groovy</strong> idea!</p>

  </div>
<blockquote>
<p>Fashionable, attractive and interesting.</p>
</blockquote>

  <div class="note p-4 mb-4 rounded-small grey">
    <p>Mrs. Overkill, the hair in that picture, it’s just two <strong>wavy</strong> lines!</p>

  </div>
<blockquote>
<p>Having curves, not straight.</p>
</blockquote>

  <div class="note p-4 mb-4 rounded-small blue">
    <p>Oh, so, what, now you’re an art <strong>critic</strong>?</p>

  </div>
<blockquote>
<p>A person who expresses opinions about the good and bad qualities of books, music, etc.</p>
</blockquote>

  <div class="note p-4 mb-4 rounded-small orange">
    <p>The <strong>high collar</strong> and <strong>cinched waist</strong> reflect a simpler, more violent time.</p>

  </div>
<blockquote>
<p><strong>High collar</strong> is a  fashion detail, prevalent in different periods of history, often stands for formality, modesty, or status.<br><strong>Cinched waist</strong> refers to a waist that has been made smaller or more slender by compression, often using corset or belts. Throughout history, a cinched or tighty-laced waist was beauty standard in various cultures, sybolizing femininity.</p>
</blockquote>

  <div class="note p-4 mb-4 rounded-small cyan">
    <p>The material is <strong>a blend of taffeta</strong> and high-density body armor.</p>

  </div>
<blockquote>
<p>This is a crisp, smooth, plain woven fabric made from silk or synthetic fibers. It’s known for its shiny surface and is often used in evening dresses.</p>
</blockquote>

  <div class="note p-4 mb-4 rounded-small pink">
    <p>Must have <strong>tiny waist</strong>. </p>

  </div>
<blockquote>
<p>To have a slender or narrow waist.</p>
</blockquote>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/10/05/Lean-English-With-Movies-and-TV-Series/min_22.png"
                      class="" width="500"
                >


  <div class="note p-4 mb-4 rounded-small green">
    <p>Thanks for doing this, <strong>padre</strong>.<br>Come here, let me squeeze you! Oh, you are so <strong>squishy</strong>!</p>

  </div>
<blockquote>
<p>A person who is qualified to perform religious duties and ceremonies.<br><strong>Squishy</strong> means soft and wet.</p>
</blockquote>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/10/05/Lean-English-With-Movies-and-TV-Series/min_23.png"
                      class="" width="500"
                >


  <div class="note p-4 mb-4 rounded-small white">
    <p>Villains, this is no longer a <strong>coronation</strong>! It is an <strong>execution</strong>!</p>

  </div>
<blockquote>
<p><strong>Coronation</strong> refers to a ceremony where a monarch is formally crowned and <strong>inaugurated</strong>(the act of formally introducing or initiating sth, particularly with a ceremony ).<br><strong>Execution</strong> refers to the act of killing sb, especially as a legal punishment.</p>
</blockquote>

  <div class="note p-4 mb-4 rounded-small red">
    <p>And just for the record, my little <strong>deviled eggs</strong>, you can thank Kevin for what I’m about to do to you!</p>

  </div>
<blockquote>
<p><strong>Deviled eggs</strong> traditionally refers to a dish made from hard-boiled eggs.</p>
</blockquote>

  <div class="note p-4 mb-4 rounded-small black">
    <p>You <strong>imbecile</strong>! Have fun exploding!</p>

  </div>
<blockquote>
<p>It’s an offensive word used to insult someone’s intelligence or decision-making, implying they are stupid or foolish.</p>
</blockquote>

  <div class="note p-4 mb-4 rounded-small green">
    <p>The countty owes you a great debt of <strong>gratitude</strong>.</p>

  </div>
<blockquote>
<p><strong>Gratitude</strong> means a feeling of thankfulness or appreciation. Essentially, the statement is a formal way of saying “Thank you for what you’ve done for the country.”</p>
</blockquote>

  <div class="note p-4 mb-4 rounded-small white">
    <p>Bob, you were a wise and <strong>noble</strong> king for all of eight hours.</p>

  </div>
<blockquote>
<p><strong>Noble</strong> describes sb with high moral principles, good character, and honor.</p>
</blockquote>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/10/05/Lean-English-With-Movies-and-TV-Series/min_24.png"
                      class="" width="500"
                >


  <div class="note p-4 mb-4 rounded-small red">
    <p>Oh，<strong>spectacular</strong>!</p>

  </div>
<blockquote>
<p>Very impressive.</p>
</blockquote>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/10/05/Lean-English-With-Movies-and-TV-Series/min_25.png"
                      class="" width="500"
                >


  <div class="note p-4 mb-4 rounded-small blue">
    <p>For you, I have this beautiful, <strong>super-duper</strong>, incredible snow globe!</p>

  </div>
<blockquote>
<p>This is an informal term used to emphasize the greatness or impressiveness of sth. It’s a way of saying “really great” or “exceptional”.</p>
</blockquote>

  <div class="note p-4 mb-4 rounded-small orange">
    <p>For your bravery and <strong>valor</strong>, I am knighting you.</p>

  </div>
<blockquote>
<p><strong>Valor</strong> refers to great courage in the face of danger, especially in battle.</p>
</blockquote>

  <div class="note p-4 mb-4 rounded-small grey">
    <p>Things look <strong>bleak</strong>, baby, I’m not gonna lie!</p>

  </div>
<blockquote>
<p><strong>Bleak</strong> describes a situation that is not hopeful or encouraging, one that is <strong>gloomy</strong>(without much hope of success or happiness in the future), <strong>desolate</strong>(very lonely and unhappy), or <strong>dreary</strong>(makes you feel sad; dull and not interesting).</p>
</blockquote>

  <div class="note p-4 mb-4 rounded-small yellow">
    <p>Are you really going to allow that little penguin to <strong>make off</strong> with my crown?</p>

  </div>
<blockquote>
<p><strong>Make off</strong> means to leave quickly, especially to escape or to steal sth.</p>
</blockquote>

  <div class="note p-4 mb-4 rounded-small grey">
    <p>He was <strong>cunning</strong>, he was evil, he was perfect.</p>

  </div>
<blockquote>
<p><strong>Cunning</strong> describes sb who is skilled in achieving their goals by <strong>deceit</strong>(dishonest behaviour that is intended to make sb believe sth that is not true) or <strong>evasion</strong>(the act of avoiding sb of avoiding sth that you are supposed to do). It suggests cleverness, especially in a <strong>sly</strong>(acting or done in a secret or dishonest way, often intending to trick people) or <strong>manipulative</strong>(Skilful at influencing sb or forcing sb to do what you want, often in an unfair way) way.</p>
</blockquote>
<h1 id="Angry-Bird"><a href="#Angry-Bird" class="headerlink" title="Angry Bird"></a>Angry Bird</h1>
  <div class="note p-4 mb-4 rounded-small blue">
    <p>I have no choice but to impose the maximum <strong>penalty</strong> allowed by the law.</p>

  </div>
<blockquote>
<p>Penalty refers to a punishment or consequence imposed for wrongdoing, violation, or offense. This punishment is typically given as a result of breaking rules or laws.</p>
</blockquote>

  <div class="note p-4 mb-4 rounded-small orange">
    <p>And I’m just super <strong>psyched</strong> to be taking this journey with you! You’re gonna have a <strong>blast</strong>.</p>

  </div>
<blockquote>
<p><strong>Psyched</strong> is slang that means being very excited, enthusiastic, or eager about something.<br><strong>Blast</strong> is slang for a great and enjoyable time or experience.</p>
</blockquote>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/10/05/Lean-English-With-Movies-and-TV-Series/agb_1.png"
                      class="" width="500"
                >


  <div class="note p-4 mb-4 rounded-small grey">
    <p>You have shared with us the wonders of your <strong>quaint</strong>, simple little island.</p>

  </div>
<blockquote>
<p>Quaint is adjective that describes sth as having an old-fashioned charm or being attractively unusual or <strong>peculiar</strong>(strange or unusual, especially in a way that is unpleasant or worrying) in design or appearance.</p>
</blockquote>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/10/05/Lean-English-With-Movies-and-TV-Series/agb_12.png"
                      class="" width="500"
                >


  <div class="note p-4 mb-4 rounded-small yellow">
    <p>Say hello to the <strong>slingshot</strong>!</p>

  </div>
<blockquote>
<p><strong>Slingshot</strong> refers a small handheld weapon that consists of a Y-shaped frame with an elastic band attached to the two top prongs.</p>
</blockquote>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/10/05/Lean-English-With-Movies-and-TV-Series/agb_13.png"
                      class="" width="500"
                >


  <div class="note p-4 mb-4 rounded-small black">
    <p>The <strong>trampoline</strong>!</p>

  </div>
<blockquote>
<p>A piece of equipment that is used in gymnastics for doing jumps in the air.</p>
</blockquote>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/10/05/Lean-English-With-Movies-and-TV-Series/agb_14.png"
                      class="" width="500"
                >


  <div class="note p-4 mb-4 rounded-small red">
    <p>I am <strong>famished</strong>… -it’s chow time!</p>

  </div>
<blockquote>
<p><strong>Famished</strong> is an adjective that means extremely hungry.</p>
</blockquote>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/10/05/Lean-English-With-Movies-and-TV-Series/agb_15.png"
                      class="" width="500"
                >


  <div class="note p-4 mb-4 rounded-small green">
    <p>And now we’ve come to the <strong>prestigious Palms district</strong>.</p>

  </div>
<blockquote>
<p><strong>Prestigious</strong> is used to describe something that is admired or respected, often due to its high status, reputation, or importance.</p>
</blockquote>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/10/05/Lean-English-With-Movies-and-TV-Series/agb_18.png"
                      class="" width="500"
                >


  <div class="note p-4 mb-4 rounded-small cyan">
    <p>My friend from the <strong>banquet</strong>.</p>

  </div>
<blockquote>
<p>A formal meal for a large number of people, usually for a special occasion.</p>
</blockquote>

  <div class="note p-4 mb-4 rounded-small pink">
    <p>Water is the softest thing, yet it can <strong>penetrate</strong> mountains and earth.</p>

  </div>
<blockquote>
<p><strong>Penetrate</strong> means to pass into or through, often by overcoming resistance.</p>
</blockquote>

  <div class="note p-4 mb-4 rounded-small cyan">
    <p>What the caterpillar calls the end, the world calls a butterfly.</p>

  </div>
<blockquote>
<p>It suggests that what may seem like an ending or a loss can actually be the start of something beautiful and new when viewed from a different perspective.</p>
</blockquote>

  <div class="note p-4 mb-4 rounded-small white">
    <p>That’s very <strong>lifelike</strong>.</p>

  </div>
<blockquote>
<p><strong>Lifelike</strong> describes sth that closely resembles or imitates real life.</p>
</blockquote>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/10/05/Lean-English-With-Movies-and-TV-Series/agb_16.png"
                      class="" width="500"
                >
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/10/05/Lean-English-With-Movies-and-TV-Series/agb_17.png"
                      class="" width="500"
                >


  <div class="note p-4 mb-4 rounded-small green">
    <p>How do we know you’re not <strong>fugitives</strong> of the law?</p>

  </div>
<blockquote>
<p><strong>Fugitives</strong> refers to persons who are fleeing or escaping from <strong>custody</strong> (being held by police or other authorities, especially while awaiting trial), typically to avoid arrest or imprisonment. A <strong>fugitive</strong> can be someone who has committed a crime, is suspected of a crime, or has benn convicted and is avoiding serving their sentence.</p>
</blockquote>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/10/05/Lean-English-With-Movies-and-TV-Series/agb_2.png"
                      class="" width="500"
                >


  <div class="note p-4 mb-4 rounded-small white">
    <p>You might want to shield your eyes from the sparkle of those <strong>trophies</strong>.</p>

  </div>
<blockquote>
<p><strong>Trophies</strong> refers to prizes or awards given for a particular achievement.</p>
</blockquote>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/10/05/Lean-English-With-Movies-and-TV-Series/agb_3.png"
                      class="" width="500"
                >


  <div class="note p-4 mb-4 rounded-small red">
    <p>Looking through <strong>binoculars</strong>, spying on old ladies.</p>

  </div>
<blockquote>
<p><strong>Binoculars</strong> refers to an optical instrument with a lens for each eye, used for magnifying and viewing distant objects.</p>
</blockquote>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/10/05/Lean-English-With-Movies-and-TV-Series/agb_4.png"
                      class="" width="500"
                >


  <div class="note p-4 mb-4 rounded-small black">
    <p>Thanks for your <strong>hospitality</strong>.</p>

  </div>
<blockquote>
<p><strong>Hospitality</strong> refers to the friendly and generous reception and entertainment of guests, visitors, or strangers.</p>
</blockquote>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/10/05/Lean-English-With-Movies-and-TV-Series/agb_5.png"
                      class="" width="500"
                >


  <div class="note p-4 mb-4 rounded-small yellow">
    <p>But how do we get from here to there? I am not <strong>aquatic</strong> in the least.</p>

  </div>
<blockquote>
<p>When referring to animals or plants, “aquatic” means living or growing in water. In this context, when a person uses the term “aquatic,” they are metaphorically suggesting a natural ability or comfort in water, typically in activities like swimming.</p>
</blockquote>

  <div class="note p-4 mb-4 rounded-small grey">
    <p>Comeon, we’re birds. We’re <strong>descended</strong> from dinosaurs.</p>

  </div>
<blockquote>
<p><strong>Descended</strong> means to have originated from or be related to a particluar ancestor or past form.</p>
</blockquote>

  <div class="note p-4 mb-4 rounded-small blue">
    <p>And I don’t need any clam, <strong>detached</strong>, happy birds.</p>

  </div>
<blockquote>
<p>Detached describes someone who is not emotionally involved or connected. A detached individual can seem indifferent, aloof, or distant.</p>
</blockquote>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/10/05/Lean-English-With-Movies-and-TV-Series/agb_6.png"
                      class="" width="500"
                >


  <div class="note p-4 mb-4 rounded-small pink">
    <p>I told you not to <strong>mess with</strong> me!</p>

  </div>
<blockquote>
<p>To comfront or challenge sb, oftern aggressively.(to tease or play a joke on sb in latter plot)</p>
</blockquote>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/10/05/Lean-English-With-Movies-and-TV-Series/agb_19.png"
                      class="" width="500"
                >


  <div class="note p-4 mb-4 rounded-small orange">
    <p>The <strong>treacherous</strong> birds have repaid our friendship with an <strong>unprovoked</strong> act of aggression.</p>

  </div>
<blockquote>
<p><strong>Treacherous</strong> is used to describe someone or sth that is guilty of betrayal or <strong>deception</strong>(the act of deceiving or misleading someone). It implies untrustworthiness or unreliability.<br><strong>Unprovoked</strong> describes an action that is done without any apparent reason or justification. It indicates that the act of aggression was initiated without any prior <strong>provocation</strong> (the act of doing or saying sth deliberately in order to make sb angry or upset) or reason from the other party.</p>
</blockquote>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/10/05/Lean-English-With-Movies-and-TV-Series/agb_7.png"
                      class="" width="500"
                >


  <div class="note p-4 mb-4 rounded-small pink">
    <p>You’re wrecking my house…You wrecked my houes…Well, now <strong>we’re even</strong>.</p>

  </div>
<blockquote>
<p><strong>Wreck</strong> means to destroy or cause significant damage to sth.<br><strong>We’re even</strong> is an idiomatic expression that means both parties are now equal in terms of debts or <strong>obligations</strong> (a duty or responsibility to undertake an action or a commitment), often after one person has retaliated or made up for a wrong done to them. </p>
</blockquote>

  <div class="note p-4 mb-4 rounded-small cyan">
    <p>I’m not <strong>blushing</strong>. I’m just red.</p>

  </div>
<blockquote>
<p>Blushing refers to the <strong>involuntary reddening</strong> (the automatic or unintentional change in skin color to a reddish hue) of the face, usually triggered by emotions such as embarrassment, shame, or shyness.</p>
</blockquote>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/10/05/Lean-English-With-Movies-and-TV-Series/agb_8.png"
                      class="" width="500"
                >


  <div class="note p-4 mb-4 rounded-small green">
    <p>You know, back when I was angry, that would have really <strong>ticked me off</strong>.</p>

  </div>
<blockquote>
<p><strong>Ticked me off</strong> is an idiomatic expression that means made me angry or annoyed me.</p>
</blockquote>

  <div class="note p-4 mb-4 rounded-small white">
    <p>How did you guys find the time to <strong>pull this off</strong>? This is why we went to go get <strong>pedicures</strong>, isn’t it?<br>Nope. We got <strong>pedicures</strong> because we’re worth it.</p>

  </div>
<blockquote>
<p><strong>Pull this off</strong> is an idiomatic expression that means to successfully achieve or complete something, especially when faced with difficulties or challenges.<br>A <strong>pedicure</strong> is a <strong>cosmetic</strong> (pertains to enhancing or improving appearance) treatment for the feet and toenails.</p>
</blockquote>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/10/05/Lean-English-With-Movies-and-TV-Series/agb_9.png"
                      class="" width="500"
                >


  <div class="note p-4 mb-4 rounded-small red">
    <p>Well, this just got awkward.<br>That’ really <strong>insensitive</strong>.</p>

  </div>
<blockquote>
<p>Insensitive is used to describe sb or sth showing a lack of consideration for another’s feelings, needs, or particular situations. It indicates a lack of empathy or awareness.</p>
</blockquote>



  <div class="note p-4 mb-4 rounded-small black">
    <p>Want to go <strong>get a bite</strong>?<br>Forget it. Let’s just go home.</p>

  </div>
<blockquote>
<p><strong>Get a bite</strong> is an informal way of saying have something to eat or go out to eat.</p>
</blockquote>

  <div class="note p-4 mb-4 rounded-small yellow">
    <p>Roommates! I can’t wait to make a <strong>chores list</strong>.</p>

  </div>
<blockquote>
<p>The term chores list refers to a list of household tasks or duties that need to be completed.</p>
</blockquote>

  <div class="note p-4 mb-4 rounded-small grey">
    <p>He’s <strong>hatching</strong> a new plan.</p>

  </div>
<blockquote>
<p>Originally, <strong>hatching</strong> refers to the process by which an animal breaks out of an egg. In this context, it means that he is devising, forming, or coming up with a new plan or idea metaphorically.</p>
</blockquote>

<h1 id="A-Million-Miles-Away"><a href="#A-Million-Miles-Away" class="headerlink" title="A Million Miles Away"></a>A Million Miles Away</h1>
  <div class="note p-4 mb-4 rounded-small blue">
    <p>A <strong>hostile</strong> rocket… mid-flight?</p>

  </div>
<blockquote>
<p>Hostile describe sth that is unfriendly or <strong>adversarial</strong> (involving people who are in opposition and who make attacks on each other) in nature.</p>
</blockquote>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/10/05/Lean-English-With-Movies-and-TV-Series/amm_1.png"
                      class="" width="500"
                >


  <div class="note p-4 mb-4 rounded-small orange">
    <p>Having a clear mind during an emergency is <strong>imperative</strong>.</p>

  </div>
<blockquote>
<p>It means vital importance or crucial, the statement emphasizes that it’s essential to maintain a clear and focused mindset during emergency situations.</p>
</blockquote>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/10/05/Lean-English-With-Movies-and-TV-Series/amm_2.png"
                      class="" width="500"
                >


  <div class="note p-4 mb-4 rounded-small pink">
    <p>I’m <strong>busting my ass</strong>. My body hurts. I can’t sleep.</p>

  </div>
<blockquote>
<p>The phrase is an informal and <strong>coarse</strong> (rude and offensive) expression that means working very hard or putting in a lot of effort, often to the physical or mental exhaustion.</p>
</blockquote>

  <div class="note p-4 mb-4 rounded-small cyan">
    <p>It’s as though the whole place is <strong>sacred</strong>.</p>

  </div>
<blockquote>
<p><strong>Sacred</strong> describes sth that is regarded with great respect and <strong>reverence</strong> (a feeling of great respect or admiration for sb&#x2F;sth), expecially in a spiritual or religuous context.</p>
</blockquote>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/10/05/Lean-English-With-Movies-and-TV-Series/amm_3.png"
                      class="" width="500"
                >


  <div class="note p-4 mb-4 rounded-small green">
    <p>I, too, had to work so hard. <strong>Tenacity</strong> is a superpower.</p>

  </div>
<blockquote>
<p><strong>Tenacity</strong> refers to the quality of being very determined, persistent, or unyielding, even in the face of challenges or <strong>adversity</strong> (a difficult or unpleasant situation).</p>
</blockquote>

  <div class="note p-4 mb-4 rounded-small white">
    <p>The safety divers, they’re only there as a <strong>precaution</strong>.</p>

  </div>
<blockquote>
<p><strong>Precaution</strong> refers to a measure taken in advance to prevent something dangerous or undesirable from happening.</p>
</blockquote>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/10/05/Lean-English-With-Movies-and-TV-Series/amm_4.png"
                      class="" width="500"
                >


  <div class="note p-4 mb-4 rounded-small red">
    <p>Any assistance from the divers will <strong>disqualify</strong> you.</p>

  </div>
<blockquote>
<p>Disqualify means to declare someone <strong>ineligible</strong> (not having the necessary qualifications to have or to do sth) or unfit to participate in a particular activity or to be considered for a particular honor due to a specific reason or action.</p>
</blockquote>

  <div class="note p-4 mb-4 rounded-small black">
    <p>Flight director LeRoy Cain is now instructing controllers to get out their <strong>contingency</strong> procedures.</p>

  </div>
<blockquote>
<p><strong>Contingency</strong> refers to a future event or circumstance that is possible but cannot be predicted with certainty or one that could cause problems.</p>
</blockquote>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/10/05/Lean-English-With-Movies-and-TV-Series/amm_5.png"
                      class="" width="500"
                >


  <div class="note p-4 mb-4 rounded-small yellow">
    <p>A piece of <strong>foam insulation</strong> broke off the external tank and struck the left wing of the orbiter.</p>

  </div>
<blockquote>
<p><strong>Foam insulation</strong> refers to a material used to insulate and protect various structures, particularly in aerospace contexts.</p>
</blockquote>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/10/05/Lean-English-With-Movies-and-TV-Series/amm_6.png"
                      class="" width="500"
                >


  <div class="note p-4 mb-4 rounded-small grey">
    <p><strong>Folks down</strong> at the Selection Office, would like to have a word.</p>

  </div>
<blockquote>
<p><strong>Folks down</strong> is an informal way to refer to the people or group of individuals at a particular location.</p>
</blockquote>
<h1 id="Zootopia"><a href="#Zootopia" class="headerlink" title="Zootopia"></a>Zootopia</h1>
  <div class="note p-4 mb-4 rounded-small blue">
    <p>Fear. <strong>Treachery</strong>. <strong>Bloodlust</strong>. Thousands of years ago… these were the forces that ruled our world. A world where <strong>prey</strong> were scared of <strong>predators</strong>.</p>

  </div>
<blockquote>
<p><strong>Treachery</strong> refers to betrayal or deceptive action. It evokes a sense of mistrust and the idea that alliances could be easily broken, leading to chaos and conflict.<br><strong>Bloodlust</strong> describes an intense an violent desire to kill or injure. It paints a picture of a world dominated by aggression and the desire for <strong>conquest</strong>.<br><strong>Prey</strong> These are animals that are hunted and killed by other animals for food.<br><strong>Predator</strong> These are animals that hunt, kill, and eat other animals. They are often at the top of the food chain and are seen as a threat to those lower down.</p>
</blockquote>

  <div class="note p-4 mb-4 rounded-small orange">
    <p>And predators had an uncontrollable biological urge to <strong>maim</strong> and <strong>maul</strong>…</p>

  </div>
<blockquote>
<p><strong>Maim</strong> To injure severely, especially in such a way that part of the body is permanently damaged or disfigured.<br><strong>Maul</strong> To handle or treat roughly, often causing injury. In the context of animals, it means to attack or injure by biting, striking, or tearing at.</p>
</blockquote>

  <div class="note p-4 mb-4 rounded-small pink">
    <p>Back them, the world was divided in two. <strong>Vicious</strong> predator or <strong>meek</strong> prey.</p>

  </div>
<blockquote>
<p><strong>Vicious</strong> denotes sb&#x2F;sth that is aggressive, cruel. or violent.<br><strong>Meek</strong> describes sb&#x2F;sth that is gentle, <strong>submissive</strong>, or lacking in force or <strong>assertiveness</strong>.</p>
</blockquote>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/10/05/Lean-English-With-Movies-and-TV-Series/zoo_1.png"
                      class="" width="500"
                >


  <div class="note p-4 mb-4 rounded-small blue">
    <p>And every young mammal has <strong>multitudinous</strong> opportunities.</p>

  </div>

<blockquote>
<p><strong>Multitudinous</strong> means very numerous or existing in great numbers.</p>
</blockquote>

  <div class="note p-4 mb-4 rounded-small orange">
    <p>I don’t have to <strong>cower</strong> in a <strong>herd</strong> anymore.</p>

  </div>

<blockquote>
<p>To <strong>cower</strong> means to shrink away or crouch down, typically out of fear or submission.<br>A <strong>herd</strong> refers to a large group of animals, especially hoofed mammals, that live together or are kept together as livestock.</p>
</blockquote>

  <div class="note p-4 mb-4 rounded-small pink">
    <p>I don’t have to be a lonely hunter anymore. Today, I can hunt for tax <strong>exemptions</strong>. I’m gonna be an <strong>actuary</strong>.</p>

  </div>

<blockquote>
<p>A tax <strong>exemption</strong> is a monetary exclusion that reduces the taxable income.<br>An <strong>actuary</strong> is a business professional who deals the financial impact of risk and uncertainty.</p>
</blockquote>

  <div class="note p-4 mb-4 rounded-small cyan">
    <p>Carrot farming is a <strong>noble</strong> profession.</p>

  </div>

<blockquote>
<p><strong>Noble</strong> means having or showing fine personal qualities or high moral principles.</p>
</blockquote>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/10/05/Lean-English-With-Movies-and-TV-Series/zoo_2.png"
                      class="" width="500"
                >


  <div class="note p-4 mb-4 rounded-small green">
    <p>Hey! You heard her. <strong>Cut it out</strong>.</p>

  </div>

<blockquote>
<p>When sb says <strong>cut it out</strong>, they are telling someone else to stop what they are doing, especially if it is annoying, troublesome, or inappropriate.</p>
</blockquote>

  <div class="note p-4 mb-4 rounded-small white">
    <p>Nice <strong>costume</strong>, loser.</p>

  </div>

<blockquote>
<p><strong>Costume</strong> refers to a set of clothes worn by an actor for a particular role or by sb attending a masquerade or a special event.</p>
</blockquote>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/10/05/Lean-English-With-Movies-and-TV-Series/zoo_3.png"
                      class="" width="500"
                >


  <div class="note p-4 mb-4 rounded-small red">
    <p>Listen up, <strong>cadets</strong>.</p>

  </div>

<blockquote>
<p><strong>Cadets</strong> are individuals who are in training to become members of military organization or who are undergoing some form of structured training program, often in preparation for a future role in the military or a related field. </p>
</blockquote>

  <div class="note p-4 mb-4 rounded-small black">
    <p><strong>Filthy</strong> toilet! You’re dead, <strong>Fluff</strong> Butt.</p>

  </div>

<blockquote>
<p><strong>Filthy</strong> is used to describe a toilet that is very dirty, unsanitary, or unclean.<br><strong>Fluff</strong> refers soft animal fur or bird feathers, that is found especially on young animals or birds.</p>
</blockquote>

  <div class="note p-4 mb-4 rounded-small yellow">
    <p>As mayor of Zootopia, I am proud to announce that my <strong>Mammal Inclusion Initiative</strong> has produced its first police academy graduate.</p>

  </div>

<blockquote>
<p>It suggests a program or policy that has been put in place to promote the inclusion of all mammals, regardless of their species, size, or other characteristics, in the society of Zootopia. The goal of this initiative is likely to ensure that mammals of all types are represented and have equal opportunities, particularly in professions like law enforcement, which is indicated by the mention of the police academy.</p>
</blockquote>

  <div class="note p-4 mb-4 rounded-small grey">
    <p><strong>Valedictorian</strong> of her class, ZPD’s very first rabbit officer, Judy Hopps!</p>

  </div>

<blockquote>
<p>The student who has the highest marks&#x2F;grades in a particular group of students and who gives the valedictory speech at a graduation ceremony.</p>
</blockquote>

  <div class="note p-4 mb-4 rounded-small blue">
    <p>You play <strong>cribbage</strong> with a <strong>weasel</strong>.</p>

  </div>

<blockquote>
<p><strong>Cribbage</strong> is a card game that involves playing and grouping cards in combinations to gain poing.<br>A <strong>weasel</strong> is a small mammal known for its slender body and keen hunting skills.</p>
</blockquote>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/10/05/Lean-English-With-Movies-and-TV-Series/zoo_4.png"
                      class="" width="500"
                >


  <div class="note p-4 mb-4 rounded-small orange">
    <p>The <strong>deterrent</strong> and the <strong>repellent</strong>, that’s all she needs.</p>

  </div>

<blockquote>
<p>A <strong>deterrent</strong> is sth that discourages or is intended to discourage sb from doing sth. It’s often used in the context of preventing undesirable actions or behaviors by making them seem unappealing or risky.<br>A <strong>repellent</strong> is a substance that drives away certain things, often insects or animals.</p>
</blockquote>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/10/05/Lean-English-With-Movies-and-TV-Series/zoo_5.png"
                      class="" width="500"
                >


  <div class="note p-4 mb-4 rounded-small pink">
    <p><strong>Terrific</strong>! Everyone wins!</p>

  </div>

<blockquote>
<p><strong>Terrific</strong> used to describe sth as extremely good. It’s an expression of enthusiasm and approval.</p>
</blockquote>

  <div class="note p-4 mb-4 rounded-small cyan">
    
  </div>

<blockquote>
</blockquote>

  <div class="note p-4 mb-4 rounded-small green">
    
  </div>

<blockquote>
</blockquote>

  <div class="note p-4 mb-4 rounded-small white">
    
  </div>

<blockquote>
</blockquote>

  <div class="note p-4 mb-4 rounded-small red">
    
  </div>

<blockquote>
</blockquote>

  <div class="note p-4 mb-4 rounded-small black">
    
  </div>

<blockquote>
</blockquote>

  <div class="note p-4 mb-4 rounded-small yellow">
    
  </div>

<blockquote>
</blockquote>

  <div class="note p-4 mb-4 rounded-small grey">
    
  </div>

<blockquote>
</blockquote>
]]></content>
      <categories>
        <category>English Learning</category>
      </categories>
  </entry>
  <entry>
    <title>ManimCE</title>
    <url>/2023/05/21/ManimCE/</url>
    <content><![CDATA[<blockquote>
<p>ManimCE 库（manim community edition）的前身是 manim 库，用于做数学可视化图像与动画，由 Grand Sanderson 创建，也就是 3Blue1Brown<br>的作者。它是一个开源的 python 库。</p>
</blockquote>
<h2 id="配置环境"><a href="#配置环境" class="headerlink" title="配置环境"></a>配置环境</h2><p><a class="link"   href="https://docs.manim.community/en/stable/" >Manim Community Edition <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<h3 id="新建工程文件夹"><a href="#新建工程文件夹" class="headerlink" title="新建工程文件夹"></a>新建工程文件夹</h3><p>在vscode中新建一个文件夹，然后新建一个<code>.py</code>为后缀的文件，即可开始code。</p>
<h3 id="生成动画"><a href="#生成动画" class="headerlink" title="生成动画"></a>生成动画</h3><div class="highlight-container" data-rel="Powershell"><figure class="iseeu highlight powershell"><table><tr><td class="code"><pre><span class="line">manim <span class="literal">-pql</span> xxxx.py xxxxx</span><br></pre></td></tr></table></figure></div>
<p>例如：<code>gallery.py</code></p>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> manim <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">GraphAreaPlot</span>(<span class="title class_ inherited__">Scene</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">construct</span>(<span class="params">self</span>):</span><br><span class="line">        ax = Axes(</span><br><span class="line">            x_range=[<span class="number">0</span>, <span class="number">5</span>],</span><br><span class="line">            y_range=[<span class="number">0</span>, <span class="number">6</span>],</span><br><span class="line">            x_axis_config=&#123;<span class="string">&quot;numbers_to_include&quot;</span>: [<span class="number">2</span>, <span class="number">3</span>]&#125;,</span><br><span class="line">            tips=<span class="literal">False</span>,</span><br><span class="line">        )</span><br></pre></td></tr></table></figure></div>
<p>生成动画</p>
<div class="highlight-container" data-rel="Powershell"><figure class="iseeu highlight powershell"><table><tr><td class="code"><pre><span class="line">manim <span class="literal">-pql</span> gallery.py GraphAreaPlot</span><br></pre></td></tr></table></figure></div>
<p>四种画质：low, medium, high, 4k，分别对应<code>-ql -qm -qh -qk</code></p>
<h2 id="绘制函数图像"><a href="#绘制函数图像" class="headerlink" title="绘制函数图像"></a>绘制函数图像</h2><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> manim <span class="keyword">import</span>*</span><br><span class="line"><span class="keyword">from</span> math <span class="keyword">import</span>*</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">inverse_sinh</span>(<span class="params">x</span>):</span><br><span class="line">    <span class="keyword">return</span> np.log(x + np.sqrt(x ** <span class="number">2</span> + <span class="number">1</span>))</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">inverse_cosh</span>(<span class="params">x</span>):</span><br><span class="line">    <span class="keyword">return</span> np.log(x - np.sqrt(x ** <span class="number">2</span> - <span class="number">1</span>))</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">HyperbolicFunction</span>(<span class="title class_ inherited__">Scene</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">construct</span>(<span class="params">self</span>):</span><br><span class="line">        self.camera.background_color = WHITE</span><br><span class="line">        ax = Axes(</span><br><span class="line">            x_range=[-<span class="number">10</span>, <span class="number">10</span>],</span><br><span class="line">            y_range=[-<span class="number">10</span>, <span class="number">10</span>],</span><br><span class="line">            axis_config=&#123;<span class="string">&quot;color&quot;</span>: GREEN&#125;,</span><br><span class="line">            tips = <span class="literal">False</span>,</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">        labels = ax.get_axis_labels()</span><br><span class="line"></span><br><span class="line">        curve_1 = ax.plot(<span class="keyword">lambda</span> x: np.sinh(x), color=BLUE, x_range = [-<span class="number">10</span>,<span class="number">10</span>])</span><br><span class="line">        curve_2 = ax.plot(<span class="keyword">lambda</span> x: np.cosh(x), color=RED, x_range = [<span class="number">10</span>,<span class="number">10</span>])</span><br><span class="line"></span><br><span class="line">        sinh_label = ax.get_graph_label(curve_1, label=<span class="string">&quot;\\sinh(x) = \\frac&#123;e^x - e^&#123;-x&#125;&#125;&#123;2&#125;&quot;</span>, x_val= <span class="number">8</span>, direction=UP / <span class="number">2</span>)</span><br><span class="line">        cosh_label = ax.get_graph_label(curve_2, label=<span class="string">&quot;\\cosh(x) = \\frac&#123;e^x + e^&#123;-x&#125;&#125;&#123;2&#125;&quot;</span>, x_val= -<span class="number">8</span>, direction=UP / <span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">        self.add(ax, labels, sinh_label, cosh_label, curve_1, curve_2)</span><br></pre></td></tr></table></figure></div>


]]></content>
      <categories>
        <category>Mathematics</category>
      </categories>
  </entry>
  <entry>
    <title>Mathematical Modeling in Science and Engineering</title>
    <url>/2024/08/16/Mathematical-Modeling-in-Science-and-Engineering/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>Mathematics</category>
      </categories>
  </entry>
  <entry>
    <title>PCB设计基础</title>
    <url>/2023/09/26/PCB%E8%AE%BE%E8%AE%A1%E5%9F%BA%E7%A1%80/</url>
    <content><![CDATA[<h2 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h2><p>PCB的结构如下：</p>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/09/26/PCB%E8%AE%BE%E8%AE%A1%E5%9F%BA%E7%A1%80/fig_1.png"
                      class="" width="500"
                >

<p>上下两层为同层，中间叫做FR-4，是一层不导电的物质，通常是环氧玻璃纤维；</p>
<p>多层板通常是2的倍数，用半预制片压合在一起，这种材料也是绝缘的；</p>
<p>对于设计而言，画四层板是最容易的。</p>
<p>PCB表面有一层油漆，叫做阻焊层，用于保护铜线，让其不受空气的氧化；</p>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/09/26/PCB%E8%AE%BE%E8%AE%A1%E5%9F%BA%E7%A1%80/fig_2.png"
                      class="" width="300"
                >

<p>阻焊层上面还有一层，叫做丝印层，用于标记元件的位置，元件的编号等；</p>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/09/26/PCB%E8%AE%BE%E8%AE%A1%E5%9F%BA%E7%A1%80/fig_3.png"
                      class="" width="400"
                >

<p>基础工艺指标：</p>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/09/26/PCB%E8%AE%BE%E8%AE%A1%E5%9F%BA%E7%A1%80/fig_4.png"
                      class="" width="500"
                >

<p>走线线距和走线宽度一般是相同的；</p>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/09/26/PCB%E8%AE%BE%E8%AE%A1%E5%9F%BA%E7%A1%80/fig_5.png"
                      class="" width="500"
                >

<p>在设计PCB的布局布线中，核心的要点就是要按照信号的流向来进行布局；</p>
<p>在布线过程中，如果走的是信号频率较高的线，需要控制等长；</p>
<h2 id="原理图绘制"><a href="#原理图绘制" class="headerlink" title="原理图绘制"></a>原理图绘制</h2><blockquote>
<p>第一次设计以一个stm32最小系统板为设计项目</p>
</blockquote>
<p>元件库可以到嘉立创的官网下载；（SMT打样–&gt;可贴器件列表）</p>
<p>一些操作技巧：</p>
<ul>
<li>双击库中的元件进行选中，左键确定，右键取消，空格旋转；</li>
<li>第一次移动元件按<code>Tab</code>键，可以编辑元件参数；</li>
<li>按住<code>Ctrl</code>再点击某个功能，可以为这个功能设置快捷键；</li>
<li>布线的时候需要点一次右键才能重新画，点两次取消；</li>
</ul>
<p>设置快捷键去练习</p>
<h3 id="原理图快捷键"><a href="#原理图快捷键" class="headerlink" title="原理图快捷键"></a>原理图快捷键</h3><ul>
<li>右键取消</li>
<li>初次拖动元件<code>Tab</code>修改参数</li>
<li><code>Space</code>旋转元件</li>
<li><code>Ctrl+W</code>布线</li>
<li><code>P+N</code>网络标签</li>
<li><code>P+P</code>放置元件菜单</li>
<li></li>
</ul>
<h3 id="PCB快捷键"><a href="#PCB快捷键" class="headerlink" title="PCB快捷键"></a>PCB快捷键</h3><ul>
<li><code>q</code>可以将mil单位更换为mm单位</li>
<li>在原理图选择元件之后，点击<code>T+S</code>然后在PCB图中选择<code>T+O+L</code></li>
<li><code>L</code>可切换元件放置顶层或者底层</li>
<li><code>Ctrl+M</code>测量长度</li>
</ul>
<p>放置元件遵从的原则：先大后小<br>先放置大的元件，然后放置小的元件</p>
<p>如何将元件的标号缩小到封装中，</p>
<ol>
<li>先对字符查找相似对象；</li>
<li>在<code>Text Height</code>中将<code>Any</code>改为<code>Same</code>，然后点击<code>应用</code>，再点击<code>确定</code>；</li>
<li>然后在右边栏中的<code>Properties</code>将<code>Text Height</code>改为<code>35mil</code>，再点回车；</li>
<li><code>Ctrl+A</code>选中所有元器件，然后右键上方的<code>排列</code>，选择<code>定位元件字符</code>；</li>
<li>选择居中即可；</li>
</ol>
<h3 id="PCB快捷键-1"><a href="#PCB快捷键-1" class="headerlink" title="PCB快捷键"></a>PCB快捷键</h3><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ul>
<li><a class="link"   href="https://www.bilibili.com/video/BV1GU4y1N7Z6/?spm_id_from=333.788.top_right_bar_window_custom_collection.content.click&vd_source=5c8e073b8f94f9e61f07ae791a132eaf" >学习PCB设计前的知识扫盲，新手向，越新手越好！ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://www.bilibili.com/video/BV1Rf4y1q7cL/?spm_id_from=333.788.top_right_bar_window_custom_collection.content.click&vd_source=5c8e073b8f94f9e61f07ae791a132eaf" >PCB设计快速入门 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
</ul>
]]></content>
      <categories>
        <category>Electronics and Embedded System</category>
      </categories>
  </entry>
  <entry>
    <title>Presentation Improvement</title>
    <url>/2023/05/21/Presentation-Improvement/</url>
    <content><![CDATA[<blockquote>
<p>Using chatgpt to improve my English presentation.</p>
</blockquote>
<p><strong>Prompts:</strong></p>
<p>I want you act as an English teacher to improve my presentation. You can give a topic to me. And I will give a paragraph by myself. After that, you must proofread and give advance and more correct expression to my essay. And rewrite it.</p>

  <div class="note p-4 mb-4 rounded-small info">
    <p>💡Activate <code>Code Spell Checker</code> plugins in VSCode</p>

  </div>

<blockquote>
<p>半年左右更新一次。</p>
</blockquote>
<h2 id="Robotics-in-Agriculture"><a href="#Robotics-in-Agriculture" class="headerlink" title="Robotics in Agriculture"></a>Robotics in Agriculture</h2><p>I believe that robots can play an significant role in agriculture. For example, scientists can develop drones equipped with cameras to grow and monitor crops more effectively. These drones can inspect crops in a timely manner, detecting any issues such as pests or diseases. Additionally, they can precisely apply fertilizers or pesticides, thus reducing waste and minimizing environmental damage. Overall the use of robots in agriculture has the potential to increase productivity, reduce costs, and improve sustainability.</p>
<h2 id="Regular-Exercise"><a href="#Regular-Exercise" class="headerlink" title="Regular Exercise"></a>Regular Exercise</h2><p>Ladies and gentlemen, today I’d like to discuss the myriad benefits of regular exercise. It is widely recognized that engaging in physical activity can do wonders for our bodies, both in terms of improving our physical fitness and bolstering our mental health.</p>
<p>One of the most well-known advantages of regular exercise is weight loss. Studies have shown that individuals who engage in regular physical activity are more likely to maintain a healthy weight and reduce their risk of obesity. Moreover, exercise has been linked to a decrease in the risk of a number of chronic illnesses, such as heart disease and type 2 diabetes.</p>
<p>But the benefits of exercise go beyond the physical realm. Regular exercise has been shown to promote better sleep, increase energy levels, and even enhance cognitive function, Furthermore, engaging in physical activity has been linked to decreased levels of anxiety and depression, and an overall improvement in mental health.</p>
<p>In my personal experience, I have found that playing basketball and boxing have had a profound impact on my overall well-being. These activities not only strengthen my body, but also invigorate my spirit and improve my concentration and productivity at work.</p>
<p>In conclusion, regular exercise is a powerful tool for improving our physical and mental health. By incorporating physical activity into our daily routines, we can reap the many rewards of a healthy and active lifestyle. Thank you for your attention.</p>
<h2 id="The-Impact-of-Artificial-Intelligence-on-Health-care"><a href="#The-Impact-of-Artificial-Intelligence-on-Health-care" class="headerlink" title="The Impact of Artificial Intelligence on Health care"></a>The Impact of Artificial Intelligence on Health care</h2><p>Artificial Intelligence is making a significant impact on various aspects of our daily lives, including health care. AI can provide prompt and straightforward preliminary diagnostics when we feel unwell, helping us understand our symptoms and identify potential health issues without having to visit a hospital for minor concerns.</p>
<p>AI also plays a crucial role in monitoring our overall health, offering personalized recommendations for nutrition and reminding us to engage in regular physical activity. In addition to these wellness applications, AI can provide valuable support during times of ailment.</p>
<p>For instance, AI-powered patient care can assist in administering medication and managing treatment plans, as well as offering companionship to alleviate feelings of solitary or isolation. These are just a few examples of how Artificial Intelligence is revolutionizing the health care landscape, improving the quality of care and empowering individuals to take control of their well-being.</p>
<h2 id="The-Impact-of-Technology-on-Society"><a href="#The-Impact-of-Technology-on-Society" class="headerlink" title="The Impact of Technology on Society"></a>The Impact of Technology on Society</h2><p>Technology has always played a significant role in society, shaping it though changes in the means of production. Looking back through history, we can see how technology has had a profound impact. As we embrace a more convenient lifestyle, technology continues to evolve, constantly influencing and improving our lives.</p>
<p>One recent example of technological advancement is ChatGPT, an artificial intelligence model released by OpenAI a few months ago. Its introduction immediately captured worldwide attention. Futhermore, the rise of AI poses the possibility of certain jobs being substituted in the coming years. This trend is also observed in factories, where robots are gradually replacing human workers. While these developments inspire optimism about increased productivity and efficiency, they also raise concerns and uncertainties.</p>
<p>Looking ahead, it is evident that technology will present greater challenges in the future. However, I remain hopeful that technology, when harnessed responsibly, can contribute to building a happier society that benefits all.</p>
<h2 id="Why-Students-should-be-Encouraged-to-Develop-the-Ability-to-Meet-Challenges"><a href="#Why-Students-should-be-Encouraged-to-Develop-the-Ability-to-Meet-Challenges" class="headerlink" title="Why Students should be Encouraged to Develop the Ability to Meet Challenges"></a>Why Students should be Encouraged to Develop the Ability to Meet Challenges</h2><p><strong>Develop Students’ Ability to Meet Challenges</strong></p>
<p>In today’s rapidly evolving world, students must be encouraged to develop the ability to meet challenges. This essay explores several compelling reasons why students should cultivate this vital skill set. By acquiring the ability to confront and overcome challenges, students will not only survive but thrive in a dynamic and competitive environment.</p>
<p>First and foremost, developing the ability to meet challenges equips students with the necessary skills to adapt to a changing job market. As technological advancements like artificial intelligence reshape industries, traditional jobs are disappearing, and new professions are emerging. By fostering resilience and adaptability, students will be better prepared to navigate these transitions and seize new opportunities.</p>
<p>Furthermore, in today’s interconnected world, interdisciplinary knowledge is crucial. It is no longer sufficient to excel in a single domain; students must also possess a broad range of skills. The ability to meet challenges encourages students to explore diverse subjects, enabling them to approach problems from multiple perspectives. This interdisciplinary mindset enhance their creativity and problem-solving abilities, giving them a competitive edge in their future careers.</p>
<p>In addition to personal benefits, developing the ability to fave challenges contributes to society as a whole. Individuals who are adept at tackling obstacles are more likely to become proactive and productive members of their communities. They possess the determination and drive to overcome hurdles, effect positive change, and make significant contributions to society’s progress.</p>
<p>In conclusion, it is crucial to encourage students to develop the ability to meet challenges. By doing so, they will not only thrive in a rapidly changing world but also contribute to the betterment of society. Equipping students with resilience, adaptability, and interdisciplinary skills prepares them for the future, enabling them to overcome obstacles and seize opportunities with confidence.</p>
]]></content>
      <categories>
        <category>English Learning</category>
      </categories>
  </entry>
  <entry>
    <title>ROS2入门</title>
    <url>/2023/08/30/ROS2%E5%85%A5%E9%97%A8/</url>
    <content><![CDATA[<h2 id="安装ROS2"><a href="#安装ROS2" class="headerlink" title="安装ROS2"></a>安装ROS2</h2><blockquote>
<p>使用wsl2学习ros2, 安装版本为ros2 humble.</p>
</blockquote>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/08/30/ROS2%E5%85%A5%E9%97%A8/fig_3.png"
                      class="" width="600"
                >

<p>在安装过程中, 需要科学上网才能添加gpg公钥, 但是有时候就算翻墙也无法下载, 很有可能是github的一些域名的 DNS 解析被污染, 导致 DNS 解析过程中无法通过域名取得正确的ip地址.</p>
<p>如果忽略这一步继续安装, <code>sudo apt update</code>就会显示如下:</p>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/08/30/ROS2%E5%85%A5%E9%97%A8/fig_1.png"
                      class="" width="600"
                >

<p>确认能够科学上网之后, 仍然出现<code>Connection refused</code>, 则需要重新添加DNS.</p>
<ol>
<li><p>打开<a class="link"   href="https://www.ipaddress.com/" >ip地址查询网站 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>:</p>
</li>
<li><p>输入需要查询的网站名称: raw.githubusercontent.com</p>
</li>
</ol>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/08/30/ROS2%E5%85%A5%E9%97%A8/fig_4.png"
                      class="" width="800"
                >

<ol start="3">
<li><p>记下这里的DNS;</p>
</li>
<li><p>打开系统hosts文件</p>
</li>
</ol>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">sudo vim /etc/hosts</span><br></pre></td></tr></table></figure></div>

<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/08/30/ROS2%E5%85%A5%E9%97%A8/fig_5.png"
                      class="" width="500"
                >

<p>再重新执行一遍添加gpg公钥就可以了.</p>
<p>安装完后进行测试(每次开启之前都要<code>source</code>):</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">source</span> /opt/ros/iron/setup.bash</span><br><span class="line">ros2 run demo_nodes_cpp talker</span><br></pre></td></tr></table></figure></div>

<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/08/30/ROS2%E5%85%A5%E9%97%A8/fig_2.png"
                      class="" width="600"
                >

<h2 id="ROS2的学习"><a href="#ROS2的学习" class="headerlink" title="ROS2的学习"></a>ROS2的学习</h2><p>结合项目与Tutorials来学习ROS2会没有那么枯燥, 但开始之前一定要把Tutorials: Beginner的内容做一遍.</p>
<p>设置一下bash就不用每次都要source了</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;source /opt/ros/iron/setup.bash&quot;</span> &gt;&gt; ~/.bashrc</span><br></pre></td></tr></table></figure></div>
<h3 id="基础概念的学习"><a href="#基础概念的学习" class="headerlink" title="基础概念的学习"></a>基础概念的学习</h3><p>没有接触ros2或者长时间遗忘之后, 需要通过tutorials复习一下简单的概念:</p>
<ul>
<li><p><strong>Workspaces</strong><br>workspaces是ros的一个基本概念, 通俗来说就是一个工作台, 需要打开这个工作台才能进行ros的开发工作, 最底层的工作空间是<code>underlay</code>, 开发的时候可能会不断嵌套工作空间, 叫做<code>overlays</code>.</p>
<blockquote>
<p>“Workspace” is a ROS term for the location on your system where you’re developing with ROS 2. The core ROS 2 workspace is called the underlay. Subsequent local workspaces are called overlays. When developing with ROS 2, you will typically have several workspaces active concurrently.</p>
</blockquote>
</li>
<li><p><strong>ROS_DOMAIN_ID</strong><br>ros中的domain id用于区分同一环境下运行的不同的ROS2系统, </p>
</li>
<li><p><strong>rqt</strong><br>rqt是ros2的一个GUI图形化界面, 可以用来进行ROS服务调用和查看它们的响应, 以及查看topics, 绘制数据等.</p>
</li>
</ul>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/08/30/ROS2%E5%85%A5%E9%97%A8/fig_6.png"
                      class="" width="700"
                >

<p>在<code>Serivice</code>一栏上, 可以调用不同的服务, 最终得到不同的响应结果.</p>
<ul>
<li><strong>Nodes</strong><br>Nodes是ros中最基本的单元, 每个node都可以发送和接收数据.<blockquote>
<p>Each node in ROS should be responsible for a single, modular purpose, e.g. controlling the wheel motors or publishing the sensor data from a laser range-finder. Each node can send and receive data from other nodes via topics, services, actions, or parameters.</p>
</blockquote>
</li>
</ul>
<center><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="gif_1.gif"
                      width = "800"
                ></center>

<p>查看单个node信息</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">ros2 node info &lt;node_name&gt;</span><br></pre></td></tr></table></figure></div>
<p>&lt;% asset_img fig_7.png 600 %&gt;</p>
<ul>
<li><p><strong>Topics</strong></p>
<blockquote>
<p>A node may publish data to any number of topics and simultaneously have subscriptions to any number of topics.</p>
</blockquote>
<center><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="gif_2.gif"
                      width = "800"
                ></center>
</li>
<li><p><strong>Services</strong></p>
<blockquote>
<p>Services are another method of communication for nodes in the ROS graph. Services are based on a call-and-response model versus the publisher-subscriber model of topics.</p>
</blockquote>
</li>
</ul>
<center><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="gif_3.gif"
                      width = "800"
                ></center>



]]></content>
      <categories>
        <category>Robotics</category>
        <category>Software</category>
      </categories>
  </entry>
  <entry>
    <title>RobotStudio控制ABB机械臂</title>
    <url>/2024/09/19/RobotStudio%E6%8E%A7%E5%88%B6ABB%E6%9C%BA%E6%A2%B0%E8%87%82/</url>
    <content><![CDATA[<h2 id="更新插件"><a href="#更新插件" class="headerlink" title="更新插件"></a>更新插件</h2><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2024/09/19/RobotStudio%E6%8E%A7%E5%88%B6ABB%E6%9C%BA%E6%A2%B0%E8%87%82/3.png"
                      class="" width="400"
                >

<p>在<code>Add-Ins</code>中找到RobotWare的插件, 然后在右边选择添加, 右下角会有下载的进度条.</p>
<h2 id="插入ABB机械臂模型"><a href="#插入ABB机械臂模型" class="headerlink" title="插入ABB机械臂模型"></a>插入ABB机械臂模型</h2><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2024/09/19/RobotStudio%E6%8E%A7%E5%88%B6ABB%E6%9C%BA%E6%A2%B0%E8%87%82/1.png"
                      class="" width="400"
                >

<p>在开始页面设置好参数，然后创建机器人；</p>
<p>选择<code>控制器</code>-<code>添加控制器</code></p>
<h2 id="基本控制"><a href="#基本控制" class="headerlink" title="基本控制"></a>基本控制</h2><p>等待机器人加载出来, 通过以下键位进行操作;</p>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2024/09/19/RobotStudio%E6%8E%A7%E5%88%B6ABB%E6%9C%BA%E6%A2%B0%E8%87%82/4.png"
                      class="" width="400"
                >

<ul>
<li><code>Ctrl+Shift+左键</code>可以对页面进行旋转;</li>
<li><code>Ctrl+左键</code>对页面进行平移;</li>
<li><code>鼠标滚轮</code>缩放大小;</li>
</ul>
<p>选择<code>基本</code>-<code>手动关节</code>可以对机器人进行拖动；</p>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2024/09/19/RobotStudio%E6%8E%A7%E5%88%B6ABB%E6%9C%BA%E6%A2%B0%E8%87%82/2.png"
                      class="" width="400"
                >

<p>点击正上方的<code>示教目标点</code>, 生成数个目标点，然后点击添加路径</p>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2024/09/19/RobotStudio%E6%8E%A7%E5%88%B6ABB%E6%9C%BA%E6%A2%B0%E8%87%82/5.png"
                      class="" width="300"
                >

<p>通过左侧的设计树来进行查看目标点和路径, 点击第一个点, 按住<code>Shift</code>, 点击最后一个点, 右键, 选择<code>添加新路径</code>, 生成路径<code>Path_10</code></p>
<p>右键<code>Path_10</code>，选择<code>沿着路径运动</code>, 即可看到路径规划.</p>
<p>如果需要设置目标点的六维坐标, 右键目标点, 选择<code>修改目标</code>-<code>设定位置</code></p>
<h2 id="夹爪控制"><a href="#夹爪控制" class="headerlink" title="夹爪控制"></a>夹爪控制</h2><p>详情见手册;</p>
]]></content>
      <categories>
        <category>Robotics</category>
      </categories>
  </entry>
  <entry>
    <title>Research Investigation</title>
    <url>/2024/07/18/Research-Investigation/</url>
    <content><![CDATA[<h2 id="RA-L"><a href="#RA-L" class="headerlink" title="RA-L"></a>RA-L</h2><h3 id="Dynamic-Viewpoint-Based-Obstacle-Avoidance-of-Robotic-Arms-in-Complex-Environments"><a href="#Dynamic-Viewpoint-Based-Obstacle-Avoidance-of-Robotic-Arms-in-Complex-Environments" class="headerlink" title="Dynamic Viewpoint-Based Obstacle Avoidance of Robotic Arms in Complex Environments"></a>Dynamic Viewpoint-Based Obstacle Avoidance of Robotic Arms in Complex Environments</h3><p>北京化工大学<br>2023<br>RA-L ISRIMT</p>
<p>这篇文章主要是研究一个移动机器人上的机械臂面对动态变化环境的路径规划，提出了一种局部环境构建策略来改进复杂环境中移动探测机器人机械臂的路径规划效率，通过构建局部环境进行路径规划，从而减少不必要的模型构建，提高避障效率。方法是 the axis-aligned boundary box (AABB) based on octree partitioning for collision detection analysis，通过仿真实验验证了这种方法的有效性。</p>
<h2 id="Nature-Machine-Intelligence"><a href="#Nature-Machine-Intelligence" class="headerlink" title="Nature Machine Intelligence"></a>Nature Machine Intelligence</h2><h2 id="IEEE"><a href="#IEEE" class="headerlink" title="IEEE"></a>IEEE</h2><h3 id="Manipulator-Reinforcement-Learning-with-Mask-Processing-Based-on-Residual-Network"><a href="#Manipulator-Reinforcement-Learning-with-Mask-Processing-Based-on-Residual-Network" class="headerlink" title="Manipulator Reinforcement Learning with Mask Processing Based on Residual Network"></a>Manipulator Reinforcement Learning with Mask Processing Based on Residual Network</h3><p>西安电子科技大学<br>2023.5</p>
<p>该文章采用视觉支持的方法，使得UR机械臂能够在随机环境中学习抓取物体的技能，深度强化学习算法可以有效地学习视觉支持映射，以指导机械臂的抓取动作。为了验证设计的算法，本文在CoppeliaSim仿真平台上构建了一个机械臂抓取系统和测试场景。仿真结果表明，深度强化学习算法结合残差网络（ResNet）可以使机械臂获得较高的目标块抓取成功率。实验结果显示，该方法显著提高了机械臂的抓取效率。</p>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2024/07/18/Research-Investigation/fig_3.png"
                      class="" width="600"
                >

<h3 id="Path-Planning-for-Robotic-Manipulator-in-Complex-Multi-Obstacle-Environment-Based-on-Improved-RRT"><a href="#Path-Planning-for-Robotic-Manipulator-in-Complex-Multi-Obstacle-Environment-Based-on-Improved-RRT" class="headerlink" title="Path Planning for Robotic Manipulator in Complex Multi-Obstacle Environment Based on Improved_RRT"></a>Path Planning for Robotic Manipulator in Complex Multi-Obstacle Environment Based on Improved_RRT</h3><p>2022.4<br>IEEE TMECH</p>
<p>本文提出了一种改进的快速随机树（Improved_RRT）方法，用于在复杂障碍环境中为机械臂规划成功且实际可执行的路径。</p>
<p>Improved_RRT方法通过混合约束采样、RRT_Connect与人工势场法结合、自适应引力场、动态步长和新节点约束策略的使用，有效提高了复杂障碍环境中机械臂路径规划的成功率和效率。仿真和实验结果表明，该方法在安全性、路径优化和综合性能方面具有显著优势。</p>
<ol>
<li>Introduction</li>
</ol>
<p>介绍了一些传统的路径规划方法：</p>
<ul>
<li>The particle swarm optimization.</li>
<li>genetic algorithm</li>
<li>APF method</li>
<li>A* algorithm</li>
</ul>
<p>这些传统方法在高维路径中存在一些问题；</p>
<blockquote>
<p>However, when applied to high-dimensional path planning problems, they are time-consuming and fall easily into the problem of local minimum.</p>
</blockquote>
<p>然后是RRT算法，RRT算法因为大大降低了工作空间中障碍物建模不准确而导致的规划时间成本，因此广泛用于机械臂路径规划中；</p>
<p>但是RRT算法也具有收敛慢，容易陷入局部最优等问题；</p>
<p>后人改良的算法有：</p>
<ul>
<li>RRT-Connect</li>
<li>RRT*</li>
<li>HD-RRT*</li>
<li>PGS_RRT*</li>
</ul>
<p>改进后的Improved_RRT算法有三个创新点：</p>
<ul>
<li><p>采用混合约束采样代替原来的随机采样，得到的节点分布更接近障碍物之间的可通过区域，改进了RRT_Connect方法；</p>
<blockquote>
<p>Using hybrid constrained sampling instead of the original random sampling, the node distribution obtained by sampling is close to the passable area between obstacle;</p>
</blockquote>
</li>
<li><p>采用双竞争树和动态目标点，同时提出新的自适应步长和新的节点约束策略，减少了过度的探索和碰撞区域扩展；</p>
<blockquote>
<p>The method of double-competition tree and dynamic target points is used in the expansion. At the same time, an adaptive step size and new node constraint strategy are proposed.</p>
</blockquote>
</li>
<li><p>动态运动规划适用于不同的场景，并且优化了算法适用于各种实际场景；</p>
</li>
</ul>
<ol start="2">
<li>Collision Detection</li>
</ol>
<p>采用 Flexible collision library (FCL) 进行碰撞检测，FCL是一种高效的碰撞检测库，可以检测机械臂的碰撞。</p>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2024/07/18/Research-Investigation/fig_4.png"
                      class="" width="400"
                >

<p>这个碰撞检测的实现是通过线，点和曲面的碰撞检测；</p>
<ol start="3">
<li>Hybrid Constrained Sampling</li>
</ol>
<p>在n维空间中采用高斯混合模型进行约束采样，得到的节点分布更接近障碍物之间的可通过区域，该文章在此基础上再进行了优化，得到了 hybrid constrained sampling.</p>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2024/07/18/Research-Investigation/fig_5.png"
                      class="" width="400"
                >


<ol start="4">
<li>Adjacent Node Expansion</li>
</ol>
<p>Standard RRT_Connect 算法的节点扩展速度非常慢</p>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2024/07/18/Research-Investigation/fig_6.png"
                      class="" width="400"
                >

<ol start="5">
<li>Optimization &amp; Experimental Verification</li>
</ol>
<p>这一步的优化中解决了三个问题：</p>
<ul>
<li>路径规划中的局部极小值<ul>
<li>通过基于虚拟目标点的方法，使得机械臂逃脱局部极小值约束；</li>
</ul>
</li>
<li>在动态环境下的路径规划，常会遇到动态障碍物和路径中的奇异点，会对路径的稳定性和规划效率产生影响；<ul>
<li>改进动态路径规划算法，主要是局部重新规划和双树搜索策略，避免局部极小值点</li>
</ul>
</li>
<li>路径规划过程中可能会生成一些不必要的中间路径点，导致路径振荡，尤其是在起点和终点附近的障碍物区域。<ul>
<li>路径规划过程中可能会生成一些不必要的中间路径点，导致路径振荡，尤其是在起点和终点附近的障碍物区域。</li>
</ul>
</li>
</ul>
<p>改进之后的算法效果</p>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2024/07/18/Research-Investigation/fig_8.png"
                      class="" width="900"
                >

<p>实际实验结果</p>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2024/07/18/Research-Investigation/fig_7.png"
                      class="" width="300"
                >


<h3 id="Optimizing-7-DOF-Robot-Manipulator-Path-Using-Deep-Reinforcement-Learning-Techniques"><a href="#Optimizing-7-DOF-Robot-Manipulator-Path-Using-Deep-Reinforcement-Learning-Techniques" class="headerlink" title="Optimizing 7-DOF Robot Manipulator Path Using Deep Reinforcement Learning Techniques"></a>Optimizing 7-DOF Robot Manipulator Path Using Deep Reinforcement Learning Techniques</h3><p>IEEE International Symposium on Robotic and Sensors Environments (ROSE)</p>
<p>Machine Learning Department, MBZUAI, UAE</p>
<p>2024.7</p>
<p>探讨了三种不同的深度强化学习（DRL）方法：Deep Q-Network (DQN), Actor-Critic (AC), and Proximal Policy Optimization (PPO)，以优化7自由度（7-DOF）机器人机械臂（特别是Kinova Jaco辅助机器人）的路径规划。</p>
<p>通过仿真验证了这三种方法在静态环境中的路径规划能力。</p>
<p>结果显示，PPO在复杂环境中表现最为优越，能够更稳定地找到平滑的无障碍路径，而DQN和AC的表现稍逊一筹。</p>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2024/07/18/Research-Investigation/fig_10.png"
                      class="" width="600"
                >]]></content>
      <categories>
        <category>Scientific Research</category>
      </categories>
  </entry>
  <entry>
    <title>Vscode开发环境搭建</title>
    <url>/2024/09/14/Vscode%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</url>
    <content><![CDATA[<h2 id="Vscode-CMake-开发cpp"><a href="#Vscode-CMake-开发cpp" class="headerlink" title="Vscode + CMake 开发cpp"></a>Vscode + CMake 开发cpp</h2><h3 id="基本组件安装"><a href="#基本组件安装" class="headerlink" title="基本组件安装"></a>基本组件安装</h3><p>Vscode, Cmake均在官网进行安装;</p>
<p><a class="link"   href="https://cmake.org/download/" >CMake <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p>注意要安装Windows的x64版本,选择.msi的文件进行下载和安装;</p>
<p>需要将CMake添加到Path(默认选项);</p>
<p>在vscode中安装<code>CMake</code>, <code>CMake Tools</code>, <code>C++</code>等相关插件;</p>
<h3 id="安装编译器并且配置环境"><a href="#安装编译器并且配置环境" class="headerlink" title="安装编译器并且配置环境"></a>安装编译器并且配置环境</h3><p>参考教程:</p>
<p><a class="link"   href="https://code.visualstudio.com/docs/cpp/config-mingw" >Using GCC with MinGW <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p>安装MSYS2</p>
<p><a class="link"   href="https://github.com/msys2/msys2-installer/releases/download/2024-01-13/msys2-x86_64-20240113.exe" >MSYS32 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p>点击完成之后会生成终端, 输入:</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">pacman -S --needed base-devel mingw-w64-ucrt-x86_64-toolchain</span><br></pre></td></tr></table></figure></div>
<p>中间按<code>Enter</code>默认安装;</p>
<p>然后将<code>C:\msys64\mingw64\bin</code>添加到系统环境变量中;</p>
<p>测试:</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">gcc --version</span><br><span class="line">g++ --version</span><br><span class="line">gdb --version</span><br></pre></td></tr></table></figure></div>

<p>如果需要对编译器进行更新, 同样先启动MSYS2终端, 然后输入:</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">pacman -Suy</span><br></pre></td></tr></table></figure></div>

<p>vscode需要重启才能刷新环境变量, 因此安装完组件和添加路径之后一定要重新启动vscode(在vscode的终端中检查cmake, gcc等组件是否能够正常使用);</p>
<h3 id="Hello-World测试"><a href="#Hello-World测试" class="headerlink" title="Hello World测试"></a>Hello World测试</h3><p>通过<code>Ctrl+Shift+P</code>打开命令面板, 输入<code>CMake: Quick Start</code>, 输入工程名<code>hello_world</code>, 然后选择:</p>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2024/09/14/Vscode%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/2.png"
                      class="" width="500"
                >

<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2024/09/14/Vscode%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/3.png"
                      class="" width="500"
                >

<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2024/09/14/Vscode%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/4.png"
                      class="" width="500"
                >

<p>一定要选择对应的编译器, 不然CMake Tools会报错:配置失败;</p>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2024/09/14/Vscode%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/5.png"
                      class="" width="500"
                >

<p>该步骤会生成<code>CMakePresets.json</code>文件, 里面包含编译器的路径, 最后点击<code>Enter</code>确认;</p>
<div class="highlight-container" data-rel="Json"><figure class="iseeu highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;version&quot;</span><span class="punctuation">:</span> <span class="number">8</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;configurePresets&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;GCC 13.1.0 x86_64-w64-mingw32 (ucrt64)&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;displayName&quot;</span><span class="punctuation">:</span> <span class="string">&quot;GCC 13.1.0 x86_64-w64-mingw32 (ucrt64)&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;使用编译器: C = D:\\msys64\\ucrt64\\bin\\gcc.exe, CXX = D:\\msys64\\ucrt64\\bin\\g++.exe&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;generator&quot;</span><span class="punctuation">:</span> <span class="string">&quot;MinGW Makefiles&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;binaryDir&quot;</span><span class="punctuation">:</span> <span class="string">&quot;$&#123;sourceDir&#125;/out/build/$&#123;presetName&#125;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;cacheVariables&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;CMAKE_INSTALL_PREFIX&quot;</span><span class="punctuation">:</span> <span class="string">&quot;$&#123;sourceDir&#125;/out/install/$&#123;presetName&#125;&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;CMAKE_C_COMPILER&quot;</span><span class="punctuation">:</span> <span class="string">&quot;D:/msys64/ucrt64/bin/gcc.exe&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;CMAKE_CXX_COMPILER&quot;</span><span class="punctuation">:</span> <span class="string">&quot;D:/msys64/ucrt64/bin/g++.exe&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;CMAKE_BUILD_TYPE&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Debug&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure></div>

<p>在底部有调试和运行按钮, 分别点击这两个按钮, 然后进入hello_world.exe的终端, 即<code>build</code>目录, 输入:</p>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2024/09/14/Vscode%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/7.png"
                      class="" width="500"
                >

<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">./hello_world.exe</span><br></pre></td></tr></table></figure></div>

<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2024/09/14/Vscode%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/6.png"
                      class="" width="500"
                >


<h2 id="Vscode-ssh-X11-可视化开发"><a href="#Vscode-ssh-X11-可视化开发" class="headerlink" title="Vscode + ssh + X11 可视化开发"></a>Vscode + ssh + X11 可视化开发</h2><h3 id="下载安装X11-server"><a href="#下载安装X11-server" class="headerlink" title="下载安装X11 server"></a>下载安装X11 server</h3><p><a class="link"   href="https://sourceforge.net/projects/vcxsrv/" >VcXsrv Windows X Server <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br><a class="link"   href="https://sourceforge.net/projects/xming/" >Xming X Server for Windows <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p>安装完成之后打开<code>XLaunch</code>，选择<code>Multiple windows</code>，<code>Start no client</code>，Extra settings选择前两个选项，完成后保存配置文件。</p>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2024/09/14/Vscode%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/fig_1.png"
                      class="" width="400"
                >


<h3 id="设置系统变量"><a href="#设置系统变量" class="headerlink" title="设置系统变量"></a>设置系统变量</h3><ul>
<li><p>Windows客户端</p>
<ul>
<li>打开<code>powershell</code>, 输入<code>setx DISPLAY &quot;127.0.0.1:0.0&quot;</code>, 然后重启终端;</li>
<li>在终端输入<code>echo $env:DISPLAY</code>来验证, 输出为<code>127.0.0.1:0.0</code>即为成功.;</li>
</ul>
</li>
<li><p>Linux服务器</p>
<ul>
<li>在<code>~/.bashrc</code>中添加<code>export DISPLAY=&quot;localhost:10.0&quot;</code>, 然后<code>source ~/.bashrc</code>;</li>
<li>在终端输入<code>echo $DISPLAY</code>来验证, 输出为<code>localhost:10.0</code>即为成功.;</li>
</ul>
</li>
</ul>
<h3 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h3><p>在vscode中修改ssh配置文件</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">Host 10.30.47.11</span><br><span class="line">  HostName 10.30.47.11</span><br><span class="line">  User amdt</span><br><span class="line">  ForwardAgent yes</span><br><span class="line">  ForwardX11 yes</span><br><span class="line">  ForwardX11Trusted yes</span><br></pre></td></tr></table></figure></div>

<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2024/09/14/Vscode%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/fig_2.png"
                      class="" width="800"
                >

<h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><p>连接后在终端输入</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">xclock</span><br><span class="line">xeyes</span><br><span class="line">xcalc</span><br></pre></td></tr></table></figure></div>
<p>即可打开GUI界面.</p>
<h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ul>
<li><a class="link"   href="https://code.visualstudio.com/docs/cpp/config-mingw" >Using GCC with MinGW <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://blog.csdn.net/qq_37103755/article/details/128453185" >04-vscode搭建cmake的编译环境 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://zhuanlan.zhihu.com/p/677592053" >QT开发 2024最新版本优雅的使用vscode开发QT <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://blog.csdn.net/Stone_hello/article/details/120041495" >vscode远程连接服务器+X11插件图形化界面 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://blog.dengqi.org/posts/%E4%BD%BF%E7%94%A8-windows-%E8%87%AA%E5%B8%A6ssh%E7%9A%84x11%E8%BD%AC%E5%8F%91%E5%8A%9F%E8%83%BD%E5%B9%B6%E9%85%8D%E7%BD%AEssh%E5%92%8Cvscode/#:~:text=%E4%BD%BF%E7%94%A8" >使用 Windows 自带 ssh 的 X11转发功能并配置 ssh 和 VSCode <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
</ul>
]]></content>
      <categories>
        <category>Basic Computer Programming</category>
      </categories>
  </entry>
  <entry>
    <title>Webots 入门</title>
    <url>/2023/07/27/Webots-%E5%85%A5%E9%97%A8/</url>
    <content><![CDATA[<h2 id="为什么用Webots"><a href="#为什么用Webots" class="headerlink" title="为什么用Webots"></a>为什么用Webots</h2><p><a class="link"   href="https://www.guyuehome.com/8218" >到底应该使用哪款仿真器来仿真我的机器人 - 古月居 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p>一言以蔽之，Webots相对而言更加适合移动机器人，同时上手难度更低，更适合作为我们战队的零基础入门学习。之前在战队的时候，尝试推行该软件，由于该软件需要机械组的队员和电控组的队员协作，同时大家也没有学习仿真器的基础。因此很难推行起来。</p>
<h2 id="安装和使用教程"><a href="#安装和使用教程" class="headerlink" title="安装和使用教程"></a>安装和使用教程</h2><p>官网安装即可；<br><a class="link"   href="https://www.cyberbotics.com/" >Webots: robot simulator <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p>通过官方文档快速学习；<br><a class="link"   href="https://www.cyberbotics.com/doc/guide/index" >Documentation <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<h2 id="Controller-in-vscode"><a href="#Controller-in-vscode" class="headerlink" title="Controller in vscode"></a>Controller in vscode</h2><p>webots本身的IDE并不好用，而我习惯使用vscode（copilot和chatgpt都帮我写完啦），同时也可以使用两个屏幕写，vscode利用cmake对webots的controller进行编译，从而将controller的代码工作迁移到vscode中。</p>
<p>安装这两个插件，同时安装CMake并且添加到路径：</p>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/07/27/Webots-%E5%85%A5%E9%97%A8/fig_2.png"
                      class="" width="300"
                >

<p>打开vscode设置，修改<code>setting.json</code>文件，添加以下部分:</p>
<div class="highlight-container" data-rel="Json"><figure class="iseeu highlight json"><table><tr><td class="code"><pre><span class="line"><span class="attr">&quot;cmake.preferredGenerators&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="string">&quot;MinGW Makefiles&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;cmake.configureOnOpen&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br></pre></td></tr></table></figure></div>
<p>建议使用webots的compiler作为cmake的generator;<br>用Everything打开<code>cmake-tools-kits.json</code>文件，加入以下部分</p>
<div class="highlight-container" data-rel="Json"><figure class="iseeu highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;My Compiler Kit&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;compilers&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;C&quot;</span><span class="punctuation">:</span> <span class="string">&quot;D:/Program Files/Webots/msys64/mingw64/bin/gcc.exe&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;CXX&quot;</span><span class="punctuation">:</span> <span class="string">&quot;D:/Program Files/Webots/msys64/mingw64/bin/g++.exe&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br></pre></td></tr></table></figure></div>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/07/27/Webots-%E5%85%A5%E9%97%A8/fig_3.png"
                      class="" width="600"
                >

<p>新建一个controller，选择<code>Webots(gcc/Makefile)</code>，用vscode打开文件夹，删去<code>MakeFile</code>文件，新建<code>CMakeLists.txt</code>，将下列内容直接复制过去即可。</p>
<p>CMakeLists.txt模板：</p>
<div class="highlight-container" data-rel="Cmake"><figure class="iseeu highlight cmake"><table><tr><td class="code"><pre><span class="line"><span class="keyword">cmake_minimum_required</span>(VERSION <span class="number">3.25</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># set the name of the project</span></span><br><span class="line"><span class="keyword">get_filename_component</span>(<span class="keyword">PROJECT</span> <span class="variable">$&#123;CMAKE_SOURCE_DIR&#125;</span> NAME)</span><br><span class="line"><span class="keyword">project</span>(<span class="variable">$&#123;PROJECT&#125;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Get C or C++ sources in the current directory</span></span><br><span class="line"><span class="keyword">file</span>(GLOB C_SOURCES *.c)</span><br><span class="line"><span class="keyword">file</span>(GLOB CPP_SOURCES *.cpp)</span><br><span class="line"><span class="keyword">set</span>(SOURCES <span class="variable">$&#123;C_SOURCES&#125;</span> <span class="variable">$&#123;CPP_SOURCES&#125;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Set the Webots home path (change it according to your installation method)</span></span><br><span class="line"><span class="comment"># Remember to use &quot;/&quot; instead of &quot;\&quot; which paste from the directory</span></span><br><span class="line"><span class="keyword">set</span>(WEBOTS_HOME <span class="string">&quot;D:/Program Files/Webots&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Link with the Webots controller library.</span></span><br><span class="line"><span class="keyword">link_directories</span>($ENV&#123;WEBOTS_HOME&#125;/lib/controller)</span><br><span class="line"></span><br><span class="line"><span class="keyword">set</span> (LIBRARIES <span class="variable">$&#123;CMAKE_SHARED_LIBRARY_PREFIX&#125;</span>Controller<span class="variable">$&#123;CMAKE_SHARED_LIBRARY_SUFFIX&#125;</span>)</span><br><span class="line"><span class="keyword">include_directories</span>($ENV&#123;WEBOTS_HOME&#125;/<span class="keyword">include</span>/controller/c/webots $ENV&#123;WEBOTS_HOME&#125;/<span class="keyword">include</span>/controller/cpp/webots)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Setup the target executable.</span></span><br><span class="line"><span class="keyword">add_executable</span>(<span class="variable">$&#123;PROJECT&#125;</span> <span class="variable">$&#123;SOURCES&#125;</span>)</span><br><span class="line"><span class="keyword">target_link_libraries</span>(<span class="variable">$&#123;PROJECT&#125;</span> <span class="variable">$&#123;LIBRARIES&#125;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Copy the target executable at the right location.</span></span><br><span class="line"><span class="keyword">add_custom_command</span>(<span class="keyword">TARGET</span> <span class="variable">$&#123;PROJECT&#125;</span> POST_BUILD <span class="keyword">COMMAND</span> <span class="variable">$&#123;CMAKE_COMMAND&#125;</span> -E copy $&lt;TARGET_FILE:<span class="variable">$&#123;PROJECT&#125;</span>&gt; <span class="variable">$&#123;CMAKE_BINARY_DIR&#125;</span>/../)</span><br></pre></td></tr></table></figure></div>

<p><code>Ctrl+Shift+P</code>，选择这个编译器（CMakeLists中指定的编译器）</p>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/07/27/Webots-%E5%85%A5%E9%97%A8/fig_1.png"
                      class="" width="800"
                >


  <div class="note p-4 mb-4 rounded-small info">
    <p>💡在配置环境中，可能由于CMake Tools这个插件的版本不太稳定，导致一直找不到对应的generator，重装该插件之后重启vscode可以解决问题，切忌不要手动安装。</p>

  </div>

<p>代码完成后，先进行一次<code>Configure</code>对环境进行配置，然后再进行<code>Build</code>编译，修改代码后继续<code>Build</code>即可。</p>
<p>(由于工具链冲突，有可能会弹出<code>配置IntelliSense</code>，选择<code>MakeFile Tool</code>还是<code>CMake Tool</code>，选择后者即可)</p>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/07/27/Webots-%E5%85%A5%E9%97%A8/fig_9.png"
                      class="" width="600"
                >


<p>最后生成<code>.exe</code>的可执行文件，在webots中选择对应的controller即可开始仿真。</p>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/07/27/Webots-%E5%85%A5%E9%97%A8/fig_4.png"
                      class="" width="300"
                >

<h2 id="PROTO的制作"><a href="#PROTO的制作" class="headerlink" title="PROTO的制作"></a>PROTO的制作</h2><p>Webots里面可以通过创建一个PROTO file来引入一些机器人和场地道具，避免了一些重复造轮子的工作。</p>
<h2 id="Solidworks导入模型"><a href="#Solidworks导入模型" class="headerlink" title="Solidworks导入模型"></a>Solidworks导入模型</h2><p>在新版的webots中，不能像往常一样直接导入VRML97模型，导致插入Solidworks的图纸比较麻烦，因此在机器人的设计过程中，尽量通过简化模型，使用webots自带的几何体来进行代替。</p>
<h2 id="入门练习"><a href="#入门练习" class="headerlink" title="入门练习"></a>入门练习</h2><p>第一次学习或者很久没使用，应该跟着官方文档的Turorials过一遍。或者哪些内容忘记了，跟着对应的Tutorial过一遍。</p>
<p><a class="link"   href="https://www.cyberbotics.com/doc/guide/tutorials" >Tutorials <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<h3 id="麦轮底盘控制器（详细）"><a href="#麦轮底盘控制器（详细）" class="headerlink" title="麦轮底盘控制器（详细）"></a>麦轮底盘控制器（详细）</h3><p>由于麦轮建模非常复杂，因此可以拿webots自带的麦轮底盘进行修改。我们这里尝试写一个<br>controller，使得其可以通过键盘控制全向移动，以此来快速上手。</p>
<p>这个Fabtino本身也自带一个键盘控制器，我们做一个更符合比赛一个控制器。</p>
<ol>
<li>创建一个新的项目：<code>File -&gt; New -&gt; New Project Directory...</code>；</li>
<li>新建一个工程文件夹：<code>D:\webots_project\macanum_control</code>，world name相同；</li>
<li>勾选<code>Add a rectangle arena</code>；</li>
</ol>
<p>修改节点<code>RectangleArena &quot;rectangle arena&quot;</code>，使其尽量大一点；</p>
<p>左上添加节点按钮或者<code>Ctrl+Shift+A</code>，添加机器人<code>Fabtino</code>。</p>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/07/27/Webots-%E5%85%A5%E9%97%A8/fig_5.png"
                      class="" width="400"
                >

<p>修改<code>WorldInfo</code>, 使其适合麦轮的仿真环境。</p>
<p><code>WorldInfo</code>-&gt;<code>contactProperties</code>添加两个<code>ContactProperties</code>；</p>
<p>设置如下：</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">contactProperties [</span><br><span class="line">  ContactProperties &#123;</span><br><span class="line">    material1 &quot;InteriorWheelMat&quot;</span><br><span class="line">    coulombFriction [</span><br><span class="line">      0, 2, 0</span><br><span class="line">    ]</span><br><span class="line">    frictionRotation -0.785398 0</span><br><span class="line">    bounce 0</span><br><span class="line">    forceDependentSlip [</span><br><span class="line">      10, 0</span><br><span class="line">    ]</span><br><span class="line">    softCFM 0.0001</span><br><span class="line">  &#125;</span><br><span class="line">  ContactProperties &#123;</span><br><span class="line">    material1 &quot;ExteriorWheelMat&quot;</span><br><span class="line">    coulombFriction [</span><br><span class="line">      0, 2, 0</span><br><span class="line">    ]</span><br><span class="line">    frictionRotation 0.785398 0</span><br><span class="line">    bounce 0</span><br><span class="line">    forceDependentSlip [</span><br><span class="line">      10, 0</span><br><span class="line">    ]</span><br><span class="line">    softCFM 0.0001</span><br><span class="line">  &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure></div>

<div style="display: flex; align-items: center;">
    <div style="flex: 50%; padding: 5px;">
        <img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/07/27/Webots-%E5%85%A5%E9%97%A8/fig_6.png"
                      class="" width="400"
                >
    </div>
    <div style="flex: 50%; padding: 5px;">
        <img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/07/27/Webots-%E5%85%A5%E9%97%A8/fig_7.png"
                      class="" width="400"
                >
    </div>
</div>


  <div class="note p-4 mb-4 rounded-small info">
    <p>在<a class="link"   href="https://webots.cloud/proto?keyword=robot" >webots.cloud <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>中，我们可以找到更多的机器人及其说明文档。</p>

  </div>

<p>这里写一个简易控制器，来使得麦轮底盘进行全向移动；</p>
<ol>
<li>贴标签（和指针一个道理）<br>利用Webots中的API:<code>WbDeviceTag</code>对电机或者传感器贴标签，以方便在后续的调试中直接调用。利用<code>wb_robot_get_device</code>函数将标签指定到对应名字的电机或者传感器上（后面统一称为设备）。<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line">WbDeviceTag left_motor = wb_robot_get_device(<span class="string">&quot;left wheel motor&quot;</span>);</span><br><span class="line">WbDeviceTag right_motor = wb_robot_get_device(<span class="string">&quot;right wheel motor&quot;</span>);</span><br><span class="line"><span class="comment">// 后面均用left_motro和right_motor来代替指定设备</span></span><br></pre></td></tr></table></figure></div></li>
<li>设置位置<br>利用<code>wb_motor_set_position()</code>设置四个轮子的位置。<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line">wb_motor_set_position(left_motor, INFINITY);</span><br><span class="line">wb_motor_set_position(right_motor, INFINITY);</span><br></pre></td></tr></table></figure></div></li>
<li>设置键鼠逻辑</li>
</ol>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/07/27/Webots-%E5%85%A5%E9%97%A8/fig_8.png"
                      class="" width="600"
                >

<p>完整代码：</p>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;robot.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;motor.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;keyboard.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> TIME_STEP 64</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span> **argv)</span> &#123;</span><br><span class="line">    wb_robot_init();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// a references to the mecanum wheels</span></span><br><span class="line">    WbDeviceTag motor_fl = wb_robot_get_device(<span class="string">&quot;front_left_wheel_joint&quot;</span>);</span><br><span class="line">    WbDeviceTag motor_fr = wb_robot_get_device(<span class="string">&quot;front_right_wheel_joint&quot;</span>);</span><br><span class="line">    WbDeviceTag motor_bl = wb_robot_get_device(<span class="string">&quot;back_left_wheel_joint&quot;</span>);</span><br><span class="line">    WbDeviceTag motor_br = wb_robot_get_device(<span class="string">&quot;back_right_wheel_joint&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// set velocity, poistion set to infinitiy.</span></span><br><span class="line">    wb_motor_set_position(motor_fl, INFINITY);</span><br><span class="line">    wb_motor_set_position(motor_fr, INFINITY);</span><br><span class="line">    wb_motor_set_position(motor_bl, INFINITY);</span><br><span class="line">    wb_motor_set_position(motor_br, INFINITY);</span><br><span class="line"></span><br><span class="line">    <span class="type">double</span> motor_speed[<span class="number">4</span>] = &#123;<span class="number">0.0</span>, <span class="number">0.0</span>, <span class="number">0.0</span>, <span class="number">0.0</span>&#125;;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Enable the keyboard</span></span><br><span class="line">    wb_keyboard_enable(TIME_STEP);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (wb_robot_step(TIME_STEP) != <span class="number">-1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> key = wb_keyboard_get_key();</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> v = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (key == WB_KEYBOARD_UP)</span><br><span class="line">        &#123;</span><br><span class="line">            wb_motor_set_velocity(motor_fl, v);</span><br><span class="line">            wb_motor_set_velocity(motor_fr, v);</span><br><span class="line">            wb_motor_set_velocity(motor_bl, v);</span><br><span class="line">            wb_motor_set_velocity(motor_br, v);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (key == WB_KEYBOARD_DOWN)</span><br><span class="line">        &#123;</span><br><span class="line">            wb_motor_set_velocity(motor_fl, -v);</span><br><span class="line">            wb_motor_set_velocity(motor_fr, -v);</span><br><span class="line">            wb_motor_set_velocity(motor_bl, -v);</span><br><span class="line">            wb_motor_set_velocity(motor_br, -v);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (key == WB_KEYBOARD_RIGHT)</span><br><span class="line">        &#123;</span><br><span class="line">            wb_motor_set_velocity(motor_fl, v);</span><br><span class="line">            wb_motor_set_velocity(motor_fr, -v);</span><br><span class="line">            wb_motor_set_velocity(motor_bl, -v);</span><br><span class="line">            wb_motor_set_velocity(motor_br, v);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (key == WB_KEYBOARD_LEFT)</span><br><span class="line">        &#123;</span><br><span class="line">            wb_motor_set_velocity(motor_fl, -v);</span><br><span class="line">            wb_motor_set_velocity(motor_fr, v);</span><br><span class="line">            wb_motor_set_velocity(motor_bl, v);</span><br><span class="line">            wb_motor_set_velocity(motor_br, -v);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (key == WB_KEYBOARD_PAGEUP)</span><br><span class="line">        &#123;</span><br><span class="line">            wb_motor_set_velocity(motor_fl, -v);</span><br><span class="line">            wb_motor_set_velocity(motor_fr, v);</span><br><span class="line">            wb_motor_set_velocity(motor_bl, -v);</span><br><span class="line">            wb_motor_set_velocity(motor_br, v);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (key == WB_KEYBOARD_PAGEDOWN)</span><br><span class="line">        &#123;</span><br><span class="line">            wb_motor_set_velocity(motor_fl, v);</span><br><span class="line">            wb_motor_set_velocity(motor_fr, -v);</span><br><span class="line">            wb_motor_set_velocity(motor_bl, v);</span><br><span class="line">            wb_motor_set_velocity(motor_br, -v);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            wb_motor_set_velocity(motor_fl, <span class="number">0</span>);</span><br><span class="line">            wb_motor_set_velocity(motor_fr, <span class="number">0</span>);</span><br><span class="line">            wb_motor_set_velocity(motor_bl, <span class="number">0</span>);</span><br><span class="line">            wb_motor_set_velocity(motor_br, <span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    wb_robot_cleanup();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<h3 id="自动避障小车"><a href="#自动避障小车" class="headerlink" title="自动避障小车"></a>自动避障小车</h3><p>新建一个project，名字为<code>collision_avoidance</code>，添加<code>e-puck</code>机器人和随地放置一些木箱<code>WoodenBox</code>。</p>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/07/27/Webots-%E5%85%A5%E9%97%A8/fig_10.png"
                      class="" width="500"
                >

<p>编写controller<code>epuck_avoid_collision</code></p>
<p>完整代码如下：</p>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;robot.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;distance_sensor.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;motor.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta"># <span class="keyword">define</span> TIME_STEP 64</span></span><br><span class="line"></span><br><span class="line"><span class="meta"># <span class="keyword">define</span> MAX_SPEED 6.28</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// entry point of the controller</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span> **argv)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="comment">// initialize the Webots API</span></span><br><span class="line">  wb_robot_init();</span><br><span class="line"></span><br><span class="line">  <span class="comment">// initialize devices</span></span><br><span class="line">  <span class="type">int</span> i;</span><br><span class="line">  WbDeviceTag ps[<span class="number">8</span>];</span><br><span class="line"></span><br><span class="line">  <span class="type">char</span> ps_names[<span class="number">8</span>][<span class="number">4</span>] = &#123;</span><br><span class="line">    <span class="string">&quot;ps0&quot;</span>, <span class="string">&quot;ps1&quot;</span>, <span class="string">&quot;ps2&quot;</span>, <span class="string">&quot;ps3&quot;</span>,</span><br><span class="line">    <span class="string">&quot;ps4&quot;</span>, <span class="string">&quot;ps5&quot;</span>, <span class="string">&quot;ps6&quot;</span>, <span class="string">&quot;ps7&quot;</span></span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">8</span>; i++)</span><br><span class="line">  &#123;</span><br><span class="line">    ps[i] = wb_robot_get_device(ps_names[i]);</span><br><span class="line">    wb_distance_sensor_enable(ps[i], TIME_STEP);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  WbDeviceTag left_motor = wb_robot_get_device(<span class="string">&quot;left wheel motor&quot;</span>);</span><br><span class="line">  WbDeviceTag right_motor = wb_robot_get_device(<span class="string">&quot;right wheel motor&quot;</span>);</span><br><span class="line"></span><br><span class="line">  wb_motor_set_position(left_motor, INFINITY);</span><br><span class="line">  wb_motor_set_position(right_motor, INFINITY);</span><br><span class="line"></span><br><span class="line">  wb_motor_set_velocity(left_motor, <span class="number">0.0</span>);</span><br><span class="line">  wb_motor_set_velocity(right_motor, <span class="number">0.0</span>);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">while</span> (wb_robot_step(TIME_STEP) != <span class="number">-1</span>)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="comment">// read sensors outputs</span></span><br><span class="line">    <span class="type">double</span> ps_values[<span class="number">8</span>];</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">8</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">      ps_values[i] = wb_distance_sensor_get_value(ps[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// detect obstacles</span></span><br><span class="line">    <span class="type">bool</span> right_obstacle = </span><br><span class="line">    ps_values[<span class="number">0</span>] &gt; <span class="number">80.0</span> ||</span><br><span class="line">    ps_values[<span class="number">1</span>] &gt; <span class="number">80.0</span> ||</span><br><span class="line">    ps_values[<span class="number">2</span>] &gt; <span class="number">80.0</span>;</span><br><span class="line">    <span class="type">bool</span> left_obstacle =</span><br><span class="line">    ps_values[<span class="number">5</span>] &gt; <span class="number">80.0</span> ||</span><br><span class="line">    ps_values[<span class="number">6</span>] &gt; <span class="number">80.0</span> ||</span><br><span class="line">    ps_values[<span class="number">7</span>] &gt; <span class="number">80.0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// initialize motor speeds at 50% of MAX_SPEED</span></span><br><span class="line">    <span class="type">double</span> left_speed = <span class="number">0.8</span> * MAX_SPEED;</span><br><span class="line">    <span class="type">double</span> right_speed = <span class="number">0.8</span> * MAX_SPEED;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// modify speeds according to obstacles</span></span><br><span class="line">    <span class="keyword">if</span> (left_obstacle)</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="comment">// turn right</span></span><br><span class="line">      left_speed = <span class="number">0.8</span> * MAX_SPEED;</span><br><span class="line">      right_speed = <span class="number">-0.8</span> * MAX_SPEED;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (right_obstacle)</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="comment">// turn left</span></span><br><span class="line">      left_speed = <span class="number">-0.8</span> * MAX_SPEED;</span><br><span class="line">      right_speed = <span class="number">0.8</span> * MAX_SPEED;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// write actuators inputs</span></span><br><span class="line">    wb_motor_set_velocity(left_motor, left_speed);</span><br><span class="line">    wb_motor_set_velocity(right_motor, right_speed);</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// cleanup the Webots API</span></span><br><span class="line">  wb_robot_cleanup();</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<p>将e-puck机器人的controller替换为<code>epuck_avoid_collision</code>，运行仿真即可。</p>
<h3 id="小车倒立摆模型搭建"><a href="#小车倒立摆模型搭建" class="headerlink" title="小车倒立摆模型搭建"></a>小车倒立摆模型搭建</h3><p>在webots中，通常一个机器人是一个Robot nodes, Robot nodes再由很多Solid nodes组成, 不同的Solid nodes由Joint nodes连接而成, 常用HingeJoint来连接不同的solid nodes, 即转动副;</p>
<p>节点关系图如下：</p>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/07/27/Webots-%E5%85%A5%E9%97%A8/fig_15.png"
                      class="" width="500"
                >

<p>先在场景中创建一个Robot节点, 然后添加其物理属性, 密度和质量更改其一即可, 另外一个为-1</p>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/07/27/Webots-%E5%85%A5%E9%97%A8/fig_11.png"
                      class="" width="200"
                >

<p>在Robot_children下添加一个Shape, 设置appearance和geometry, geometry选择Box即可;</p>
<p>对shape进行命名, 然后添加boundingObject, 选择<code>USE</code>里面的Shape;</p>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/07/27/Webots-%E5%85%A5%E9%97%A8/fig_12.png"
                      class="" width="300"
                >

<p>这样就画好小车的主体了:</p>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/07/27/Webots-%E5%85%A5%E9%97%A8/fig_13.png"
                      class="" width="400"
                >

<p>在Robot_children下添加1个HingeJoint, 添加第一项参数HingeJointParameters, 修改其中的<code>anchor</code>, 作为转动副的锚点;</p>
<p>所有的设计参数都可以参照这个坐标系的尺寸：（在画一个机器人必须先用笛卡尔坐标系对其建模，以方便填写参数）</p>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/07/27/Webots-%E5%85%A5%E9%97%A8/fig_14.png"
                      class="" width="500"
                >

<p>转动副Anchor设置参考图：</p>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/07/27/Webots-%E5%85%A5%E9%97%A8/fig_16.png"
                      class="" width="400"
                >

<p>第二项device添加电机<code>RotationalMotor</code>, 修改名字为motor_1;</p>
<p>在endPoint中添加Solid节点, 并对其命名为wheel</p>
<h2 id="Webots的不足"><a href="#Webots的不足" class="headerlink" title="Webots的不足"></a>Webots的不足</h2><p>Webots作为一个易用性强，结构简单的虚拟样机，可以针对一些机器人中的运动学和工作规划的设计进行优化，但是缺点也很明显，对于物理属性和材料属性决定的问题，webots的仿真比较无力。例如在解决步兵发射机构和飞镖发射的问题时，任何微小变化的因素：装配精度，温度变化，电机性能等等都会对发射精度产生不可忽略的影响。</p>
<p>对于工程机器人的机械臂的工作空间规划、平衡步兵结构设计与控制算法的耦合测试，麦轮和全向轮的飞坡以及在盲道上的表现，都可以尝试着去进行仿真，在仿真过程中不断修改机器人的结构设计参数以及控制的算法，可以达到一个缩短研发周期和研发成本的效果。</p>
<p>Webots的物理引擎毕竟与现实物理世界还是有较大的差距的，因此仿真的结果不一定与最终的测试结果相同，会存在一定的误差，因此应该根据研发的需求决定是否进行虚拟样机的仿真。</p>
<p>所有的仿真都是在一个不太复杂的工况中通过虚拟样机做近似处理，从而得到一个优化的结果，不能完全依赖仿真，从而忽视了实际测试的重要性。</p>
]]></content>
      <categories>
        <category>Robotics</category>
        <category>Software</category>
      </categories>
  </entry>
  <entry>
    <title>Work Summary</title>
    <url>/2024/08/23/Work-Summary-hwx/</url>
    <content><![CDATA[
<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="40d79b7d221114ee29d52e3a50e184c2199704c519c72e52b31976e39dc14872"></script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>
      </label>
    </div>
  </div>
</div>
<link href="/css/hbe.style.css" rel="stylesheet" type="text/css"><script data-swup-reload-script type="module" src="/js/plugins/hbe.js"></script>
<script data-swup-reload-script type="module">
import {initHBE} from "/js/plugins/hbe.js";
  console.log("hexo-blog-encrypt: loaded.");
    initHBE();
</script>
]]></content>
      <categories>
        <category>Scientific Research</category>
      </categories>
  </entry>
  <entry>
    <title>STM32入门</title>
    <url>/2023/05/29/stm32%E5%85%A5%E9%97%A8/</url>
    <content><![CDATA[<h2 id="开发环境搭建-点亮LED"><a href="#开发环境搭建-点亮LED" class="headerlink" title="开发环境搭建(点亮LED)"></a>开发环境搭建(点亮LED)</h2><p>采用cortex-debug进行调试。</p>
<h3 id="下载GCC-ARM工具链"><a href="#下载GCC-ARM工具链" class="headerlink" title="下载GCC ARM工具链"></a>下载GCC ARM工具链</h3><p><a class="link"   href="https://developer.arm.com/downloads/-/gnu-rm" >GNU Arm Embedded Toolchain Downloads <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p>选择最新的版本，后缀为<code>win32.exe</code>的文件。</p>
<p>安装完成后将其添加到系统变量，勾选第三项;</p>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/05/29/stm32%E5%85%A5%E9%97%A8/fig_1.png"
                      class="" width="400"
                >

<p>在命令行中输入<code>arm-none-eabi-gcc --version</code>来验证是否安装成功并且添加到路径；</p>
<h3 id="下载OpenOCD"><a href="#下载OpenOCD" class="headerlink" title="下载OpenOCD"></a>下载OpenOCD</h3><p><a class="link"   href="https://github.com/openocd-org/openocd/releases" >Open On-Chip Debugger <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p>解压完成之后需要手动将根目录下的<code>bin</code>文件夹添加到系统变量。</p>
<p>最后在命令行中输入 <code>openocd --version</code> 来检查 OpenOCD 是否安装成功并且添加到路径；</p>
<h3 id="添加cortex-debug插件"><a href="#添加cortex-debug插件" class="headerlink" title="添加cortex-debug插件"></a>添加cortex-debug插件</h3><p>在vscode中搜索这个插件，安装；</p>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/05/29/stm32%E5%85%A5%E9%97%A8/fig_2.png"
                      class="" width="600"
                >

<h3 id="下载GNU-make"><a href="#下载GNU-make" class="headerlink" title="下载GNU make"></a>下载GNU make</h3><p><a class="link"   href="https://www.mingw-w64.org/downloads/" >MinGW Download <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<blockquote>
<p>MinGW（Minimalist GNU for Windows）是一个可以在Windows环境下运行的GNU编译器套装，包括GCC（GNU Compiler Collection，GNU编译器套件）和其他一些开源工具。</p>
</blockquote>
<p>通过下载MinGW来获取GNU make，下载对应的windows版本即可，记得添加路径。</p>
<p>在命令行中输入 make -v 来检查是否安装成功。</p>
<h3 id="下载CubeMX"><a href="#下载CubeMX" class="headerlink" title="下载CubeMX"></a>下载CubeMX</h3><p>CubeMX用于生成stm32调试的基本代码，通过图形化的方式对stm32进行一个基础的硬件设置。</p>
<p><a class="link"   href="https://www.st.com/en/development-tools/stm32cubemx.html#get-software" >STM32CubeMX <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<h3 id="利用CubeMX生成工程文件夹"><a href="#利用CubeMX生成工程文件夹" class="headerlink" title="利用CubeMX生成工程文件夹"></a>利用CubeMX生成工程文件夹</h3><p>选择<code>File</code>然后选择<code>New Project ...</code>或者Ctrl+N来新建工程；</p>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/05/29/stm32%E5%85%A5%E9%97%A8/fig_4.png"
                      class="" width="600"
                >

<p>左上角写入stm32的型号，然后在中间下面的众多型号中进行选择，上方可下载对应的芯片手册，右上方点击 <code>Start Project</code>;</p>
<p>先设置<code>Pinout &amp; Configuration</code></p>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/05/29/stm32%E5%85%A5%E9%97%A8/fig_6.png"
                      class="" width="400"
                >
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/05/29/stm32%E5%85%A5%E9%97%A8/fig_7.png"
                      class="" width="400"
                >

<p>为了点亮一个LED灯，这里将PB0设置为<code>GPIO_Output</code></p>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/05/29/stm32%E5%85%A5%E9%97%A8/fig_12.png"
                      class="" width="400"
                >

<p><code>Clock Configuration</code>的配置如下：</p>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/05/29/stm32%E5%85%A5%E9%97%A8/fig_5.png"
                      class="" width="600"
                >

<p>在<code>Project Manager</code>中输入工程名字和配置工程路径;</p>
<p>在<code>Toolchain/IDE</code>中选择<code>Makefile</code>，</p>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/05/29/stm32%E5%85%A5%E9%97%A8/fig_3.png"
                      class="" width="800"
                >

<p>在左边第二栏中进行如图勾选；</p>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/05/29/stm32%E5%85%A5%E9%97%A8/fig_8.png"
                      class="" width="400"
                >

<p>最后点击<code>GENERATE CODE</code>（右上）；</p>

  <div class="note p-4 mb-4 rounded-small info">
    <p>初次下载CubeMX需要安装对应stm32系类的软件包，如这里的stm32F103C8T6则需要安装stm32F1的软件包。</p>

  </div>

<p>在STM32CubeMX界面下，点击Alt+U打开软件包管理界面，在这里下载即可。</p>
<h3 id="launch-json配置"><a href="#launch-json配置" class="headerlink" title="launch.json配置"></a>launch.json配置</h3><p>创建好工程文件夹后，用vscode打开根目录，根目录的文件如下：</p>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/05/29/stm32%E5%85%A5%E9%97%A8/fig_13.png"
                      class="" width="400"
                >

<p>在左边菜单栏中选择<code>运行和调试</code>，然后选择<code>创建 launch.json 文件</code>，然后选择<code>cortex-debug</code>;</p>
<p>vscode会自己创建一个<code>.vscode</code>文件夹，里面包含<code>launch.json</code>文件</p>
<div class="highlight-container" data-rel="Json"><figure class="iseeu highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="comment">// 使用 IntelliSense 了解相关属性。 </span></span><br><span class="line">    <span class="comment">// 悬停以查看现有属性的描述。</span></span><br><span class="line">    <span class="comment">// 欲了解更多信息，请访问: https://go.microsoft.com/fwlink/?linkid=830387</span></span><br><span class="line">    <span class="attr">&quot;version&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0.2.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;configurations&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Cortex Debug&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;cwd&quot;</span><span class="punctuation">:</span> <span class="string">&quot;$&#123;workspaceFolder&#125;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;executable&quot;</span><span class="punctuation">:</span> <span class="string">&quot;./bin/executable.elf&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;request&quot;</span><span class="punctuation">:</span> <span class="string">&quot;launch&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;cortex-debug&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;runToEntryPoint&quot;</span><span class="punctuation">:</span> <span class="string">&quot;main&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;servertype&quot;</span><span class="punctuation">:</span> <span class="string">&quot;openocd&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;configFiles&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                <span class="string">&quot;interface/cmsis-dap.cfg&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;target/stm32f1x.cfg&quot;</span></span><br><span class="line">            <span class="punctuation">]</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure></div>
<p>需要对其进行修改，这里使用的是STM32F103和Daplink，所以需要修改<code>executable</code>和<code>configFiles</code>两个参数；</p>
<p>由于CubeMX的Makefile文件默认将<code>.elf</code>文件放在<code>build</code>文件夹下，所以需要修改<code>executable</code>为<code>./build/$executable$.elf</code>；</p>
<div class="highlight-container" data-rel="Json"><figure class="iseeu highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="comment">// 使用 IntelliSense 了解相关属性。 </span></span><br><span class="line">    <span class="comment">// 悬停以查看现有属性的描述。</span></span><br><span class="line">    <span class="comment">// 欲了解更多信息，请访问: https://go.microsoft.com/fwlink/?linkid=830387</span></span><br><span class="line">    <span class="attr">&quot;version&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0.2.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;configurations&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Cortex Debug&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;cwd&quot;</span><span class="punctuation">:</span> <span class="string">&quot;$&#123;workspaceFolder&#125;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;executable&quot;</span><span class="punctuation">:</span> <span class="string">&quot;./build/hello_world.elf&quot;</span><span class="punctuation">,</span> <span class="comment">// 修改这里</span></span><br><span class="line">            <span class="attr">&quot;request&quot;</span><span class="punctuation">:</span> <span class="string">&quot;launch&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;cortex-debug&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;runToEntryPoint&quot;</span><span class="punctuation">:</span> <span class="string">&quot;main&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;servertype&quot;</span><span class="punctuation">:</span> <span class="string">&quot;openocd&quot;</span><span class="punctuation">,</span> <span class="comment">// 修改这里</span></span><br><span class="line">            <span class="attr">&quot;configFiles&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                <span class="string">&quot;interface/cmsis-dap.cfg&quot;</span><span class="punctuation">,</span>  <span class="comment">// 新增这两行</span></span><br><span class="line">                <span class="string">&quot;target/stm32f1x.cfg&quot;</span></span><br><span class="line">            <span class="punctuation">]</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure></div>
<h3 id="tasks-json配置"><a href="#tasks-json配置" class="headerlink" title="tasks.json配置"></a>tasks.json配置</h3><p>在<code>.vscode</code>目录下新建<code>tasks.json</code>文件，将以下内容复制：</p>
<div class="highlight-container" data-rel="Json"><figure class="iseeu highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;version&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2.0.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;tasks&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;shell&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Build STM32 Firmware&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;command&quot;</span><span class="punctuation">:</span> <span class="string">&quot;make&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;args&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;problemMatcher&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                <span class="string">&quot;$gcc&quot;</span></span><br><span class="line">            <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;group&quot;</span><span class="punctuation">:</span> <span class="string">&quot;build&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;shell&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Build and Download&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;command&quot;</span><span class="punctuation">:</span> <span class="string">&quot;openocd&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;args&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                <span class="string">&quot;-f&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;interface/cmsis-dap.cfg&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;-f&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;target/stm32f1x.cfg&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;-c&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;program build/hello_world.elf verify reset exit&quot;</span> <span class="comment">//这里改为自己的项目执行文件</span></span><br><span class="line">            <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;problemMatcher&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                <span class="string">&quot;$gcc&quot;</span></span><br><span class="line">            <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;group&quot;</span><span class="punctuation">:</span> <span class="string">&quot;build&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;dependsOn&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Build STM32 Firmware&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure></div>

<h3 id="C-x2F-C-配置"><a href="#C-x2F-C-配置" class="headerlink" title="C&#x2F;C++ 配置"></a>C&#x2F;C++ 配置</h3><p><code>Ctrl+Shift+P</code>打开<code>C/C++配置UI</code></p>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/05/29/stm32%E5%85%A5%E9%97%A8/fig_14.png"
                      class="" width="400"
                >

<p>编译器路径修改为本地gcc安装的位置：(可以通过Everything搜索arm-none-eabi-gcc.exe来找到路径)</p>
<p><code>D:\Program Files (x86)\GNU Arm Embedded Toolchain\10 2021.10\bin\arm-none-eabi-gcc.exe</code></p>
<p>IntelliSense模式修改为：gcc-arm(legacy)</p>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/05/29/stm32%E5%85%A5%E9%97%A8/fig_10.png"
                      class="" width="600"
                >

<p>将以下内容覆盖到<code>包含路径</code></p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">$&#123;workspaceFolder&#125;/**</span><br><span class="line">$&#123;workspaceFolder&#125;/Core/Inc</span><br><span class="line">$&#123;workspaceFolder&#125;/Drivers/STM32F1xx_HAL_Driver/Inc</span><br><span class="line">$&#123;workspaceFolder&#125;/Drivers/STM32F1xx_HAL_Driver/Inc/Legacy</span><br><span class="line">$&#123;workspaceFolder&#125;/Drivers/CMSIS/Device/ST/STM32F1xx/Include</span><br><span class="line">$&#123;workspaceFolder&#125;/Drivers/CMSIS/Include</span><br></pre></td></tr></table></figure></div>

<p>以下内容覆盖到<code>定义</code></p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">_DEBUG</span><br><span class="line">UNICODE</span><br><span class="line">_UNICODE</span><br><span class="line">USE_HAL_DRIVER</span><br><span class="line">STM32F103xB</span><br></pre></td></tr></table></figure></div>

<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/05/29/stm32%E5%85%A5%E9%97%A8/fig_11.png"
                      class="" width="600"
                >

<p>修改成功后，在.vscode目录下自动生成配置文件<code>c_cpp_properties.json</code>, 表示配置成功。</p>
<p>烧录器连接：（Daplink）</p>
<table>
<thead>
<tr>
<th>stm32</th>
<th>Daplink</th>
</tr>
</thead>
<tbody><tr>
<td>3v3</td>
<td>3v3</td>
</tr>
<tr>
<td>SWIO</td>
<td>SDO</td>
</tr>
<tr>
<td>SWCLK</td>
<td>SCK</td>
</tr>
<tr>
<td>GND</td>
<td>GND</td>
</tr>
</tbody></table>
<p>在main.c下写代码</p>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line">...</span><br><span class="line">  <span class="comment">/* USER CODE BEGIN 2 */</span></span><br><span class="line">  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, GPIO_PIN_SET);</span><br><span class="line">  <span class="comment">/* USER CODE END 2 */</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, GPIO_PIN_SET); <span class="comment">// 设置PB0为高电平</span></span><br></pre></td></tr></table></figure></div>

<p><code>Ctrl+Shift+B</code>来对代码进行编译和下载</p>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/05/29/stm32%E5%85%A5%E9%97%A8/fig_15.png"
                      class="" width="600"
                >

<p>选择<code>Build STM32 Firmware</code>对代码进行编译，选择<code>Build and Download</code>则进行编译和下载。</p>
<p>连接stm32的B0到led上，检查能否点亮led.</p>
<h3 id="代码结构"><a href="#代码结构" class="headerlink" title="代码结构"></a>代码结构</h3><p><code>main.c</code>中的大部分代码由CubeMX自动生成, 这里重新梳理一下stm32f103的代码结构.</p>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;main.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;gpio.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">SystemClock_Config</span><span class="params">(<span class="type">void</span>)</span>; <span class="comment">// 该函数用于配置系统时钟</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span> <span class="comment">// 主函数</span></span><br><span class="line">&#123;</span><br><span class="line">    HAL_Init(); <span class="comment">// 初始化HAL库</span></span><br><span class="line"></span><br><span class="line">    SystemClock_Config(); <span class="comment">// 配置系统时钟</span></span><br><span class="line"></span><br><span class="line">    MX_GPIO_Init(); <span class="comment">// 初始化GPIO</span></span><br><span class="line"></span><br><span class="line">    HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, GPIO_PIN_SET); <span class="comment">// 设置PB0为高电平</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">    HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, GPIO_PIN_SET); <span class="comment">// 设置PB0为高电平</span></span><br><span class="line"></span><br><span class="line">    &#123;&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">SystemClock_Config</span><span class="params">(<span class="type">void</span>)</span> <span class="comment">// 配置系统时钟</span></span><br><span class="line">&#123;</span><br><span class="line">    RCC_OscInitTypeDef RCC_OscInitStruct = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">    RCC_ClkInitTypeDef RCC_ClkInitStruct = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"></span><br><span class="line">    RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;</span><br><span class="line">    RCC_OscInitStruct.HSEState = RCC_HSE_ON;</span><br><span class="line">    RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;</span><br><span class="line">    RCC_OscInitStruct.HSIState = RCC_HSI_ON;</span><br><span class="line">    RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;</span><br><span class="line">    RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;</span><br><span class="line">    RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;</span><br><span class="line">    <span class="keyword">if</span> (HAL_RCC_OscConfig(&amp;RCC_OscInitStruct) != HAL_OK)</span><br><span class="line">    &#123;</span><br><span class="line">        Error_Handler(); <span class="comment">// 时钟配置失败, 则调用错误处理函数</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK</span><br><span class="line">                                |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;</span><br><span class="line">    RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;</span><br><span class="line">    RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;</span><br><span class="line">    RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;</span><br><span class="line">    RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (HAL_RCC_ClockConfig(&amp;RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)</span><br><span class="line">    &#123;</span><br><span class="line">        Error_Handler();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Error_Handler</span><span class="params">(<span class="type">void</span>)</span> <span class="comment">// 定义错误函数</span></span><br><span class="line">&#123;</span><br><span class="line">    __disable_irq(); <span class="comment">// 禁用所有中断</span></span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>) <span class="comment">// 进入无限循环, 等待外部中断</span></span><br><span class="line">    &#123;&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">ifdef</span>  USE_FULL_ASSERT <span class="comment">// 如果定义了USE_FULL_ASSERT, 则调用assert_failed函数</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">assert_failed</span><span class="params">(<span class="type">uint8_t</span> *file, <span class="type">uint32_t</span> line)</span> <span class="comment">// 定义assert_failed函数</span></span><br><span class="line">&#123;&#125;</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br></pre></td></tr></table></figure></div>

<h2 id="输出PWM"><a href="#输出PWM" class="headerlink" title="输出PWM"></a>输出PWM</h2><h3 id="工作原理"><a href="#工作原理" class="headerlink" title="工作原理"></a>工作原理</h3><p>STM32F1共有8个定时器，其中可以用于PWM输出的定时器有：</p>
<ul>
<li>高级定时器：TIM1, TIM8 (7路PWM)</li>
<li>通用定时器: TIM2, TIM3, TIM4, TIM5 (4路PWM)</li>
</ul>
<p>输出原理:</p>
<ul>
<li>TIMx_ARR寄存器确定PWM频率；</li>
<li>TIMx_CCRx寄存器确定PWM占空比；</li>
<li>TIMx_CNT为定时器计数器；</li>
</ul>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/05/29/stm32%E5%85%A5%E9%97%A8/fig_16.png"
                      class="" width="600"
                >

<ul>
<li>PWM模式1：在向上计数时，TIMx_CNT &lt; TIMx_CCR1时通道1为有效电平，否则为无效电平；在向下计数时，TIMx_CNT&gt;TIMx_CCR1时通道1为无效电平，否则为有效电平。</li>
<li>PWM模式2：在向上计数时，TIMx_CNT &lt; TIMx_CCR1时通道1为无效电平，否则为有效电平；在向下计数时，TIMx_CNT&gt;TIMx_CCR1时通道1为有效电平，否则为无效电平。</li>
</ul>
<h2 id="CAN总线"><a href="#CAN总线" class="headerlink" title="CAN总线"></a>CAN总线</h2><h3 id="CAN总线的基本原理"><a href="#CAN总线的基本原理" class="headerlink" title="CAN总线的基本原理"></a>CAN总线的基本原理</h3><p>要进行can通讯，需要专门的can收发芯片，单片机通过Tx与Rx与can收发芯片通讯，can收发芯片通过CANH和CANL与can总线通讯。线束上需要双绞线缠绕。</p>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/05/29/stm32%E5%85%A5%E9%97%A8/fig_18.png"
                      class="" width="600"
                >

<p>经过can收发器之后，普通信号会转换为差分信号，差分线是用CAN HIGH和CAN LOW两根线来传输信号，低电平下CANH为3.5V，CANL为1.5V，高电平下CANH和CANL均为2.5V。</p>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/05/29/stm32%E5%85%A5%E9%97%A8/fig_17.png"
                      class="" width="600"
                >

<p>其数据帧格式为：</p>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/05/29/stm32%E5%85%A5%E9%97%A8/fig_19.png"
                      class="" width="600"
                >

<h2 id="USB-Host"><a href="#USB-Host" class="headerlink" title="USB Host"></a>USB Host</h2><p>由于常用的stm32f103没有USB Host功能，所以使用stm32f411CEU6，作为usb host与usb设备通讯。</p>
<p>CubeMX设置</p>
<h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ul>
<li><p><a class="link"   href="https://blog.csdn.net/as480133937/article/details/99231677" >【STM32】HAL库 STM32CubeMX教程七—PWM输出(呼吸灯) <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
</li>
<li><p><a class="link"   href="https://www.bilibili.com/video/BV14k4y187e6/?spm_id_from=333.337.search-card.all.click&vd_source=3c842e78ba17ee7afd3375b35f554ca1" >趋近于完美的通讯 CAN总线！4分钟看懂！ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
</li>
<li><p><a class="link"   href="https://www.bilibili.com/video/BV1Z1421C7dP/?spm_id_from=333.337.search-card.all.click&vd_source=3c842e78ba17ee7afd3375b35f554ca1" >STM32F103用CAN通讯驱动小米电机讲解 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
</li>
</ul>
]]></content>
      <categories>
        <category>Electronics and Embedded System</category>
      </categories>
  </entry>
  <entry>
    <title>Work Summary</title>
    <url>/2024/08/23/Work-Summary/</url>
    <content><![CDATA[
<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="62407cf21f8a86940dfd66e850b96cf4a352b8532d6665522a3f095f8aa28c08">2f6169c944c4a66dcc0bf1536b4d3a59ceae556fd5ae2d79ed3b40f5d5e6857f93c7ef01633eba1e6e316ce85b4a755cffac585b10ef5a48c091cfe28b9900092ea84624bf212151c19137d2011c484f0c423efdb7525ce0d7cf317ceb6997dedad3b30f3295bd1fdbf622582d0eb8481a785e49c60a11222959d8cde7a2c8b58ef0c7322441255c2f004ddd32fb9e4041cb677201ae5c1c1bb53b65808ac18f4bc6eb7770a16a3096e10ca41b4cdecafa7a7001e2ec27e98be23f030b3137b3be433e58851f8861594c00af5e42abd7f0602c41b1b63de5346f4345c66535b437eaa1296f2e07a88fae1632ebe6f92db8815373429e5f627425bc6f3fc9795f503c3ac2ea7b377f607d57a00e6011e2b20cb473d2d8c3ba02dd55b7cc9688af6a19a93079952498fde0b056e06f2db15ead629b13afd5a1cff7a8b2657312941e4aec9adae9b0f1b57d7a53307b03320060cf9df0225c56e81bdf49d82aa2dc54e43261d4c1758695524bec03dbc18b2006e7754dee7df530552093d6c274fcbfe8f378a088dc0a923fe9ba32b4ea494d964a73fdd84c5d47c318460ca485a2b46ecaa7a73042bb53a5b755109a44793602b9d9b6989738efb3aed3a091481cd368fc8ec91e7a54f2e7da62d5ec4854fc65526d22143c63bc0858593290485c00995ed62334c2dc01cb2a726fcdc14b89ba4229278b7f0272f79ef1341e96a53aed770582600736138e33c5426c06cd512d2f6ab7408e40afcedd9fee27fa79ae128c110e67a6b34134ff1015e369833693e3074dd97eeef6584cf6fd31e7b7edb21ec2289c82ce6577df1a52e51820f496081304b10ede46a6cb903a480a7b1c6f1099bff98788d3c94eb08f2d4db87ea883ab8a784b6dc81c5bbbe0d6a2a90a9e3f8b44f5893b2affd64469426f042f6198b9784f8ce7e7f4b3e6f1c75764e3dc08ac07b686cc5b18bcc0a68003e979d4d0694c97b98013383294696d3e3d435a1b4f568eaf6ff8211c409f5741881f0c47648cc399ebec79be15da44701357716258d5fe4ac7f60757e41d3928429a43b01eadbd79fcb8c3ba348a428c34406db9a655c0fac2fa0d2bbed90d16ed421b1e588f75ffb68ad3a258f8a9ab586b97937d6ba2d7c2692816a30e56e11f666dd4e64f114c7b7589a224edc671e7190299cd089b3dd71ed6371d9695f6b38766d4b382cc9642a30789623e265715853917671d9ca6f067cd0bd5df5d5b3851022f9fe7e3c84771770eb1d3beb889a6259906c9854700d8725bd49bc82e0ef8242b4a55d6c0dfdd41e8af9db62fab9f4d1c528c23e02a170be25ce7727b10a2d3da89acf946dbf20c173f7c54f7a2fa6982ff32a90d850daafb74bc644561c5fa607092cf5c2f3271f6d0630f420b677f0e22d97ab9a6a7d42262113f0f3cd3f8acd03f8918591b15d7b00e2bfdc9223cbeb67a4f8e25d974cf1b1bf1a95bd0bb2f92581fb1ec426a180ec877da02839305476b7283abb0edf2a1fbb287730b38d50c54191b4b6b063cfe78eaab705b31b671c368a1bdcbf4a071e77973ff71ca933814cb296856e9417aba0f1c1b34357cfdff18b828a21927e8a33b57adee57e29f217e265bcbd0a82f5e5f46985773db2acfec4694fd74ff16771439bd4648a4c09e66cfc0e3990ad15f3cc9d4633fab8cc41d9503d4d93e549415e02b81a9dcc924e347f6cbc8b1eda2995717afe0c14a7107a960d1ef317e5d67d4ee6ea8f2bd78196c2e1338aa1730de82f8e976341f1ad102a308a69a1abf377253e0b1658fe85ca66b35423ce24a6cece7aba9568a045f087bdd0e8d1a76277d6d293090b28ae4eafc777d5bb60bf102726210813ba2e053292d7c448ae32b83ad46bb88986732327c0d0d0db9c03934efd7c1c1b927c63e92b0a725da3f6ec3d75294143fc4fbd4995fe470956aba340b0033ecfb8080643d52fefd31c4db4bd31f5ffa442948eb32cc00e1ca5aa65c5fc624b8a1616cf1a176e4276d1a7a4f379732740fc27f67e56785de95109c53f620162bc5b656572b863a72ad56d6e7fac9204dedb428b30fbbfe5f0551213e5fd0c5e2e25fae5fc131112ec00189e457f97faa17e178398f84814991fdc9ba84072205681d55e929ba317c9b322622488e96a1085f68ae4ebe6cd6f9535bdfdf11ecf132450bc7c0d7290a2a605a1e1168beb533c634f5c5fb3dace48a712013d3ad8f3d5644a1cdb351ec45de2a5aeff66c7abebbb57e7dc83a77104873a31c29023cf315eedc3f38a1f21e65207294505d90d3552174a72b577860203de5ba9e7139c61c326f9367948b4ded61cf745742313be1c2204a0edc4e6ebc9fcc7d7923da80e5d8560821b61ea27462160660f5bb20961ac6c662ea6ebd2c739c2a7c66ca9636ba9ff18c669a8c4894ed8426193dc420d9bbdef6d9ea75015bf62a54f48c9f1a5f53184a3fda37f0a252f78b09ea103dbe844d1aed3aef747f95f3c11ea398f086e5e151f7c9f9b1dfd170457b623f07c4608795755a6998421cd809d4d0ca06963fa68a9099d7cb8059aefb8f1d5c0406bb09cd07aa419f19c975844ab6f27bc4cd8300a9c3c568eec8508d5243e89bc5405d4ca2b61b4a6ef27bc965992488cd90c64ba000383da90a19205cddbfbbc5156e525ca9addf7ba414b90052cd5bdd157aade201cdf0317980664e2d59eaae645277635d5fbc807aac3345ec5b9ddda089e90c9150272164f9f90bc49fc006d9dab386500e64480818e04409c772554a19e78742aff2003ba20939665285fb631c050de5a2ce34b71e49104a942d6e74dcace46d6eed55fd737e13222c69540cb4c793ea839bd894d5131630ee331e054ccf7c9b0ab2cb90c82acf16d4d76ccf27fc6836461a0e9ed250f762b147c274b87dd4be4ed1ebaf4ecefdfd7159050f5d551a316e2aeebbd0e4be4f6433e93bc73a49283ede8eef518d4e305edfa143090de1e67be2263ed463981d3098b29b28b927c92b26650878449d30fcd757b47d59917880f8d520459d9b838e66630c5629a9ecfb588f8f693daf4413fcdc6296e4d443c8fa27144ddd5a480ce25d5d69c9f083b97b4d5c112935fdba3d512c269c5ab4eda0e866bc8cadf32ff937a659f95867eeeba1357a86ee1e86883c8b40fcfdf46181a26dc22c92af02f37bc4e5958c3963ba6126eabe9b4cff661d54dbd3ba4b552c1e37433c5603e2887bc1dac463d243d1de6a04b800773b43a45ee3aaa41cfb08778af1109ec65dd095651e64edf9f6863497493825f337d7addb0e47830bc136d1b1c0aaf5752bb07a7bd6104f2ba88e9b47afac3eff8872b4c600f45da1c15e616a6644371f62b009cfd7e8acc8c588ff867d9207f270c0d98cb2bc678da052dc64fb5d1e65760c2120e80ef0bceb77bf730374bb12e1da085c571f9eae1a5ddf4cd4476dbeda97033c10e2f5a39dd31ce0cc03283da08854ae4674262d9ccd0bda44a3f46cfd3f7b36b0a05b663ec22deb6253ac51efe603183cec511bf4c5c592ef9311f8e3423c4bc5c86abb2d791895bed868e1fa50bc81d9e361fc83e82b49997b5d13406aa6410ac91249f5a4e6843c9a6c4c79d17e6ee2ccf0f521babdac332ef1799fde217a52e91cfc0af6879dc2d60e3afeeb1301a4e88132b7a467b545aa9b465f861cdc508808a41cbf1a6da30009f78b823da6256328272f16bdc7e407982c6da0fdcade87d1258cf951da95f66f70cb59220818bbdb05c5cf8d6af46e50c3255852d0558a826048ebc520538b28cd3b188b17082ae43cc71411402b074e819b64bdaa7c6fb811b9e4cce26e32b922d500b137be96effd232a4195de2a97f957210b3605680200e929fccc4ac361295f252b78177bbd84fafed18197818f406e2a2173d40bf115fce8ae59996469a728c788f62be5c84dd87f5e3ca7d6501a60779716ce04cfa71a84df10ea9dd1285b012fe02a1bfca8f7070bab56187c36ba12026e4448df941b0a020d22e56b516adfe991a5bce0980ad52f202a36db40d239d209c7a3cd02f8a5d0c5311ee28f20f6ca56af25728c56d986dadbf87800940b9174bceaa6631755659580de802eea60d3403a73adf974f0e3d6ce66fc6cb2de98b8edad457493c70278d2ffdce3b834d93ff79ee312c67679d9761811c28f1e068c124902ca3c897b4d5edb57236301ed3ba56935638b170a723ba15714531d94f72aeb8e59ab9490a52b1994d4997a5defd119cdc979262e33e91e7e2b239e0f8474fddd9d6d8fd7020acabf422bff82ec06f1e3f8182a793b5cbe04b54ab644c45a179c0add3d935c9af06b36c77d7b8a782c3f63a03631f22c145392d27a34b356af2837b4c372a92f206cc5c145c102ff56aa8bddea7d743875f3eee19870c5ac86cf055cfc43eca14cbc7a1d4afb675e38b53022e86439903a06f2afe18de997611fd7a8475d5b9541014507e75032aa625f385b8e1980f4b6897e427a6d74809ed3e0ba97c4871a2f59c6551510250135e0c841b07e1880c18ca81d49b7bb57de735aba200b99ecef5aae036e0f8401bcffd57824f70c006675cdc0f1fb93c4326a8efceed9e1f64fa2089158d549c254b8d0e940a1a44d6e0105cccc345872d3786bbe2b85f42dee35b4ac742f569a2a1d9f45f99c4b0fd3912b4d62d72f18ef2d0aef74e67f786155d14a472e28cdd28ab54fe56a7fb2133574b31899864646a93df482dac07ae7cbc116df59d1c12830bfbe6f9a4bbcc01128567a8edcf6ce4f4d88a0979912dc3caf46444b2151ded8888d77f3f95ece2f7f8044b96b86e18acd8152366acbb3d49f4d911d88776fea1d15984e2e799dd7022ed0b79311aa97118919063c38257467a7b98a1880caa707eabdbe53b75a3f567157aa98df7f96f4ddb2f8a9db9416cf31f100a282840dae58686c5f6172905b3d7b129c91d2ab0624d396f461f5861d9d77c9422da3c31861e0355cdcb168bce2994da74b73e95bc158f7d9ace9dc077d827df063ff5501b11e988876e06b22e7a5766a831c143bdb5dbb1b40b09013d0856e52c2960c8ceaff6532f4d2591e5b2b5be0ba24491f2c7983870664e233058b7e44b59c2d9ad1d502682e0813973815a1b86a8935f9eb7a2fe24ae502512986dfde001b7b97a8dd1b4ffeba3ca06fcae2d5bf2759709942f711ce72569a5be74449c283ff5367ca4857dff00aed440b4b57eb903f8fbb584aa34920f5ba920e59db842608c43d13d3faf329dec7b9376c443d5ff89e140e3a0aa4264cab4b3c5dca7cd9f6712f4549f1cc919b15191d1c63e20bf9861f5936cbfc13a7f0bcde8b994f69be9fe3330300efb108fa89b760ad0f8eb0f51f731c9f3fd74bd18d4771ba268d9bd51a4bbdad5c66ac813ffdc0a0cf39a811016870d6ad865be980807a0b473238048ede869a412b775279ac4d09f4b2fa0fe166aa6cc8eef8c7994a9225fbd53e5896db491b7982914fcbf7eaa5042f4022d4637fe34852c329983dbdc8e19d6c7217e63cb3ba56e77cf618eb20ee3c9284f59eb125c99a659358d789ea361bd37951ee83342b602907ed5a86ecd81f240d8d80c16c0ded55f894a4a7a5873c56e3a0e5160c660b7f33a308f01b7558c87a6bc0518ed392a864e91bd2379182680b149d4048845c61f79768e500aee2040e4c86b932185c5df13ef42666c340de257d659bf562b0f9916fdfe67365366a399549338e27d0bc01a477d8692dbf24d93f556627c0b2cae45e802f097785b010aff725d85400c0781d65c0a320d8b553780a8cd95abe87b964571b9de738caac7dc513805815b4acd10eb7ad595dc8a92e737d00a2e01540a2ab7cbc37bc451a54dfb83be4641c9baaa2a55a13e8f7df0302cf8c22b2ad4467b26d141f7d9725d3a1f8d752bb5d7e5370269011c6357dd3bed041e461dc79ab34c76b9e58803ed03970e476f22f1a73e1aea77f8804990e53839d9fa56bc31d8b7b7a0b4dbe4f262cf69024e2404827e2402d524416faa1a82541b7e9807de192bb7220c4cc8a0f0ea49226d1e823241d730e33a1c3206e99b104a9c07dd874c96392a020ad9a7a3de6284442807b605a0817e0ea7a654490bee45dc19b9b98397b55fb1e420c512d1ae652e2ba5f344537fd7d77b494d95c718266e1821ecf613c994dbef217540929cdad4b3b8c102a4f06e582ae21c4cd483ae87645410ff41995a1a62d96026c33ef73a9390cb10e3ca8433ce6b6184fa9e258e136d6f6656cf2745eba95242e5a23e9bb71e1d6c194b941768b725485db285676ccb40d6b0d13b380f3bd7eef069ac4123b8a91d2cf4bd56be7dbf392ac2ba55d1c517c881149e728e65277eb67be5b0f5f395a05a91a0be550bf3efba4da442b9e8afcd7d49fba02b3ae1905daa16478de4d4d07d1a62374afc16d8cf938ef39384431652c6c5fe5d68bcc3d312786b27d2d3bd9ede809ca186ae74cc6f76c3cda056c6246d9c50eba5b582bf6a296589ed57dec42ed1fdeb3a2f95c08ca793a315fc21d29fd23eccb1e0fe1bbae9d16d6941207711eadaab37eb3214375a2f86b2f9d08015d9871fbabad133f4019d97c70f79117925fbe373699e631f1663ccce40769cb31e6761e60d7e96862ca252ba79e82ae7dd8e2e1a7ddda8b47825e7432c56474ee3ff98fb1f349465bfd70d32584d319b9b9597080d87ee4302cba63748a5144facefe01c034cf482311a2329f6b33448e9f4bcde5167d0fceb881790e9c7a01cea80eafbebb3ae1161e3e945b28e14e33ab0ed941d622fdef2a18ddc8661763075d5d0ba66d6978c82c0194ad2dae4c865319cfd4a0f17bf0f0bbd6afabd26a0ccc59ed96202491514c78225c131a055f326556113ecbc1c8ecbdc2a714ac176a380f2719c2be781eb4996bd8933867af1d0f8932cc0fc4a3a5a11c5ee4b9e6a7cb66af8c6e9aa13af7446bcb0b081c2884beea754b16ea9d6a0ee0a3b0f9e69ad23339c9bc032bbf0a5f45400fe15bc6ebbfaddc5bc56871dea0b0d3f40952d39f0dcd514edb973c5784130184e2c81a250d94e8deb405f8534b2ab6af05164819ef9219897ce52c5c0df8367d929f259ac734a0826b5e714744f2cabcafed7d72c82e6cb520a1b24781473b6ebdd2d745d7e12ec5c5542bbd6984134671f760ab092b8d7c2f22d439438911818efba3fa9705ad7c226467612274ddf1fffe6d018d3920be829411e982ae8db3afe33376a98a58f88f1af75ee01d9732a617d79e09807dac483735e33b9c062cdb2f2f4afcd62e728ecc8e733c0ddaf8a6facaaed0c4897b817fddec7df88678ae83c61e32da4523be89693a308bb6979a4960cd3601592c27755569ee90682b1e05e5c049092a6ede4818039ab654591633a90843b34a41c13896eeb3a1af731b0448cb968a8e789db6fea75c9c135197ee3c62db1fb7c8fa51b52e4db65c5383b648a361ea23595c25380e08573594b0575556f9e3e1a45b8e4c53bba19809db9bfdcd818f7aba0dfc4e11ec449d846b3b3772731fafefc05faafb5b9e2e8ddbf1ace7dd43da6e7f9a067794e9721d0e23e83ce620cf6d2181d11d9bc2b468af2eb7f91d3dc47173d1ae347341155495e5fdf44efad9864bd5f1e061efdf6d9ef936b76ce29f234bb47a3f3a3f3ccfc0481a324c1fc25735beac90b1ff7d499e8a8e125003284fd2c24ee9808ee90d0cc69fb517e9f0a645eaedcabd6775736bf902aab85bf4bd80d293b540c1bc170046d241a45373ae3bc49452af30d1f9e975a58c7f1569b77cf36a38557cd3fdafd697f85cf0320e6da08fb3277ac97e91b59de793982ad9e482aa34e5df85b0511a8d900edc1d602db8b313c9dbd823fc8466c03332188889fd600f4dda9216df19a0abc549978ea009e84c306e4eafb5533d23878c4d7a8bf6695199d0e9110d6c0a1aa51e15942db273e3aad40bc3d155ea852345b9a7c946596099ddc532ce6de3ca822e9061e89dd5a4c66a50d7506cad49b761145c8280c7374fa2816b3bb577875a10d792810792f17e975b2bf9819fb8483ee6d6a977bc4f37929890f768fb93f5c48784d1f4ad9276ee3f7000f69f607a12ea053f33a5da6c0503f5d7c81737f699cd059ea828229072843e86742053dac3bec6c898ff08ca74d604cfc6186f763641ffc6dd19d5319c5905b0750ecb0f0ef44c3c43985c20fab6e878b6cad72f6984541f4be4ad017cc3d1a3b596cf8908bcc1da24ba40129980fd5570935a70c608d1f522fb4bb3a59d06ed615e6cb35bf49626a8b4e074895d232df30561c390f3d7bb22ceb4b1911676ad0cf87d4edc45ba4b2ab215b2dba17a2627bbdbe46e5f7fed0363c0a980b3bbe9304fba92d85edfabbd4a7614f02843dd4c45ce39b565010989d4490d33f0288093a390c3d2b8a704ccdd1a479367d58b1f5b080b672e20359d65ec23b060edd081d881c68e94b862707d7d12083cd7377298d1cbca2e78997f1f7405e7d7b085ce8bed436fd0e1c6b2dbba79e8039c8f063152f8e6f2117925b455c7da5de9b46987b4b6cf042e7ede178da30b6c97ec5d258a595e55494b83cce2b430cf9220269cba6091732e3843724ee8fad562d2961507747abac9179a485467e609ecd2b9abb4d6ceba7ec20435b6611637f3c147402cfcb9115571a0a624db7ee274d81cdce55aa455c9b06672fd2e82094b8025392d7d07d4baf621974e641bb6690af2f14e6f39a30a4d50f009fb4c25002a5a973f836e5643f2d1992db0e96d037cf27df8c84f9a9ec699a066132f8fa64df9ec22a3a7d3700dae0f5c87a38564f3cec3346a6a63fa94c4d9500285d76b9a0f72935051a08b615a036a8898a44ea975d90acf55558ec00bd7f21aecf683f33322714723b5a645a108ad6e037130c05b7ac5e53954f30e5ca12c4570edf448a6885f5866d555e2e46f89d2508051f79ac37a83d105d90f838bac6c60c1a46bbe6d98ffebfff5d3097c66d20f25de878acd9ea50bf646ffaa666f7e6bde4f10de47a4e4c11a26b209b20ceec1b2508186e55733a06fdd93a2ed0a26ace6b1bed81ec1d3392e8e6e61ab66daadac1d9a4c3f20a5e6573c1b79235270c28f84f6efcbac1f740c0448ff5f9f18ca5aaa70908eacc36bd94f5cc8a55b8f6ea279763fd7700d46a8890b3e1bf8e5efd0e8b286a12b0a00153e54aa0e6eef269c29d2cb1c8d39883f843668dd49faf05f83c5f28181197fe14ea3238387d9c36740d4bc96f001ac4c7ce72f93889c740289bb95f31af729f770cb63705585ff1dd6d7cf698f07ab0a36166cd9be8efae6850a67e29246a6638e891db8e8f2b4aea8d8c374eab981e605a2018f801fc50d57c3126ce2bc0aec03ed2765a19a4d810283a57811a6788f287fce0adc8d1621ebc923893fd17c5ba98a6a10208e9b5d08df9275529e44f7818377ddcf84b592c32aab354f3d11d89c7ea94a0e1ae655a59509a028a16b01c2a5e893eb193460e0cbf9a0cecf75f15b2c9c4bb5ca64789192d379652f372497c48acf8f57b3ea84e916bcc90f72946ed11744584628a0a7b304b7108edb07acb0ffe3c616e0ed89ed1277b02ccd8e052cf2c07cd26cdd3def96b6921a0314881fc906a21a77cdb10a3c28375b11128e10ca30ab568700d7bc9e5ec475c09f6122a60855072e090b6e3c0f22d8f6e32911e2ece908ca303c14bb6b2f4d86c853fbd14a659e45e99b28a432394086062193047f3b4ed9bd52802144c224675052ca0cbd5775ae151654e5fbaed37eeca77e3f154c57d40627a6161160fb9233d946bc0df7dd9d957639f223abe253dcb239532510d30ec469fc21a69168e2ee1a476093579cc2b935e9bf18952151655b41d821c590d3b4b4c9610d98380fbadb0e80ace889aba23f1d950374242ececb1c33fad0a28b07b0789d527025d8c48a1019bd9a1dbd44f8e0cf02b93a0d58b1a835fd8df7e2d458a3b2e1d6aaf442debd531d38e53604a81a0f328ecabb0874298eac08c6b00d10d00c67083ee4588ca3d2c4117ff74389110163a09a35172875719dff1719e17a623c9a288a4d40289791338f57075ecf290901cb9a16a24dd44ef153aeeccc59489ea5afe22842f9aa2b00d44d5c3dbd99ec783d698067105b3d1ec94b9a62fc944698493a25949749998c0bc83d1650f1eb755dce8fc8a8a44e4a003201af3aea0b9479dea0bab670e2d7e7c9a5c0a7eb89114bfbf1205df630dda1a13f99dd0f3584c9b6a2b2b4a1dcc0edd2e26bbddb2ea1ba2ed0bda6fe433dfbed515d53fba6fc6c29383d5d9dbe4f4ef6b37eba688a3fcf898d3f6cb100c8c17346f691418eadb94da355d57aeff0747483739c6418d8fd4a87396f331ad6eecd306b9bc206f597fad3a1c720c1ea3995bd1a7d21d1cef25155f0f3cad954aef7fc0111f330b7a43bf9000ddff3d551a479b4958251e7929977cb2a334c282d97d38814da2279bc5bbb9c235ee1b2b262c0c805190b7e2f9d93603358977c5c4943f5f10198777bfe83d32e999d69e9e218ae94cf22101b548313ebdc725e42f0c21e6980dec34c818d888057705dc2787e94debf1c484de3f0c2a55bad43ce5ac0ca951fba3a8e67c4a1c6affaee03cc205ffebaa40b6b21ea0b936f03585d9e91482aea2c93ca96c8135ebe1c62172c29c9217bef68dad194a59a7de2e6e02e9fc270535b560eb33dba69fea2540962bef43aa7ba71c192e950516f0cb18d09680a1aa026a3aa2616552e431ed98da65467226be510edff4e867fe00ce058eec67835df1bd91d9a84e3d65c6e70dc9455b220ce7856948aeb9a0c05309fe55391c8a216253ab3f71c4e2572cf4e8b658b918cd33247460173cd93987809370b1a7fb22aded30ec784fd58ddab7f54e6e77054615a142e786b6dd22c53eaf8d5bbe4ed312aed3e0669ecac44ba8e6b01f0407fa4d7852ad84a1dd0388d89b113e532fc8e86a2e92a4db44be36a9660ae3edcac2b3667c214288979f028fdf48c9703d9d0ebe4c73b4b7daf382d0f9ab8ed8a73a69a0751fd7e55545279f2b1b2596be4816f039ffe0086c851fe3de2c323e548c290436126aca9e0a790a8eb8ae7f47ddfd12eda12b0beb127fd13562e38142f70bc05b8d34841ec6d7320143ce77d1abc30f28af95b6f4309b89812a90c7bee89e0600e4dace660754aafafa19678f30d167ea40087edd44ca83eeb803bde396073074508f81dfaea5c327d5e73a365883871059b19811ece84d924cb9de271fbf2eb6a5c09101c2bd88cbf5227f675351668dbca2c6ff8b37091a9d8cabe5fd28282ee6c7453c18ba824b72acc05cd562f80ca9cfca1d2ce5fad0d51d8f193dd2b1e67bce97b9d4b631221dccc7d16fd84a477676974dd69ad117d2a40bc93cb024a16ada6d4460d3ae571d545d94fbd7fc32657f20bf86f565f8a12418c982133b037d1eb744b47c60dad3075b6d52218fbff4f37cc147cf9f0f5db1872e3bbfe2e02d802b9ae330245e4cf0e9cb521dc9721737552ae7f23c2c34df63e01067825f41b9fdfebd443ea2b4614df89e70d2074406babf314b2f65c8a387202afbd6ead3a38b1faf7943d940428cc58215bc8b8e6dcb609b487a1c2ace5fd7625fdfd2b172b5e9d9e8f2bf133602db33384742cf1a9c7c0a93d217b6c6e55ecf1257153d1ff51d45d5f4ced14b34b69acade7ccb2507e7d2e486dd09f8709c53b27a3ffee56c45fc1d9ea0dd2181bf5cb720d12c79b6fbae7eb7caf81f895345e6fe770de44ebaf391c50d7333b38aaaff9decde03b7076bd5f6567e5f7b8b2ddb1d4bf3ad10b4884e5575b45849e06f6c6f9db0df5a7df63e30167f86c232483ddc8d079d1dbbc43685d943d516ac0ea873c6df7bf4f2560cd9bdba6a88d5e5602193008071310152b6df3813171cfbcbc669c7dd39bdfeaf198f229a2275abc4e2c283e6363b9ed6589aebc65bb764de2084262a94d52d20983fa4d1acd7c47720fe3e59c6cb9cfab7d25ed72c4248ae770a84c7f958ba16c5a849d8c4a34c5e566f91c9878c9ea3362f0dc870aaca00a234bd6932a2a96c0aec9cb7eb154f5b2a78b1858f92b30efc8d3bcb3594487ccd3009d0b5dfc8f7cc71da3ff7a67b87548ed6a4923af5549c00ccf829ccf7e1dc7b5ba4accbc1c30a457cc25ed4748546941a4784a5a6e2b6c14cf324c7c6ce51a1a116bff1bfc8212d524c33eaf866d3a983cea93dec2771654987c2fa3e5502e999e984d2c8983c6e969956c2b99d5844a37330dab19570672ec46a20746fee3e94207601c80619b4076e41e6e000ddd7755c718621200c54807f348d22158d3b4637c8e6291991ff7135546eb07d0ef2885f3532f9332155beecd3ba95dc90fad24359d1c3a484595b9ad6a4e1cd71d21586044049200b91ac42ff048708fde2d46ce2ef6e8cb82b68eb09b4a1ecca7af41353279ef9b3a06d1825162d57625ba41d8cb40b5adad9feb70b37c9d6e6c748d8d47131685c7f2b527dd495570a42975cd807270e7266c3ec755d33ed962dfff587b958bc83900ea1f16bbeb2a096c3d61c2442a4729201d02e040f52eb2dd0b4a192a27b322d3830396000f93b32dac38834c9151b751d606ef21d46db522677822e5029da946041a076fd906d8b62cc5a5ea0dcde4c16d385ab8466de7a3cf7261dd6dd1db27aa730c0a19839d26beb2f0a85948077ab064d82eb281c4ee4523ec56d3910d9f453d4c72b2759855ebeb1255ac7eb1183fdf9ad7594c2412aefe4cdff605d86934ca36e3c65186b4ce282e2fc5eec277373cb21f9e723bc433961a56cd2dcc78ed9d0066adf65af9e44ec5e060e9979391dda639fc2545eff99075841af1f98d9ea3e7fbb2cde8853b70a70184f650243e45cb25ff039364ada2e6620c279e7090309d517adc5df654cd5be0971f987e16126a3a9f833475ba006a85fbd50d17dba9fd388856f325dded527673627d50d83a1aaa9fe4399c2f414f568a42f1d9ae818e415e0c37838cdad6d4e183f6d8e9762d48a86b9df44ba07fcf22721fccd6f6bd789d3698c40e232943c03fd2554ada09168d9971860ba81eab4d8c9ec251131a2d30adc8a34abb731788dc71b5786e2d2cd02be6142576c281f2d1ecae39a76a6c735642efb5e44288080b8e4eeedbdfc78eb8e79fa6b5f976f019eb3b6f73d2a44544584d5dcf19b682325245a7f060f40e2369749d0e672aed9f84d8fd0643d2bff4078eb51dea6eca71877bf3c96a185a1c46542a4415d97c490a2d544d51ba1a3eafa92ef627ed212c9861772ad9ce3c92363ce1b920dc702c21fae63e140739c303f7a4a1df1aafde006591d664c33956dd4e482075fe9465197fa02fdd7b157fd5e36b12a5cbac92edde799e62fcacb9b39dc32afd03a5b9b9ee1054a2968e6fb57dca6a806e6830c12c43f6dfe74ba5f7a384ae24c0005205fbde620db4c2454b9ec847d2e95823012662341e0f4dc0b6d77b5b7b8f9c808529b2f7677e88ccebd89258c86231d734b2228061823743df46f80796413d2ac9ac01ccbb93fe359b91566421a41ed2b7db1e9c673adb56a8c27191b74a1d3a497dc150aff09b4d56c4c6a2e4e103fb7da8f74c67c2c64af36cf2d7c1e622c774604e9dbb82b2c81bffbbd0c3e02e3811d8b379d3370db743097eff790a6d8fc8ab5629ea6d5ed93e8d7857843f21dbe21c8f6a37ffb7efbfd9d1d97da88d14dee4e637f333e6143805df6add4520952a989e6e26fc36d4cd622cbb4396ca56cd2f593f36964ba75d82fdbd97decdc5270276e97316aaa9b88f7fdc0ddae0d772723286f9830115c5aa536884b00a5d20d49408e5392906ed93e82fc911e0075deb21cc6ea612ddb4c2d4092fb682284349f5ae50c4c08b880a7759f381942e29cbf39e75a3cf6456d27205022aac2563a7d095182c6c5e27894290ad340b23dfb85e4345e252777ec9f8eee93b4c0bf8b07a22b040a5b0a4dccf9b193b321522ce4a1bfd1fea21a2cdbe71c7e966e902009ca84fc66cf980def60a7c374495ed07721102dae41ccb8e4bb28fe239f9d6698be3f91d4f61bdbac766f17280916a3bf2dbeb7b808920b76ab4eb8453a2704805de8c504172cf95c8af61b1a543aed8fbdcf6d028a2fa5715287553886dc2b1bb4b2a1c590b11be5d4d9b4eff2268e6c4eb4a8cb113e0878aa1838782d64e68b7218f17c4e3f975c69885440bd86aacf4174533e94e046ce167d324e6d21d9acc8be93e832f76257916f9e0d13d085bd0fc7fd709673ae05e5a996781d6b18a4cdfa1e7ea3f1eb430e2008d5133c3191e60e73fcfd9499de9235fc33a0983dc02cb6cf29506c10146d50967e4ff2161bdf1f6b9b26b158a72d6b3b69861d68fa924014f610c153859f63dce540733a90d6fc30d76551083fe91e6925f5a813054cce118a5f6b6babee8cb2f88fa68f201ad5cac4e48f45a88675223c1a6d84e948f4169e7ba622e2e7e8d72b30b1257794aee333d9ca0e2b3a6685eb1243718f8f105532686075f37fd4a2e42185ada79abbd556f5bd4c35111001eda811159024e9d9e4ef97bda18e1c8309ff1bae1bc385218240f6204c8f34ad8834c69416593af58d637a22885dcaba4433774b4e7cb298d94a90249fa6c1eabf768f55f56c40d6896d4719bd71cff26275d7daf2eaa178e15ab30dc0f5db2f8e0178aecbacc339f13743bd78ad6779c1666e1ee25b7c6162874d9dc45cad690a94cea8033b30cd3604f191adf7266062a0316ecb08a14572f9b516dba02bd20e13f5b92257a356bf13591c422c19ad44fb8d56c049b0ed826d4a895e973c86510ea4c0f8a2a8047a6e3c9aa00f6cc6a872b531d39eb12f4bc391bc17678c3cf10ad7027507af727185dbbe4180fb84c6349cfef098aaa978bd05eee28d96ee3e025864d97a62db67aba2159e71eea3eef6b422c59f89e557a3253efa449f8e6a82c259ece88eb5b4b12c21a3a56ca89e999e4b075a0bbf255a04e1b0630b0c1768f9f985968e4271005f6c024f661b5ac165dbf1ea2781166fc2a2edf020a377b4ec90190a0df8e24b3424bac4836531b2533369f940f0987bca7ff301503f37d6f1adc80d22afca43acb1acc12bbebfbdd81f67e8dfbce28168fa8a83514ef420905fbe57da325325845332c93485440a56da69ba391ede1bdbf0aa7523a9c4596e8c2bfb8dc02c8f19b5f7be48bd6080b55294e27cd3e31e69dcd2de312c08c989c60d3f70e30d0239c715b72df55f95af1bfa84f1ea75402a39253fd3a2a93b74ab75fb7945fdf63a315fee67657f6d88efd3107d43376995e8ba9cb17cb4540575b4974530b175c7e9fcd036e53d7b4bbef2fafcb412ac5ef315bb7f930661e562c5259ea1934aa7141b1299f5bc1646d4af1360078172e3057a2730d2ed8595120a73ca6b04b662146854beab9b5223a45d96b536643ab2d87d8c4d5e59f497f9476781ff1ace970af3ff359530180b0fa2c9b0175617821eb80ef376c0e4c3d80d13dea8b8faf82e4b5e6c0b64729dc9ad90bea50ab8de6c008b77be8ab07d90919561c29efcf4794ec2730bccc5a24e5329cdd3671f1088521319774cba53b2eaeecb5a1404f3b135b10d15f06ba88400271de5cad844f3bac4d91a165df9dd7815bf41172a42fb68e9d32aab2ce36c47d12466393444cb8ec718f55b44da41afa39370d921c95e1c1e5e12acb2dd8db0171db576fe9f3278d44693ce8a5c277306e43d8282ce84a9d666da4f40ee93a55f1785146a2bcd1254f68d0f53f771ff749529c5074655e99cc4b7f43fe97d1681b6c0f9d4e58bed9f12d77cee8258c1cbb75c98306bc287a4cca25032812792eced7baffbae065b83195f0bbc4bfdabe95249d6afc591c0de6960bdd14647d75378ee92e9cfd562b6b4485d03e4bcb3685f302e7ef0976b3caf697887b828f9a2a16ab3d4f5dc585550154aa11e37bcf53c59005e0e45f8c9dda6bd080cbfd030caa7fe182625105961d706b8971dde68d88c1582abfedabbd7f7d9d1d65c695a2c26b08573ffa6ff3b5f08f6e9eb0bf5d97f5bbc2bc89d844fdc63a344be7ec799721c961ea7ffd29d4116ca16ec30a913afc2668f6fbd992fe77464f8adbf5653ec76b0299ebf3e1da8c3939c02a6441b3962796124a67a25be0c39fed8a1cb2e67e4a2c6396b1c5eceba3ebb20c642f4a3e5be7c948432b489b45397a9496b9b983ef79a068ce84a0fdc74837993362f223baabea575253f4f487a94891ea85c7c5987eaa9c35cc076204163e5767bbfe62a634af68e6b6c95c46c520576ae37c963dcd339b485c24566830c278adf513116985e814bb9971ac040ff116ef2fb39f23109d51257ff71f85a72ab3874646c3f0cc4fc006fe39ef037baee7a526eff6b84d01404b7177be461437d9f38254ee6065401fe0cdd55d76eeb552c6bed224cfbc43660283cecc32346ee10da6d1480f3f79520f61f07cd8a1f8cfa10e618fb06f2bd673e73ce8c073e846530e55a2a4dd15408696b4680c67dc3633c0455db07d910d598105e4508177bf370f7607fa84570fa0d4d536423a11b08a7159a1bd0c2bf402602db689220cf62c0b106a73292bcfb8218c5cdf9b3b792e9034d568f34a149b0c1e6091e7d6c1a9dd8feb60e07a2b9b161eff3a707f59a3d41c8de5517061e6b81908bb439ed47f9d930b8c886e1ea3214e28cfcc6d6e675d2f65b92597d92a3676c9456319944c3388edd6cd7ec3e2abae5a176f032ea62d14efd2332d95f565305ed7d6d6454c599f52dfb1c9f481a283595bb53e99c8d7f49ff15a2c02b32dc972cbf7c6632118b32bf880107c3740176667bac7ea34f18fc4f7176fd1e0ccec375ee0ea406694bfa5e35922da6eaab14d86654c170bbc62887dc2ada0587dd4597be12f05a22797c064c001d8067b1cbdb9e4407d62267468ea42822e76cabc4ce5ca79a35c4c2dcf07024afc076a47019f750602628003d796059efebed6c3fd2ef0cb810f0f7e500f2cd12d1bf510b21a029b108f1ccebc145b0ca03de32a4db71c0d2888cc68ab12cb2fa32b845f0d8d6d865fc283bc236abf00f8aa03aec641f80b0fb3b34fd2fbeaab35e19de53388da9d5edf8bbbacf516d8beb9b42ab6b9f4127767e85f243a0d60cd0025bfd12ebd367f080665fd68fc5f08c3d9fce5dcac541444e9ea116985839edfa83ab2dfe8b2a73652733d8f6f00d2ab24e6199c0943d3653208b0351e8a1b421c61754bee3e11ac51122e6720568e3ca4db3835aa640553d23170380e488b8a19b6637a051cc00fc7116d86a4c310a9a8b9277cb142f4c23656683966778be8e6530a3ce3a3ed0a507579446011bb5da4af036c5ccd034bec5c7f00d601a83dd75bff605fe9b5e066fdf65e14398e2bf83e0f36e98ee0fa74b20adb0d34e775ea90dbd3ea4a5805226f534ff9883001fe878908018c083e2e9f1ea993fa689cf92c4e262c319a474e9ba8ceb38d74520c6a797731153b141e5062c6056b08b815bab847e61d8472a6bd315abf628ae53f8b6945e7aced93f4711c57785f617040b8523164bb1e154c08efab5d241adc1c337080316c977949b1ea31397085f844adbbfda7b68ed1d2a3a287cf29b4fc51288e32b59e34885a654276f0f7206af88b680b7fc7a82eeb280ac6d1ea37e502b11a1de82554ce7eddd142531d4cb63a06f8c1cdfbf8bf6ca75dfbaace6fd7529cbec9c02c67f5db9d91a8d1ad47d21830b2642fcff12454a24235d3300d0fa89f6d8074816dfdcf203f2efc8070718010f00f3eeac62f038ddc72f3759110249aa51f2aaad7476fbfaaa00b8186cd227204813f21e0d47b82b3f7d000e135700ea945f0851c573a274e8b45bad93c4eb5c71d234fb1104083433f73eae5e8d84f8c8d297eca215bf89eba9f8ea536faeb411844cb1c056b87a7acaa0243c3f5884246be283f843c2168e7232925e8d99f1b62790d8fdcd3d331a5f83ea3e88851774c1d607bd1a06220b050aaa4de5d428e1e94547ccc220ac34dfd1b8c060a4bff3bc8f2b38246e8cb0fcdd0a29236da93c7d36a2df18c6406ace0f09a6670263258a0d9188da9a77e9cd3072453ff6fbd1729474cb6da79fe87c9745bd0ce650be781d36e3253a31243c5db7ff94b606c51cc35b29267a473d414138fba6dc1279d2ab30d593ac2b2879eefbd42bf13abeb445cd5e1848fe7516b4c3059d404c8264545301ed783e8fa39db0a2da8af8a37f64140b267b1359f441ada37824bd672811a4d2abd972cadd2fe8f4af336029d142b54d08df7accc7c09bc08c280d3e437e274c081bbeedc04716cfc8f21ac47bbd306d12a8bf006666369f45312a2b7b4ac1b138c5b9e4617a0bd4cc3076daa76e50a2d90208bc4b92bea144152f08b03a7a13cab3db4642fde0d1d65334d41f5b80be98440a0807f8c09b1a0eec262672ab9dc7eecf148eee5d72392191125e5194215552de25f0bb944c0f26cca167751efdbe49d3e00a11e18d571669d3a640c9d030151b564f983828b4d02486fd56c060cb62b11cb9b5f629cb644654f8105a4dc66ae007dd529034a6305931f4998ae3a463ccdb6c8d72f1feb761133592d03ce7fe5b2eedc5167a86d9f43c6340b2f6587103f38070f38d5eeaaadce213635e5565e2c7d721fa128b32b3a111e77aa9e9d1ee7339fecddc8edc5104c85c0adf129d0387c7f1e0c2dd1989ef33af617a6ac2186ecb84762b5019e22164ee66a825d552bf9d401b6c50d4f2c9beb33daa191a3ae4323559a0034add4c4e3b95ae82b46b5fcbe76ce6201fd08d9bf2ab242025fdbdd93d0feddcfd89f94f7d1931cda82d0b384a95688e92f66b36832276539025bb9b0c08b83437e70c43e676271a94299bf2f5d5833acc5cca7463f5eab78a32a93bf05f8e23ab3e2d09cbe60a3293fd4be97659348399759bcf8c40f3de9a6dd9ff4b8c50f5605f1d3d30bb35cb9f485ac14dede79dd1e1ba2fbda12362cd05b8711619127091a09176126f7c80d57c4c09a843c4e6bd04cc216a75755dd35333fa72772ebea9eccc4c3d1f04b5b7779d02d44fe1cc6d5eff261a69e8864cbfd51b23ff7c0788865789d178b0fcc2ac86e23c02e68ee44e4a961f1de43489bcc2f93f4d5b66c64a5abfd91917ed6f293d9ae870314771a85fafcd2f4eb80b6598b28b2c473ffcf7a1207b7876be71b1f3c019bc9cf7da189a8467ffb8695ac8f628d18f4a9bf6ee40e6c2149ac0af8b2c51c75a5e45e2fb84de069d6aab9d592df30768b67e1cd6b1c8080f424281f57c7248dfefe416c66050b86b5680496571e283502a5c218741af95d7641110ce6060c21f68e29f09af5982883e44ba0856120971cf18b5683a6982e848c04ae6f295a9819d5ddc55925d89ba7bf0e14241dffdd4e9693bfa8505afaca693427d1336ebbd97121b4a4dbc25ca400064761e269a37f99e433adc43a166a1af860379c627e3a322800482a90d6ea5940c2baf75ef9cc627654dc4eeb0fa2b6cafd1eab02870655b98bba8d5b239d3cd6d005e9133aff1769b096f7e24b513d6dead096c074b6e7bab177d2e89bdc840dd9561525cccfd7ec1d599357ba56ee7d314b6e08b00ce8ce5f1546f7e5a1eff6820fb5c5f9aa83c241b097fbc9f7a4509d9d6ada48f302fc8161c3a0a3ebf810564ec893326205bc8a853de28df375585ab65eeca5517812ea2baed2040ff97692a4557f4c726e6bc0f6a0598f1778d59dc38c26f0918c7e68faf6dfa1ee5de31a157351a7768c216d5f2b787caf4a455739230d2ac9a4f594c577852107f357b793221586b08852af791db596f1c8a571fe1e554c97b0cc9af2df904c23dbd4df12d96d385b3a79ebb8992621f79a36e37f22101346c2767b10d6a69e962827268d0caa1adba23ee12aecaf2947bcefccc4ad1ed42541868ca3bc687e8aff457acfcf627ac41767844388f549bac796e8185407e45846f0a3c5870c736e9532818a09b503566abeec4b91d270f6f18fa2995488a2661f79996e45385b043937f98b19aa6a0bf5eb86379725f99331d1a1d24f81fba08a132d1790e0a7823cc108a5413fc89763b8dbd418b8265725dcf81d489d08b523da0013e6ee36af578042e6a3128d19c2fe987efeed0c6566894298ce0f178b3ec470496368eb605756cb296704bcf5a15b0cf5edf7f23498aa99a1464253f24123c7744a7d5f7d049fcde2c61d16c37ee3f854ff1e7d26ebdfb79b0a123c4087d654198212333a4247748b46974d4d6b0c8e56cbfb874a20c80f2e64eb6977ffd67ab4e454084cfc0e7d1d65ac627c8cb520c00358087c1dc47b0e0bd4b139f424cb76de3c5ead2cf6492fd6e46688d5371355db4ddec878c5ac175e481a4b8d3a9235af326fcff664ea8c0549b76da1f4746d6a75233a2e0e63399c24273fade2459ab8cbb03e8335370415f343ab88965ae540fd7febaf25a74953c661622e8ad6bc646fc7a64d5bc0c17c730b77545ff81573ce232f764a255ae3371e8299e3c3682b2c1fdf74260ce6b90e379f75119d22b0c9d5d6366f7ca42c2a7030a3de1f6d91846ccafc30f90f09da80d872a6a4062f6b2b58ca0396ab95b381ac643fd7d5e0824329aa472f6ff9903caf16f1e64edaa1f332efee0cc500301a90c1376389161ae0f8a9801516c9070c0c0c4152b7f309cbe831dccb782403dd45b96f2907c5b31fe5100949fa543cad5c34a557668b067b01672041db87f9ad0ce4378f4ff2c9ea9776153a4d424937382e8a7aef51ecd50915422bf6247d0d7c0e130678c0c9155a18462a580d94ab32c614a568198aedf24f29100fc23d5db9e60068d44c2d0081523cd22310422dcd6d39f64671417d7796425d709508bd8acf5017d346409aec8fae83f2837ce24ef8dce87207baadff5d9efe78dd8a0923bc7d1407d7f66d528e2a9b2ac455c2ed1bf4a553959fbfe67952aa6f033ea1223fc463069585c464fc4b98a9479e539daea3aaf21563d86499fe812c128b364647deda69f9276d6a4b7bc9ea7124fcb24f5377eed3e423bbe080d4326ca83bd9b4a73d7a63250b261250d2e67e56e1813a4b089c7164a2c3d4249bd8250f7ead62cefbb9adedb2df44b4db7fbfdc6c22c0d94983321fb0fa258454624bba58f24b9912ce20dfec72c91386dac323e334d5905f3483da9a7b89576133ce58dbf55d52819e15158badbc95bba7395c5f4fa1f778970cd0255ec88dad9effe0148902293c491ad7bedcef91907c4a51db1a507894ff97a7744e87561b6d877cb58c99f164e48abae35dbd52ea68f13bfd36876caf880a23e73318c3b2857933f22f494c0188458def4319c82254544e02da502df3ec0701ac981a1388495aff88770a9b2b7a12783a12f55a3e2f95efe16931bf4d8a2cf1801a04f7337965ebdb2ecf886568af3f2b99e01fe79e60dfa2fb79afedcda58fbc58ecd76eb16973afb57d39a1c9607ae721c663dbac4209e4acc545e61346a4f5d9b33cc15fcc8ce51f72e388b5a88f23817e09318aa5ad9cd98d0d04177a2b04c98d15b82cffee7a66029c0c12ed5bb6bf80239dece1d257482b9957442398e8b95c5ea830c57c1b1e16c7fa15e105d9940bfc90782498d62c55dc58072dd990d96489d58b00e66da057e97856f74688755fc6243da07a9ada6a9c78d469df536e5b70dbb11a0cd7008465bee978892f765492c331926c91c5cb13dc23587a9accddf4633563486c2a61cba0d82a84803862aac5a2940e45a5261135d046c8924aeff5b726eaaced57eb386210ab534158cf40d3891e99844a14cc8f70d00c6c9a99ea48059a1c73966439d17dc503ec77adb433cf012313410f58ae56320d498cff9a75e8a96253a019a239c7cff614b8d4e1681c70e16a1f3c7138a2d1d19705fc6bfa23e29c871f36840cc4fbf6f01ab8ea54d5410ebaaeaffe55ef2958f416873d356a055fc04fe420ad9d85792a34a9bc24ead99e37d3b5595c6d6f40605e7e7ca1ce5a28ce3b52ef880bf704ad652de26acae1dd870edcfde18f46021f5cc386958f3d1859c2704941cd518116ecacb013e630ef11e7b88614567ac6d3029cac3386f7ead0bd61e0dc5de164007ef618060a95e4938c7eb30b35de889274a4e4bb94a534810efe657945286a12205c6c03c6dd6d680628a4ffbad9d9caf064372c1e9f274c5186c563e95ae94f18016958f6de4cbaed7176a11432371120f8d6e4c9daff4504626d655d173e6f8a7cbea0e7db1d212579875b1fb81db845242e188e1a5dcea92c028e09ab82db5b3a586d62db8d4bba84726c1c23204139c8853f5c887874e11dd68cca1a3ef618b235b97ba3f8d75106c6aa7638abdd09f2088e49fc51d605a78ada312d0f86b96eeec52fe24c15c8a8f993aaf18baeb8da5be3e00530e7a57d6df8dde2f1a8de55c48c2e4f7497c70b13048899d39ae4b4685d4f496497a8c6e94da0cfb709d739037e7bca8b46ff715663ce1786142e50fb437c4acd98ef9000b6099de7cdd13e8a5b296b8fd8e4772683f55d9cf884df8a9524aa6718b28c1eaaddfeb9a31bb5f9da04f255007e1cb15e3ea212535605b5c9e8bf5328d55bbf9e22ea1637eb71e9a5cedaf2d04618b4e9a9630588bd2aaa20d99ddb9a718171faa3637c6688a3a0b8695994df5e829dccc0b863106c82be2b40f0c878ade0320f7937e287c2b89ff9124b874042a7b895f13de1443ad6a63cf940ba250197b4705a3a59f34005b6e5751b12d2e7df6477eec19e7d9afa174b7021a1d5fd1f9211461a5ffecd2f224ab7a864f5bce7a41e63ccdbbc164bbb03d53b9e3635c53a9f325ec8f167abe3b39228ad3dfc88c0cae40875e9f23f7c8f1cbd261f1cd35f7fd5c3e9cdd7b1bd80131a4fb469323a3ed73204dbb4b4902d95ac396b2f45c2643923ff9b702873299a9792ef917c50ec0da438c8a8385efa2fc6ded2999253d93ec7f77d93e9f27502ab7f0f03227f9dccb1179c2ea40fcb577c07643fdc4d1eadbb7753ed254c839b9fd95c87d4cade5ba7243a7abbe44ee3598a09e11e2de15bfdd8ad58cbb34a45fcd6767d480b074a369c80890cd09bfb35c1e62cf6c7bda74d4ada9d454b7a2ae5a5864bc1efccf030ff6bd22c08363e76d0cb8c518609c3971ad28c2c540631dae2d9a3ed96eb5f3f43a4a063dbf6ce04cf0b4c85d9de3925efbc7e42225a422821ce2eda4391928f188a2c18f5c02e690abbbd3282746f7318ba2eb3d7a24eac18c54af32ceb9cf150f641de5c5ae3b9df8ea178b46c9894888afdaa27a3cd59484b3acabac4ac5e2f24f4da8449a64f044f38cb84ac2070cfaeab4ce09edf63da44a6908c44d0fbfd0bb35cd4f9bbc8e173ab514823e12ad2e463c834921cb92221b9e30b3cadd14ef7229431380b4070f586214af6745721ef0fad58f62c1dc6aaf8996d870c92144711bc44e2be8b0f96b2607cb24409cc0ce734dbbc9ef5168629af9c91a286aed66da98b0892ed436e87d6123b968c646912b263247cd1e50a9d039ae24d5728b974f85de1766e7300f1cdec7d8bf350d213ea5d7e59e2c7b18ad74a9ac89e57807df92c15c8860343f7d95020dba2b0994c7cde4a5d21bfcbf1e3cc50f3bbb64c7bee472812bd6e1ce1301ca8a5e7b0bfe3aefd941cf56525ad243578923b6e9c63d2c8d1c66cbc380116c649f481daba40e3083a55599ece93e0ad2a2a5aa1f973ee1714d6d490b860e4433600be0e1c367d1ec3dbfd7ff5cd1027554f51c2f111aca6229fb78d13a312ca1080dc391957393ed13aa0504cb9870251ee5eba24af83d5f1c41220639f63d33381e8f33bc5c71ed0f38b8fe80c98d99ff83a34a35f68318c51bb947ff7b4b3baa2a36391c8329b8158b9a4bc378770c904fae94dff4b45a6a9e6a2a5e9ded4ca281e66afc789c090401daa40b86856d107b4dd396901d708c8e349585df31fd06847ac75c50c84d064ea14307d4ffbcc382168bd58ca8b60be07ae4a9f67b98a4abbdd460a122240109908c913415abbba6fb54faeefb2117b1685cd49043d4ba5f8da6dc3fbf5c64e6f8a16ebfac902d11312636dce6cd3b5972961f9fa34c81f2351767eb69e127bd426e46699937c9edc0528f3cf07193f930ebb1c40d02c8fc3f99b5affe4d1749037d7a313051539ff09c5e756e3da7b3d38b1f56026b4ccfb93291102d6a8782c59b0ef0ef5d107afde7985d8dcbc0b9a7958433d3ceefb2b63e6da3e142a52a3a1210a6293938c7f9f09e6d7b0c39779b617d3a2ef86556ebc7027e5c6d48b44ea5e603cbe5039d1ad8f7bcc055fa4e2b34480eef1dbb89b9aeb549868b7989be0e233287ef53debb9593c2d4bdc2795a0169940640f0c0d1fecf28ef8c6307bd28e1f14998d86ec6b2659a33d6247f2d564c627270a6540edb41b5d88e0e9277801fff07f70de7c1b590505e6aa2717ce82d1ca0d5661bfb36b39fb2a62648f7e7d4a46fe80424ec2734500a6ada428a3886b056c364c860809e32e8e366fef7c6f346a53f43840cca3e8bbe3348a9b269455fcd5713e1002caf6d54da285f086a2b9ca6e78fac2fc9b64fddc92388b5ba9d23fca01419877c53456ba9fa8f7b6beb8b25e8e76cdd6c7487209ee513c1815b0983efc17de62bae939b6ef65e0381e9006d7024264bc4ea58afaee700399830d261055d9273adff67b97ded00407516471b29fe965a9ffacd27e12828330b089c570ce7c8c132cd0e0c249ce47551a2d9b3ef38db9986e42cb065ac734765d83ff7c85d964d67a29ef1bbe7c026847c2d634151290dfebb1970924ff55970341a8b1a9198e6460eebf32fde01b2815f9d658d85673396862cf8e1bc1b49b01996851c43d75d1345f80c74e0235ed5cd3cd677dbae605eb13e1970b9a73af4d8ba14db936c182e4629f83f3f45c991bc8e06d4754aca99cf3e6f3fb746c1557685ba0bb87934c5a00368b2cdfe49bbbd956b8834df031f7df769435d91032298333c317559f2b83b203acf234b9d6ca1841d36659db09e379666c0957cc24c293d15f2e8803d381a6cf3d13030a3043ba35bde9b5f466d35bdee3b186ae22ae229af71a1c786cb86638af7c49564c42a8c876b386d55bd115ed52261dd2b96ac712b3e9d9421ff266af776130c17a108487e6c678380bbbd2ba055137d6e0a70a5f91c853d4a7844e87204cfaaf8d7ed0a1b090b8405f8cf3dbbdc9b6277df81f59ea95b1c08acca49e62ecefed651af60f60bb0f57923e9ac3fdcdfb4683c712f6fe863bb22ec9e4dd04d14fb1ec47bd3416d3dfadb7f55f9d4013daf0516a257bc7d7d9e234678ad6e001894fd1291dacf947060228bda33b131ada0be032caa7351472a6e53bc1696bca9837fceac714fb2fdf47e8e628715d2c0fd3a486d165a6d5d8e52bf514a98f258a0a3150ec46d4c2d8b24dc480e82759aa968bf962e6852030f5173d2a06203a48c83247471291bcb2f268ba6f95c01054e2b61d510f0048c1d3cb5abb9696bf4d99f1dc29c2884e1c55e2f0eeeb54381d2a982d69c2d322d708927321103eec2f92c13b94f1eff6aadaab2a09404554fb3baa9e32afbf9c624ee1ab1fc9a1390d091aafba82d50f80c60929eee8c0c1aa10d8bcbdd89bdbfa8b5c4c9b9f0e1051be6c75afbe4a3ecf92ae29f0f83fc9203ee3c5f40c3a524d9470be120f650747a6f9c11dc1bd2b53aa1a2c36c44363a559d9ea2492137e1f5acfec46d5f324fd0f6c8a874725068cc11382c6199f18c61ad718a40891b9d9bb89eabfcedd81b37f6dff6d61fedc1867bb25a6d07ce95d5eafd504b642b249bec3c751126180801df986838b403a51a4cff3f0f0c2b4e4f55deef52566b73d89252f228b100847d9c9dedd719ffdd01d2ab593059f684dd71d36f94fcfd4dac3c701d07bc962a57d97310300198f5af0505b7f4b2c48cfb3131cc99c71b11439285f81bfa33f0676fce12915abc27cd2d802f66620ccdc8607c002fa94f1cf0c8884e578ab3b66c1f04979cda24fda44688b25e721b241684ff8ca4aaf9f226e3db32f78877c9648b1009bdbbe2ddc2d35fc616357ec388ed6ba9b9766b673171977e17025a1e51bead386d83ea4d22e4f75df02cc326a902197d7ca9c049cb8cd819d89e51a45ad966aed43ff8f16a2323add45fff4accc30ed38cbff4458c89bab218e63bd26c7d62e27aa4c4dd538012b0992b3dc49e313230a29b75af81b2d25c8f6752a3ea32c73495e4e426b921e3e738de50dfe8383074e06f94f3b5b194ebc678ecf4b0801527a94dddb18674f01bb154511086963b68a16b393ab99d24fdc90291f71a97ab3e3f5ced2a319757fcbb318b711dddc883e78871d604332e5866c22c457543f7e1b26895c00917eba2a432e5ac2f7a3dc4cee67947707e2f405b91b93c305952c5d3103907ced39b9fad28a2836579c0ebe4646f1527257b8ae7797b95662a988b2b35f3abd06344042e60080b2400dd22f5f85fc28dccc4d36bf298f44ed43837ef1e93c8f439d63bd8d68b5f5623081679ab01af4ddeb3ed748971a2d1e1c4f82771b0a747a08c98c8ec6d864118fb336d524905b2741c024e5a6d1e94cf6c8c0878096afecab1c813913f1399c4e10d352ff7288b1dd2e5e909c380d229e992522abe19197ea20de34408fe7891d1e111ecb5676a9d11b1ece7ea1bead5c918216adbf7738758048c8c05c33cdfff6f3c07159df1a1c2a18e02d02c03935400e408625a98394ef912bf67ed50e3cd9bde5b4a7c9e01bc09bc90bfbd167f98245ed61edc505cdda73de22492ea91c2a39496698bf4a19eb3001af1d33ad248781b32cf9f5e1ddfe6b370aac49994ff63f1dc8bb00c9597e75530dc40266e4f9de045b5b412421815c3b15972e580f8e843de15104ff05b7a54fae9c526f39c6ece521108131ddc0fec0e6db67a0c494b9be90274d37b5ee68</script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>
      </label>
    </div>
  </div>
</div>
<link href="/css/hbe.style.css" rel="stylesheet" type="text/css"><script data-swup-reload-script type="module" src="/js/plugins/hbe.js"></script>
<script data-swup-reload-script type="module">
import {initHBE} from "/js/plugins/hbe.js";
  console.log("hexo-blog-encrypt: loaded.");
    initHBE();
</script>
]]></content>
      <categories>
        <category>Scientific Research</category>
      </categories>
  </entry>
  <entry>
    <title>WSL2换源与科学上网</title>
    <url>/2023/08/29/wsl2%E6%8D%A2%E6%BA%90-%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/</url>
    <content><![CDATA[<h2 id="wsl2换源"><a href="#wsl2换源" class="headerlink" title="wsl2换源"></a>wsl2换源</h2><p>安装wsl2之后，由于国内有墙的原因，为了提高下载软件的速度，需要将软件源更换为国内的镜像源。</p>
<p>刚安装好好，将原来的软件源进行备份：</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">sudo <span class="built_in">cp</span> /etc/apt/sources.list /etc/apt/sources.list.bak</span><br></pre></td></tr></table></figure></div>

<p>打开sources.list文件，对源进行替换</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">sudo vim /etc/apt/sources.list</span><br></pre></td></tr></table></figure></div>

<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/08/29/wsl2%E6%8D%A2%E6%BA%90-%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/fig_1.png"
                      class="" width="600"
                >

<p>输入<code>:%s/archive.ubuntu.com/mirrors.aliyun.com/g</code></p>
<p>该命令将文本内所有的”archive.ubuntu.com”更换为”mirrors.aliyun.com”</p>
<p>输入<code>:wq</code>保存并退出。</p>
<p>然后执行</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt update</span><br></pre></td></tr></table></figure></div>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt upgrade</span><br></pre></td></tr></table></figure></div>
<p>换源完成</p>
<h2 id="科学上网"><a href="#科学上网" class="headerlink" title="科学上网"></a>科学上网</h2><p>理论上来说，如果平时使用Clash for windows，是可以直接将windows的梯子在wsl2里面继续搭的，但是我试了很多次都没能成功，于是换一种办法。</p>
<p>下载clash和配置文件，从windows直接传到wsl2上，然后再进行配置。</p>
<p>具体步骤如下</p>
<p><a class="link"   href="https://bbs.huaweicloud.com/blogs/405107" >WSL2 ubuntu 配置clash代理科学上网 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p>这里有个错误, 对于xxxx.gz文件, 不能用<code>tar -xvf</code>, 应该用<code>gunzip xxx.gz</code></p>
<p>例如对于<code>clash.gz</code>文件</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">gunzip clash.gz</span><br></pre></td></tr></table></figure></div>
<p>得到名字为<code>clash</code>的文件.</p>
]]></content>
      <categories>
        <category>Basic Computer Programming</category>
      </categories>
  </entry>
  <entry>
    <title>制导飞镖结构设计</title>
    <url>/2023/05/27/%E5%88%B6%E5%AF%BC%E9%A3%9E%E9%95%96%E7%BB%93%E6%9E%84%E8%AE%BE%E8%AE%A1/</url>
    <content><![CDATA[<h2 id="整体规划"><a href="#整体规划" class="headerlink" title="整体规划"></a>整体规划</h2><ol>
<li>第一代飞镖设计出整体气动外形，没有动力和舵面控制，利用摩擦轮无控制发射；</li>
<li>第二代飞镖加入动力系统和舵面控制姿态，通过IMU进行自稳控制；</li>
<li>第三代飞镖加入视觉识别，实现末端制导；</li>
</ol>
<h2 id="Profili2联合SolidWorks绘制翼型"><a href="#Profili2联合SolidWorks绘制翼型" class="headerlink" title="Profili2联合SolidWorks绘制翼型"></a>Profili2联合SolidWorks绘制翼型</h2><h3 id="Profili导入翼型"><a href="#Profili导入翼型" class="headerlink" title="Profili导入翼型"></a>Profili导入翼型</h3><p>进入profili2，选择第二个图标：</p>
<img lazyload="" src="/images/loading.svg" data-src="/2023/05/27/%E5%88%B6%E5%AF%BC%E9%A3%9E%E9%95%96%E7%BB%93%E6%9E%84%E8%AE%BE%E8%AE%A1/fig_1.png" class="" width="500">

<p>选择对应的参数，设置如下：</p>
<img lazyload="" src="/images/loading.svg" data-src="/2023/05/27/%E5%88%B6%E5%AF%BC%E9%A3%9E%E9%95%96%E7%BB%93%E6%9E%84%E8%AE%BE%E8%AE%A1/fig_2.png" class="" width="500">

<p>选择保存图像</p>
<img lazyload="" src="/images/loading.svg" data-src="/2023/05/27/%E5%88%B6%E5%AF%BC%E9%A3%9E%E9%95%96%E7%BB%93%E6%9E%84%E8%AE%BE%E8%AE%A1/fig_3.png" class="" width="500">

<p>点击OK后，另存为dat文件到一个文件夹中。</p>
<img lazyload="" src="/images/loading.svg" data-src="/2023/05/27/%E5%88%B6%E5%AF%BC%E9%A3%9E%E9%95%96%E7%BB%93%E6%9E%84%E8%AE%BE%E8%AE%A1/fig_4.png" class="" width="500">

<p>用Excel打开，删去第一行，在第三列全添加0，将文件另存为<code>.txt</code></p>
<img lazyload="" src="/images/loading.svg" data-src="/2023/05/27/%E5%88%B6%E5%AF%BC%E9%A3%9E%E9%95%96%E7%BB%93%E6%9E%84%E8%AE%BE%E8%AE%A1/fig_5.png" class="" width="500">

<p>在Soildworks中，选择<code>插入</code>，<code>曲线</code>中选择<code>通过XYZ点的曲线...</code></p>
<img lazyload="" src="/images/loading.svg" data-src="/2023/05/27/%E5%88%B6%E5%AF%BC%E9%A3%9E%E9%95%96%E7%BB%93%E6%9E%84%E8%AE%BE%E8%AE%A1/fig_6.png" class="" width="500">

<p>选择<code>浏览</code>之后，需要更改文件类型才可以进行搜索到<code>.txt</code>文件；</p>
<img lazyload="" src="/images/loading.svg" data-src="/2023/05/27/%E5%88%B6%E5%AF%BC%E9%A3%9E%E9%95%96%E7%BB%93%E6%9E%84%E8%AE%BE%E8%AE%A1/fig_7.png" class="" width="500">

<p>最后通过在前视基准面中新建草图，将曲线转换为实体，便可以得到曲线图。</p>

  <div class="note p-4 mb-4 rounded-small info">
    <p>💡小技巧：制作三角翼的时候，只要在Excel的表格上x轴坐标加上对应的数字即可使得翼型在x轴上平移。</p>

  </div>

<h3 id="SolidWorks绘制飞行器"><a href="#SolidWorks绘制飞行器" class="headerlink" title="SolidWorks绘制飞行器"></a>SolidWorks绘制飞行器</h3><p>初步设计的参数：</p>
<ul>
<li>翼梢：30mm</li>
<li>翼根：210mm</li>
</ul>
<p>考虑强度的情况下，设计5根碳板厚度为1mm，翼肋间距为12+12+12+10+10mm。</p>
<img lazyload="" src="/images/loading.svg" data-src="/2023/05/27/%E5%88%B6%E5%AF%BC%E9%A3%9E%E9%95%96%E7%BB%93%E6%9E%84%E8%AE%BE%E8%AE%A1/fig_8.png" class="" width="200">

<p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -0.439ex;" xmlns="http://www.w3.org/2000/svg" width="39.214ex" height="1.946ex" role="img" focusable="false" viewBox="0 -666 17332.7 860"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mn" transform="translate(562,-150) scale(0.707)"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path></g></g><g data-mml-node="mo" transform="translate(1243.3,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(2299.1,0)"><path data-c="35" d="M164 157Q164 133 148 117T109 101H102Q148 22 224 22Q294 22 326 82Q345 115 345 210Q345 313 318 349Q292 382 260 382H254Q176 382 136 314Q132 307 129 306T114 304Q97 304 95 310Q93 314 93 485V614Q93 664 98 664Q100 666 102 666Q103 666 123 658T178 642T253 634Q324 634 389 662Q397 666 402 666Q410 666 410 648V635Q328 538 205 538Q174 538 149 544L139 546V374Q158 388 169 396T205 412T256 420Q337 420 393 355T449 201Q449 109 385 44T229 -22Q148 -22 99 32T50 154Q50 178 61 192T84 210T107 214Q132 214 148 197T164 157Z"></path><path data-c="36" d="M42 313Q42 476 123 571T303 666Q372 666 402 630T432 550Q432 525 418 510T379 495Q356 495 341 509T326 548Q326 592 373 601Q351 623 311 626Q240 626 194 566Q147 500 147 364L148 360Q153 366 156 373Q197 433 263 433H267Q313 433 348 414Q372 400 396 374T435 317Q456 268 456 210V192Q456 169 451 149Q440 90 387 34T253 -22Q225 -22 199 -14T143 16T92 75T56 172T42 313ZM257 397Q227 397 205 380T171 335T154 278T148 216Q148 133 160 97T198 39Q222 21 251 21Q302 21 329 59Q342 77 347 104T352 209Q352 289 347 316T329 361Q302 397 257 397Z" transform="translate(500,0)"></path></g><g data-mml-node="mi" transform="translate(3299.1,0)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(4177.1,0)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(5055.1,0)"><path data-c="3B" d="M78 370Q78 394 95 412T138 430Q162 430 180 414T199 371Q199 346 182 328T139 310T96 327T78 370ZM78 60Q78 85 94 103T137 121Q202 121 202 8Q202 -44 183 -94T144 -169T118 -194Q115 -194 106 -186T95 -174Q94 -171 107 -155T137 -107T160 -38Q161 -32 162 -22T165 -4T165 4Q165 5 161 4T142 0Q110 0 94 18T78 60Z"></path></g><g data-mml-node="mtext" transform="translate(5499.8,0)"><path data-c="A0" d=""></path></g><g data-mml-node="msub" transform="translate(5749.8,0)"><g data-mml-node="mi"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mn" transform="translate(562,-150) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="mo" transform="translate(6993.1,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(8048.9,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path><path data-c="36" d="M42 313Q42 476 123 571T303 666Q372 666 402 630T432 550Q432 525 418 510T379 495Q356 495 341 509T326 548Q326 592 373 601Q351 623 311 626Q240 626 194 566Q147 500 147 364L148 360Q153 366 156 373Q197 433 263 433H267Q313 433 348 414Q372 400 396 374T435 317Q456 268 456 210V192Q456 169 451 149Q440 90 387 34T253 -22Q225 -22 199 -14T143 16T92 75T56 172T42 313ZM257 397Q227 397 205 380T171 335T154 278T148 216Q148 133 160 97T198 39Q222 21 251 21Q302 21 329 59Q342 77 347 104T352 209Q352 289 347 316T329 361Q302 397 257 397Z" transform="translate(500,0)"></path><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z" transform="translate(1000,0)"></path></g><g data-mml-node="mi" transform="translate(9548.9,0)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(10426.9,0)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(11304.9,0)"><path data-c="3B" d="M78 370Q78 394 95 412T138 430Q162 430 180 414T199 371Q199 346 182 328T139 310T96 327T78 370ZM78 60Q78 85 94 103T137 121Q202 121 202 8Q202 -44 183 -94T144 -169T118 -194Q115 -194 106 -186T95 -174Q94 -171 107 -155T137 -107T160 -38Q161 -32 162 -22T165 -4T165 4Q165 5 161 4T142 0Q110 0 94 18T78 60Z"></path></g><g data-mml-node="mtext" transform="translate(11749.6,0)"><path data-c="A0" d=""></path></g><g data-mml-node="msub" transform="translate(11999.6,0)"><g data-mml-node="mi"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mn" transform="translate(562,-150) scale(0.707)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="mo" transform="translate(13242.9,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(14298.7,0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z" transform="translate(500,0)"></path></g><g data-mml-node="mi" transform="translate(15298.7,0)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(16176.7,0)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(17054.7,0)"><path data-c="3B" d="M78 370Q78 394 95 412T138 430Q162 430 180 414T199 371Q199 346 182 328T139 310T96 327T78 370ZM78 60Q78 85 94 103T137 121Q202 121 202 8Q202 -44 183 -94T144 -169T118 -194Q115 -194 106 -186T95 -174Q94 -171 107 -155T137 -107T160 -38Q161 -32 162 -22T165 -4T165 4Q165 5 161 4T142 0Q110 0 94 18T78 60Z"></path></g></g></g></svg></mjx-container></p>
<p>所以最大弦长为：<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.339ex;" xmlns="http://www.w3.org/2000/svg" width="22.546ex" height="1.846ex" role="img" focusable="false" viewBox="0 -666 9965.6 816"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mn" transform="translate(562,-150) scale(0.707)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="mo" transform="translate(1187.8,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="msub" transform="translate(2188,0)"><g data-mml-node="mi"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mn" transform="translate(562,-150) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="mo" transform="translate(3375.8,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mn" transform="translate(4376,0)"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z" transform="translate(500,0)"></path></g><g data-mml-node="mo" transform="translate(5653.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(6709.6,0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" transform="translate(500,0)"></path><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z" transform="translate(1000,0)"></path></g><g data-mml-node="mi" transform="translate(8209.6,0)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(9087.6,0)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g></g></svg></mjx-container></p>
<p>机翼主梁采用PLA打印（或者PLA+），中间部分连接两根1.5mm碳杆，碳杆在与碳板翼肋相连；</p>
<img lazyload="" src="/images/loading.svg" data-src="/2023/05/27/%E5%88%B6%E5%AF%BC%E9%A3%9E%E9%95%96%E7%BB%93%E6%9E%84%E8%AE%BE%E8%AE%A1/fig_9.png" class="" width="600">

<p>前缘翼梁采用1mm碳纤维板，在翼肋接口处铆合；</p>
<img lazyload="" src="/images/loading.svg" data-src="/2023/05/27/%E5%88%B6%E5%AF%BC%E9%A3%9E%E9%95%96%E7%BB%93%E6%9E%84%E8%AE%BE%E8%AE%A1/fig_10.png" class="" width="600">

<p>碳板和碳板之间采用DP460碳纤维专用环氧树脂AB胶进行粘合；</p>
<p>翼肋之间通过高精度打印一些距离块来辅助安装；</p>
<p>使用航模蒙皮对机翼附膜，再与已经设计好的机身进行缝合，得到第一代的无动力测试飞镖；</p>
<h2 id="硬件设计"><a href="#硬件设计" class="headerlink" title="硬件设计"></a>硬件设计</h2><p>第二代飞镖采用IMU和stm32进行自稳控制，通过两个舵机控制舵面进行调整；</p>
<h3 id="IMU选型"><a href="#IMU选型" class="headerlink" title="IMU选型"></a>IMU选型</h3><p><a class="link" href="https://github.com/HNUYueLuRM/vision_tutorial">在了解CV和RoboMaster视觉组的文档中详细讲解了IMU（4.3节） <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<h2 id="控制原理"><a href="#控制原理" class="headerlink" title="控制原理"></a>控制原理</h2><h3 id="控制逻辑"><a href="#控制逻辑" class="headerlink" title="控制逻辑"></a>控制逻辑</h3><p>当飞镖发射出去之后，IMU测量到飞镖产生加速度，延时一定函数之后，启动电机旋转，同时控制舵机进行姿态调整；</p>
<p>姿态控制分为三个阶段：</p>
<ol>
<li>爬升到一定的高度；</li>
<li>平飞巡航；</li>
<li>对目标进行俯冲；</li>
</ol>
]]></content>
      <categories>
        <category>Robotics</category>
        <category>UAV</category>
      </categories>
  </entry>
  <entry>
    <title>卡尔曼滤波器</title>
    <url>/2023/08/15/%E5%8D%A1%E5%B0%94%E6%9B%BC%E6%BB%A4%E6%B3%A2%E5%99%A8/</url>
    <content><![CDATA[<h2 id="为什么是卡尔曼滤波器"><a href="#为什么是卡尔曼滤波器" class="headerlink" title="为什么是卡尔曼滤波器"></a>为什么是卡尔曼滤波器</h2><p>卡尔曼滤波器在机器人控制中应用非常广泛，在RoboMaster中，卡尔曼滤波器是视觉自动瞄准不可或缺的一环。</p>
<p>对于一个机器人的状态估计，或者一个运动参数的测量，往往会有两种计算结果：</p>
<ul>
<li>通过理论计算的结果</li>
<li>通过传感器测量的结果</li>
</ul>
<p>但实际上这两种结果都不准确，理论公式的计算往往过于理想化，忽略了真实的物理场景存在的各种误差和噪声；而传感器的测量会受到各个环节的噪声的影响，最终的结果也会有误差。</p>
<p>卡尔曼滤波器（Kalman Filter）的核心思想就是既不相信理论计算，也不相信传感器测量，而是相信两者的加权值。</p>
<p>当然，卡尔曼滤波器用于对线性系统的状态估计，而对于非线性系统，可以用扩展卡尔曼滤波器（EKF），扩展卡尔曼滤波器在每一步对非线性函数进行线性化，将非线性系统近似为线性系统。这是通过计算函数在当前估计点的雅可比矩阵（Jacobian）来实现的。</p>
<h2 id="公式"><a href="#公式" class="headerlink" title="公式"></a>公式</h2><p>卡尔曼滤波器的第一个计算公式就是理论计算和实际测量的加权计算：</p>
<h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><a class="link" href="https://zhuanlan.zhihu.com/p/633067526">干货|卡尔曼滤波器到底该怎么使用（引出，推导，案例使用，代码实现） <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>   </p>
]]></content>
      <categories>
        <category>Algorithm</category>
      </categories>
  </entry>
  <entry>
    <title>卷积</title>
    <url>/2023/05/18/%E5%8D%B7%E7%A7%AF/</url>
    <content><![CDATA[<h1 id="离散卷积"><a href="#离散卷积" class="headerlink" title="离散卷积"></a>离散卷积</h1><p>卷积这个运算其实蕴藏在生活中的所有的小细节中，我们可以先从 3b1b的讲解出发，了解一下卷积的数学图像和日常中的应用。</p>
<p><a class="link" href="https://youtu.be/KuXjwB4LzSA">But what is a convolution? <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<h2 id="一些生活中的例子"><a href="#一些生活中的例子" class="headerlink" title="一些生活中的例子"></a>一些生活中的例子</h2><h3 id="投两个骰子"><a href="#投两个骰子" class="headerlink" title="投两个骰子"></a>投两个骰子</h3><p>假设我们丢出两个骰子，我们可以得到一个 6×6 的表格，表示两个骰子的点数和的概率分布，如下图所示。</p>
<img lazyload="" src="/images/loading.svg" data-src="/2023/05/18/%E5%8D%B7%E7%A7%AF/fig_1.jpg" class="" width="600">

<p>我们很容易发现，相同点数和的组合，如 3+1、2+2、1+3，都排在同一条对角线上。</p>
<p>当然我们可以把第二组骰子翻转过来，同时将骰子的每一面的概率改为不均匀，我们可以找出一种新的方法去计算两骰子点数之和的办法，即每次对应一组相乘并相加，然后第二组骰子向右移动，继续相乘相加得到一种点数之和的概率，从2点数之和到点数之和为12。</p>
<img lazyload="" src="/images/loading.svg" data-src="/2023/05/18/%E5%8D%B7%E7%A7%AF/fig_2.jpg" class="" width="600">

<p>每次对应一组并相加，然后第二组骰子向右移动，继续相乘相加得到一种点数之和的概率。</p>
<img lazyload="" src="/images/loading.svg" data-src="/2023/05/18/%E5%8D%B7%E7%A7%AF/fig_3.jpg" class="" width="600">

<h3 id="竖式乘法"><a href="#竖式乘法" class="headerlink" title="竖式乘法"></a>竖式乘法</h3><p>在小学中，我们学过简单的竖式乘法，其实可以理解为对数位上的数字进行卷积运算。</p>
<img lazyload="" src="/images/loading.svg" data-src="/2023/05/18/%E5%8D%B7%E7%A7%AF/fig_4.png" class="" width="600">

<p>可以想象，将其中一个数反转过来，利用上述的移位对应相乘，然后再相加的办法，最后进位，就可以得到同样的结果。</p>
<p>所以说，竖式乘法其实就是一种卷积运算。</p>
<h3 id="多项式乘法"><a href="#多项式乘法" class="headerlink" title="多项式乘法"></a>多项式乘法</h3><p>当对两个多项式乘法的时候，其实也可以视作为一种卷积的运算：</p>
<p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="60.923ex" height="2.583ex" role="img" focusable="false" viewBox="0 -891.7 26927.9 1141.7"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mn" transform="translate(389,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(1111.2,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mn" transform="translate(2111.4,0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mi" transform="translate(2611.4,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(3405.7,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mn" transform="translate(4405.9,0)"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path></g><g data-mml-node="msup" transform="translate(4905.9,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mn" transform="translate(605,413) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="mo" transform="translate(5914.4,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(6303.4,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mn" transform="translate(6692.4,0)"><path data-c="34" d="M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z"></path></g><g data-mml-node="mo" transform="translate(7414.7,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mn" transform="translate(8414.9,0)"><path data-c="35" d="M164 157Q164 133 148 117T109 101H102Q148 22 224 22Q294 22 326 82Q345 115 345 210Q345 313 318 349Q292 382 260 382H254Q176 382 136 314Q132 307 129 306T114 304Q97 304 95 310Q93 314 93 485V614Q93 664 98 664Q100 666 102 666Q103 666 123 658T178 642T253 634Q324 634 389 662Q397 666 402 666Q410 666 410 648V635Q328 538 205 538Q174 538 149 544L139 546V374Q158 388 169 396T205 412T256 420Q337 420 393 355T449 201Q449 109 385 44T229 -22Q148 -22 99 32T50 154Q50 178 61 192T84 210T107 214Q132 214 148 197T164 157Z"></path></g><g data-mml-node="mi" transform="translate(8914.9,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(9709.1,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mn" transform="translate(10709.3,0)"><path data-c="36" d="M42 313Q42 476 123 571T303 666Q372 666 402 630T432 550Q432 525 418 510T379 495Q356 495 341 509T326 548Q326 592 373 601Q351 623 311 626Q240 626 194 566Q147 500 147 364L148 360Q153 366 156 373Q197 433 263 433H267Q313 433 348 414Q372 400 396 374T435 317Q456 268 456 210V192Q456 169 451 149Q440 90 387 34T253 -22Q225 -22 199 -14T143 16T92 75T56 172T42 313ZM257 397Q227 397 205 380T171 335T154 278T148 216Q148 133 160 97T198 39Q222 21 251 21Q302 21 329 59Q342 77 347 104T352 209Q352 289 347 316T329 361Q302 397 257 397Z"></path></g><g data-mml-node="msup" transform="translate(11209.3,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mn" transform="translate(605,413) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="mo" transform="translate(12217.9,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(12884.7,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(13940.4,0)"><path data-c="34" d="M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z"></path></g><g data-mml-node="mo" transform="translate(14662.7,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mn" transform="translate(15662.9,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z" transform="translate(500,0)"></path></g><g data-mml-node="mi" transform="translate(16662.9,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(17457.1,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mn" transform="translate(18457.3,0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path><path data-c="38" d="M70 417T70 494T124 618T248 666Q319 666 374 624T429 515Q429 485 418 459T392 417T361 389T335 371T324 363L338 354Q352 344 366 334T382 323Q457 264 457 174Q457 95 399 37T249 -22Q159 -22 101 29T43 155Q43 263 172 335L154 348Q133 361 127 368Q70 417 70 494ZM286 386L292 390Q298 394 301 396T311 403T323 413T334 425T345 438T355 454T364 471T369 491T371 513Q371 556 342 586T275 624Q268 625 242 625Q201 625 165 599T128 534Q128 511 141 492T167 463T217 431Q224 426 228 424L286 386ZM250 21Q308 21 350 55T392 137Q392 154 387 169T375 194T353 216T330 234T301 253T274 270Q260 279 244 289T218 306L210 311Q204 311 181 294T133 239T107 157Q107 98 150 60T250 21Z" transform="translate(500,0)"></path></g><g data-mml-node="msup" transform="translate(19457.3,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mn" transform="translate(605,413) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="mo" transform="translate(20688.1,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mn" transform="translate(21688.3,0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path><path data-c="37" d="M55 458Q56 460 72 567L88 674Q88 676 108 676H128V672Q128 662 143 655T195 646T364 644H485V605L417 512Q408 500 387 472T360 435T339 403T319 367T305 330T292 284T284 230T278 162T275 80Q275 66 275 52T274 28V19Q270 2 255 -10T221 -22Q210 -22 200 -19T179 0T168 40Q168 198 265 368Q285 400 349 489L395 552H302Q128 552 119 546Q113 543 108 522T98 479L95 458V455H55V458Z" transform="translate(500,0)"></path></g><g data-mml-node="msup" transform="translate(22688.3,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mn" transform="translate(605,413) scale(0.707)"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path></g></g><g data-mml-node="mo" transform="translate(23919.1,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mn" transform="translate(24919.3,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path><path data-c="38" d="M70 417T70 494T124 618T248 666Q319 666 374 624T429 515Q429 485 418 459T392 417T361 389T335 371T324 363L338 354Q352 344 366 334T382 323Q457 264 457 174Q457 95 399 37T249 -22Q159 -22 101 29T43 155Q43 263 172 335L154 348Q133 361 127 368Q70 417 70 494ZM286 386L292 390Q298 394 301 396T311 403T323 413T334 425T345 438T355 454T364 471T369 491T371 513Q371 556 342 586T275 624Q268 625 242 625Q201 625 165 599T128 534Q128 511 141 492T167 463T217 431Q224 426 228 424L286 386ZM250 21Q308 21 350 55T392 137Q392 154 387 169T375 194T353 216T330 234T301 253T274 270Q260 279 244 289T218 306L210 311Q204 311 181 294T133 239T107 157Q107 98 150 60T250 21Z" transform="translate(500,0)"></path></g><g data-mml-node="msup" transform="translate(25919.3,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mn" transform="translate(605,413) scale(0.707)"><path data-c="34" d="M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z"></path></g></g></g></g></svg></mjx-container></p>
<p>其实等同于将数组<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="7.166ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 3167.3 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mn" transform="translate(389,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(889,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mn" transform="translate(1333.7,0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mo" transform="translate(1833.7,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mn" transform="translate(2278.3,0)"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path></g><g data-mml-node="mo" transform="translate(2778.3,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container>和<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="7.166ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 3167.3 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mn" transform="translate(389,0)"><path data-c="34" d="M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z"></path></g><g data-mml-node="mo" transform="translate(889,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mn" transform="translate(1333.7,0)"><path data-c="35" d="M164 157Q164 133 148 117T109 101H102Q148 22 224 22Q294 22 326 82Q345 115 345 210Q345 313 318 349Q292 382 260 382H254Q176 382 136 314Q132 307 129 306T114 304Q97 304 95 310Q93 314 93 485V614Q93 664 98 664Q100 666 102 666Q103 666 123 658T178 642T253 634Q324 634 389 662Q397 666 402 666Q410 666 410 648V635Q328 538 205 538Q174 538 149 544L139 546V374Q158 388 169 396T205 412T256 420Q337 420 393 355T449 201Q449 109 385 44T229 -22Q148 -22 99 32T50 154Q50 178 61 192T84 210T107 214Q132 214 148 197T164 157Z"></path></g><g data-mml-node="mo" transform="translate(1833.7,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mn" transform="translate(2278.3,0)"><path data-c="36" d="M42 313Q42 476 123 571T303 666Q372 666 402 630T432 550Q432 525 418 510T379 495Q356 495 341 509T326 548Q326 592 373 601Q351 623 311 626Q240 626 194 566Q147 500 147 364L148 360Q153 366 156 373Q197 433 263 433H267Q313 433 348 414Q372 400 396 374T435 317Q456 268 456 210V192Q456 169 451 149Q440 90 387 34T253 -22Q225 -22 199 -14T143 16T92 75T56 172T42 313ZM257 397Q227 397 205 380T171 335T154 278T148 216Q148 133 160 97T198 39Q222 21 251 21Q302 21 329 59Q342 77 347 104T352 209Q352 289 347 316T329 361Q302 397 257 397Z"></path></g><g data-mml-node="mo" transform="translate(2778.3,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container>进行卷积运算，得到的结果就是多项式的系数。</p>
<img lazyload="" src="/images/loading.svg" data-src="/2023/05/18/%E5%8D%B7%E7%A7%AF/fig_5.png" class="" width="600">

<h3 id="离散滑动平均值"><a href="#离散滑动平均值" class="headerlink" title="离散滑动平均值"></a>离散滑动平均值</h3><p>将一个长数组和一个短数组进行卷积运算，我们可以看到得到的结果是一个更加平滑的长数组。</p>
<img lazyload="" src="/images/loading.svg" data-src="/2023/05/18/%E5%8D%B7%E7%A7%AF/fig_6.png" class="" width="600">

<p>可以增加短数组的中间值，类似于增加一个权重。</p>
<img lazyload="" src="/images/loading.svg" data-src="/2023/05/18/%E5%8D%B7%E7%A7%AF/fig_7.png" class="" width="600">

<p>两者都可以得到原始数据的平滑版本。</p>

  <div class="note p-4 mb-4 rounded-small info">
    <p>这里的卷积很像是在函数的某一个点上的函数值平均了附近周围的函数值，类似于对一个评分系统进行加权平均，使得其更加合理。</p>

  </div>

<h3 id="图像处理"><a href="#图像处理" class="headerlink" title="图像处理"></a>图像处理</h3><p>我们对一张图片和一个矩阵进行卷积，用二维的高斯函数作为矩阵的值，可以得到一张图片的高斯模糊版本，打码的效果就是这样实现的。</p>
<img lazyload="" src="/images/loading.svg" data-src="/2023/05/18/%E5%8D%B7%E7%A7%AF/fig_8.png" class="" width="600">

<p>仔细看可以知道新图的每一个像素点都融入了高斯矩阵所包含周围像素的颜色捏合在一起，从而变得很模糊。</p>
<p>同样如果使用不同的矩阵，卷积得到的结果也大相径庭，例如边缘检测，图像锐化等。</p>
<img lazyload="" src="/images/loading.svg" data-src="/2023/05/18/%E5%8D%B7%E7%A7%AF/fig_9.png" class="" width="600">

<img lazyload="" src="/images/loading.svg" data-src="/2023/05/18/%E5%8D%B7%E7%A7%AF/fig_10.png" class="" width="600">


  <div class="note-large blue">
    <div class="notel-title rounded-t-lg p-3 font-bold text-lg flex flex-row gap-2 items-center">
      <p>💡关于卷积神经网络</p>

    </div>
    <div class="notel-content">
      <p>图像处理中用于卷积原始图片的矩阵通常叫<strong>核 Kernel</strong>，卷积神经网络的思路就是用数据集算出应该选取什么样的核来对图像进行卷积，来满足神经网络所检测的目标。</p>

    </div>
  </div>

<h2 id="离散卷积的定义"><a href="#离散卷积的定义" class="headerlink" title="离散卷积的定义"></a>离散卷积的定义</h2><p>显然，我们把两个离散函数中的一个反转过来，然后对应相乘，再相加，然后再移位，继续相乘相加，这样就是离散卷积：</p>
<p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -2.864ex;" xmlns="http://www.w3.org/2000/svg" width="36.616ex" height="6.399ex" role="img" focusable="false" viewBox="0 -1562.5 16184.4 2828.3"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(490,0)"><path data-c="5B" d="M118 -250V750H255V710H158V-210H255V-250H118Z"></path></g><g data-mml-node="mi" transform="translate(768,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(1368,0)"><path data-c="5D" d="M22 710V750H159V-250H22V-210H119V710H22Z"></path></g><g data-mml-node="mo" transform="translate(1923.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mi" transform="translate(2979.6,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(3551.6,0)"><path data-c="5B" d="M118 -250V750H255V710H158V-210H255V-250H118Z"></path></g><g data-mml-node="mi" transform="translate(3829.6,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(4429.6,0)"><path data-c="5D" d="M22 710V750H159V-250H22V-210H119V710H22Z"></path></g><g data-mml-node="mo" transform="translate(4929.8,0)"><path data-c="2217" d="M229 286Q216 420 216 436Q216 454 240 464Q241 464 245 464T251 465Q263 464 273 456T283 436Q283 419 277 356T270 286L328 328Q384 369 389 372T399 375Q412 375 423 365T435 338Q435 325 425 315Q420 312 357 282T289 250L355 219L425 184Q434 175 434 161Q434 146 425 136T401 125Q393 125 383 131T328 171L270 213Q283 79 283 63Q283 53 276 44T250 35Q231 35 224 44T216 63Q216 80 222 143T229 213L171 171Q115 130 110 127Q106 124 100 124Q87 124 76 134T64 161Q64 166 64 169T67 175T72 181T81 188T94 195T113 204T138 215T170 230T210 250L74 315Q65 324 65 338Q65 353 74 363T98 374Q106 374 116 368T171 328L229 286Z"></path></g><g data-mml-node="mi" transform="translate(5652,0)"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z"></path></g><g data-mml-node="mo" transform="translate(6228,0)"><path data-c="5B" d="M118 -250V750H255V710H158V-210H255V-250H118Z"></path></g><g data-mml-node="mi" transform="translate(6506,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(7106,0)"><path data-c="5D" d="M22 710V750H159V-250H22V-210H119V710H22Z"></path></g><g data-mml-node="mo" transform="translate(7661.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="munderover" transform="translate(8717.6,0)"><g data-mml-node="mo" transform="translate(365.9,0)"><path data-c="2211" d="M60 948Q63 950 665 950H1267L1325 815Q1384 677 1388 669H1348L1341 683Q1320 724 1285 761Q1235 809 1174 838T1033 881T882 898T699 902H574H543H251L259 891Q722 258 724 252Q725 250 724 246Q721 243 460 -56L196 -356Q196 -357 407 -357Q459 -357 548 -357T676 -358Q812 -358 896 -353T1063 -332T1204 -283T1307 -196Q1328 -170 1348 -124H1388Q1388 -125 1381 -145T1356 -210T1325 -294L1267 -449L666 -450Q64 -450 61 -448Q55 -446 55 -439Q55 -437 57 -433L590 177Q590 178 557 222T452 366T322 544L56 909L55 924Q55 945 60 948Z"></path></g><g data-mml-node="TeXAtom" transform="translate(0,-1107.7) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mo" transform="translate(521,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mo" transform="translate(1299,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mi" transform="translate(2077,0)"><path data-c="221E" d="M55 217Q55 305 111 373T254 442Q342 442 419 381Q457 350 493 303L507 284L514 294Q618 442 747 442Q833 442 888 374T944 214Q944 128 889 59T743 -11Q657 -11 580 50Q542 81 506 128L492 147L485 137Q381 -11 252 -11Q166 -11 111 57T55 217ZM907 217Q907 285 869 341T761 397Q740 397 720 392T682 378T648 359T619 335T594 310T574 285T559 263T548 246L543 238L574 198Q605 158 622 138T664 94T714 61T765 51Q827 51 867 100T907 217ZM92 214Q92 145 131 89T239 33Q357 33 456 193L425 233Q364 312 334 337Q285 380 233 380Q171 380 132 331T92 214Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(734.3,1150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="221E" d="M55 217Q55 305 111 373T254 442Q342 442 419 381Q457 350 493 303L507 284L514 294Q618 442 747 442Q833 442 888 374T944 214Q944 128 889 59T743 -11Q657 -11 580 50Q542 81 506 128L492 147L485 137Q381 -11 252 -11Q166 -11 111 57T55 217ZM907 217Q907 285 869 341T761 397Q740 397 720 392T682 378T648 359T619 335T594 310T574 285T559 263T548 246L543 238L574 198Q605 158 622 138T664 94T714 61T765 51Q827 51 867 100T907 217ZM92 214Q92 145 131 89T239 33Q357 33 456 193L425 233Q364 312 334 337Q285 380 233 380Q171 380 132 331T92 214Z"></path></g></g></g><g data-mml-node="mi" transform="translate(11060,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(11632,0)"><path data-c="5B" d="M118 -250V750H255V710H158V-210H255V-250H118Z"></path></g><g data-mml-node="mi" transform="translate(11910,0)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mo" transform="translate(12431,0)"><path data-c="5D" d="M22 710V750H159V-250H22V-210H119V710H22Z"></path></g><g data-mml-node="mi" transform="translate(12709,0)"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z"></path></g><g data-mml-node="mo" transform="translate(13285,0)"><path data-c="5B" d="M118 -250V750H255V710H158V-210H255V-250H118Z"></path></g><g data-mml-node="mi" transform="translate(13563,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(14385.2,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mi" transform="translate(15385.4,0)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mo" transform="translate(15906.4,0)"><path data-c="5D" d="M22 710V750H159V-250H22V-210H119V710H22Z"></path></g></g></g></svg></mjx-container></p>
<h3 id="信号与系统"><a href="#信号与系统" class="headerlink" title="信号与系统"></a>信号与系统</h3><p>在信号与系统中，一个离散系统的输出函数就可以表示为输入函数与冲激响应的卷积。</p>

  <div class="note p-4 mb-4 rounded-small info">
    <p>冲激响应指的是系统对冲激信号的响应。</p>

  </div>

<h1 id="连续卷积"><a href="#连续卷积" class="headerlink" title="连续卷积"></a>连续卷积</h1><h2 id="形象理解"><a href="#形象理解" class="headerlink" title="形象理解"></a>形象理解</h2><p>连续和离散的卷积其实原理是相同的，在离散的情况下，求和变为积分，古月居通过一些形象的描述，可以很好理解连续函数下的积分是怎么样的。</p>
<p><a class="link" href="https://mp.weixin.qq.com/s/cZUdlh79xhgqN2aY5Vto3A">“卷积”的形象理解 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<h2 id="连续卷积的定义"><a href="#连续卷积的定义" class="headerlink" title="连续卷积的定义"></a>连续卷积的定义</h2><p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -2.159ex;" xmlns="http://www.w3.org/2000/svg" width="25.755ex" height="5.328ex" role="img" focusable="false" viewBox="0 -1400.6 11383.9 2354.9"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(490,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(879,0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mo" transform="translate(1240,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(1906.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="msubsup" transform="translate(2962.6,0)"><g data-mml-node="mo" transform="translate(0 1)"><path data-c="222B" d="M114 -798Q132 -824 165 -824H167Q195 -824 223 -764T275 -600T320 -391T362 -164Q365 -143 367 -133Q439 292 523 655T645 1127Q651 1145 655 1157T672 1201T699 1257T733 1306T777 1346T828 1360Q884 1360 912 1325T944 1245Q944 1220 932 1205T909 1186T887 1183Q866 1183 849 1198T832 1239Q832 1287 885 1296L882 1300Q879 1303 874 1307T866 1313Q851 1323 833 1323Q819 1323 807 1311T775 1255T736 1139T689 936T633 628Q574 293 510 -5T410 -437T355 -629Q278 -862 165 -862Q125 -862 92 -831T55 -746Q55 -711 74 -698T112 -685Q133 -685 150 -700T167 -741Q167 -789 114 -798Z"></path></g><g data-mml-node="TeXAtom" transform="translate(1046.4,1088.1) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="221E" d="M55 217Q55 305 111 373T254 442Q342 442 419 381Q457 350 493 303L507 284L514 294Q618 442 747 442Q833 442 888 374T944 214Q944 128 889 59T743 -11Q657 -11 580 50Q542 81 506 128L492 147L485 137Q381 -11 252 -11Q166 -11 111 57T55 217ZM907 217Q907 285 869 341T761 397Q740 397 720 392T682 378T648 359T619 335T594 310T574 285T559 263T548 246L543 238L574 198Q605 158 622 138T664 94T714 61T765 51Q827 51 867 100T907 217ZM92 214Q92 145 131 89T239 33Q357 33 456 193L425 233Q364 312 334 337Q285 380 233 380Q171 380 132 331T92 214Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(589,-896.4) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mi" transform="translate(778,0)"><path data-c="221E" d="M55 217Q55 305 111 373T254 442Q342 442 419 381Q457 350 493 303L507 284L514 294Q618 442 747 442Q833 442 888 374T944 214Q944 128 889 59T743 -11Q657 -11 580 50Q542 81 506 128L492 147L485 137Q381 -11 252 -11Q166 -11 111 57T55 217ZM907 217Q907 285 869 341T761 397Q740 397 720 392T682 378T648 359T619 335T594 310T574 285T559 263T548 246L543 238L574 198Q605 158 622 138T664 94T714 61T765 51Q827 51 867 100T907 217ZM92 214Q92 145 131 89T239 33Q357 33 456 193L425 233Q364 312 334 337Q285 380 233 380Q171 380 132 331T92 214Z"></path></g></g></g><g data-mml-node="mi" transform="translate(5025.5,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(5597.5,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(5986.5,0)"><path data-c="1D70F" d="M39 284Q18 284 18 294Q18 301 45 338T99 398Q134 425 164 429Q170 431 332 431Q492 431 497 429Q517 424 517 402Q517 388 508 376T485 360Q479 358 389 358T299 356Q298 355 283 274T251 109T233 20Q228 5 215 -4T186 -13Q153 -13 153 20V30L203 192Q214 228 227 272T248 336L254 357Q254 358 208 358Q206 358 197 358T183 359Q105 359 61 295Q56 287 53 286T39 284Z"></path></g><g data-mml-node="mo" transform="translate(6503.5,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mi" transform="translate(6892.5,0)"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z"></path></g><g data-mml-node="mo" transform="translate(7468.5,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(7857.5,0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mo" transform="translate(8440.7,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mi" transform="translate(9440.9,0)"><path data-c="1D70F" d="M39 284Q18 284 18 294Q18 301 45 338T99 398Q134 425 164 429Q170 431 332 431Q492 431 497 429Q517 424 517 402Q517 388 508 376T485 360Q479 358 389 358T299 356Q298 355 283 274T251 109T233 20Q228 5 215 -4T186 -13Q153 -13 153 20V30L203 192Q214 228 227 272T248 336L254 357Q254 358 208 358Q206 358 197 358T183 359Q105 359 61 295Q56 287 53 286T39 284Z"></path></g><g data-mml-node="mo" transform="translate(9957.9,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mi" transform="translate(10346.9,0)"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="mi" transform="translate(10866.9,0)"><path data-c="1D70F" d="M39 284Q18 284 18 294Q18 301 45 338T99 398Q134 425 164 429Q170 431 332 431Q492 431 497 429Q517 424 517 402Q517 388 508 376T485 360Q479 358 389 358T299 356Q298 355 283 274T251 109T233 20Q228 5 215 -4T186 -13Q153 -13 153 20V30L203 192Q214 228 227 272T248 336L254 357Q254 358 208 358Q206 358 197 358T183 359Q105 359 61 295Q56 287 53 286T39 284Z"></path></g></g></g></svg></mjx-container></p>

  <div class="note p-4 mb-4 rounded-small info">
    <p>可以通过想象在消化食物这个卷积例子中，进食函数和消化函数的卷积动画过程，来帮助记忆卷积的公式。</p>

  </div>


<h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><ul>
<li><a class="link" href="https://youtu.be/KuXjwB4LzSA">But what is a convolution? <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link" href="https://mp.weixin.qq.com/s/cZUdlh79xhgqN2aY5Vto3A">“卷积”的形象理解 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
</ul>
]]></content>
      <categories>
        <category>Mathematics</category>
      </categories>
  </entry>
  <entry>
    <title>智能家居门禁系统</title>
    <url>/2023/05/12/%E5%AE%BF%E8%88%8D%E6%99%BA%E8%83%BD%E9%97%A8%E7%A6%81%E7%B3%BB%E7%BB%9F/</url>
    <content><![CDATA[<h2 id="门禁系统v1-0"><a href="#门禁系统v1-0" class="headerlink" title="门禁系统v1.0"></a>门禁系统v1.0</h2><h3 id="研发需求"><a href="#研发需求" class="headerlink" title="研发需求"></a>研发需求</h3><p>当我一个人在宿舍的时候，很容易把钥匙放在自己的位置上忘记拿出来，然后就导致被锁在外面。同时携带钥匙出门也会很不方便，所以如果能够实现指纹、人脸、nfc等身份信息来直接进行验证，就可以不用携带钥匙出门或者被锁在外面了。</p>
<h3 id="硬件设计"><a href="#硬件设计" class="headerlink" title="硬件设计"></a>硬件设计</h3><p>v1.0主要考虑简单易用和成本低廉，因此只采用指纹和nfc两种方式进行验证，采用esp32作为主板开发，后续可以添加人脸识别等功能，远程开门等功能。</p>
<ul>
<li>NFC模块采用<a class="link"   href="https://detail.tmall.com/item.htm?_u=33hgjd523174&id=41286608549&spm=a1z09.2.0.0.3c6b2e8dTXqeeb" >RC522模块 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>，使用SPI通信，可以利用<code>MFRC522.h</code>进行开发；</li>
<li>指纹模块采用<a class="link"   href="https://item.taobao.com/item.htm?spm=a1z09.2.0.0.3c6b2e8dTXqeeb&id=561808592573&_u=33hgjd5212e9" >AS608光学指纹传感器 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>，使用串口通信，具体通信协议可以查看其开发手册。</li>
<li>采用<a class="link"   href="https://item.taobao.com/item.htm?spm=a1z09.2.0.0.3c6b2e8dTXqeeb&id=672120084915&_u=33hgjd522c61" >ESP32 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>作为主板，方便后续添加wifi或蓝牙模块进行升级；</li>
<li>执行机构采用一个9克的<a class="link"   href="https://item.taobao.com/item.htm?spm=a1z09.2.0.0.3c6b2e8dTXqeeb&id=657320114220&_u=33hgjd52c885" >金属舵机 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>，保证拉力足够；</li>
</ul>
<p>接线图如下：</p>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/05/12/%E5%AE%BF%E8%88%8D%E6%99%BA%E8%83%BD%E9%97%A8%E7%A6%81%E7%B3%BB%E7%BB%9F/fig_1.png"
                      class="" width="500"
                >

<p>左边对应的是ESP32的GPIO，右边为三个硬件模块；</p>
<h3 id="机械设计"><a href="#机械设计" class="headerlink" title="机械设计"></a>机械设计</h3><p>采用3D打印机打印一个外壳，外壳的设计如下：</p>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/05/12/%E5%AE%BF%E8%88%8D%E6%99%BA%E8%83%BD%E9%97%A8%E7%A6%81%E7%B3%BB%E7%BB%9F/fig_2.png"
                      class="" width="600"
                >

<ul>
<li>外壳分为两部分，上层放置NFC和指纹传感器，上下层中间夹着ESP32，通过usb线和延长的pwn线连接到门后的电源和舵机；</li>
<li>上下层之间的连接和NFC模块与上层打印件的连接采用M3的铜柱和螺丝连接，方便拆卸；</li>
<li>整个模块通过热熔胶固定在门上；</li>
</ul>
<p>实物图：</p>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/05/12/%E5%AE%BF%E8%88%8D%E6%99%BA%E8%83%BD%E9%97%A8%E7%A6%81%E7%B3%BB%E7%BB%9F/fig_3.jpg"
                      class="" width="500"
                >

<h3 id="软件设计"><a href="#软件设计" class="headerlink" title="软件设计"></a>软件设计</h3><h4 id="看门狗设计优化"><a href="#看门狗设计优化" class="headerlink" title="看门狗设计优化"></a>看门狗设计优化</h4><p>Esp32主要有两种看门狗：</p>
<ul>
<li>中断看门狗<ul>
<li>中断看门狗主要用于确保系统中断不会运行太长时间。如果一个中断例程运行时间过长，可能会导致系统其他部分不能及时响应，进而可能导致系统不稳定或崩溃。这种类型的看门狗通常用于更底层、与硬件紧密相关的场景。</li>
</ul>
</li>
<li>任务看门狗<ul>
<li>任务看门狗主要用于监视操作系统级的任务（Task）。如果一个任务消耗的 CPU 时间过多，或者因某种原因陷入死循环，任务看门狗可以重置该任务或整个系统，确保系统的稳定运行。这更多地应用于应用层，确保长时间运行的任务不会冻结或占用过多资源。</li>
</ul>
</li>
</ul>
<p>在程序中有很多延时函数容易导致阻塞和卡死。这里使用任务看门狗来防止阻塞的发生。</p>
<p>头文件：</p>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;esp_task_wdt.h&gt;</span></span></span><br></pre></td></tr></table></figure></div>
<p>在<code>setup()</code>函数中初始化任务看门狗:</p>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">setup</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="comment">// 其他初始化代码</span></span><br><span class="line"></span><br><span class="line">    esp_task_wdt_init(<span class="number">2</span>, <span class="literal">true</span>); <span class="comment">// 设置任务看门狗的超时时间为2秒，并使能看门狗</span></span><br><span class="line">    esp_task_wdt_add(<span class="literal">NULL</span>); <span class="comment">// 将loop()添加到任务看门狗的监控列表中</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<p>在<code>loop()</code>函数的末尾重置任务看门狗的计时器</p>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">loop</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="comment">// 你的代码</span></span><br><span class="line"></span><br><span class="line">    esp_task_wdt_reset(); <span class="comment">// 重置任务看门狗的计时器</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<h4 id="遇到的一些问题"><a href="#遇到的一些问题" class="headerlink" title="遇到的一些问题"></a>遇到的一些问题</h4><ul>
<li>通过串口<code>Serial1.write()</code>发送指令包之后，需要延时<code>delay()</code>等传感器返回数据，然后再通过<code>if (Serial1.available())</code>来判断是否读取到数据，如果没有延时，会读不到数据；至于延时函数的大小，则可以通过测试或者查看串口调试助手的时间戳来确定；</li>
<li>在串口通讯中，通常2个16进制数(0x1A)代表1个字节(bytes)，例如2 bytes则代表输入4位16进制数指令。</li>
<li>门锁使用一段时间之后会卡死无法响应，reset单片机可以解决，因此需要通过软件看门狗来解决这个问题；</li>
</ul>
<h4 id="总体设计代码"><a href="#总体设计代码" class="headerlink" title="总体设计代码"></a>总体设计代码</h4><div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Arduino.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ESP32Servo.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;SPI.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;MFRC522.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> PIN_25 25</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> PIN_33 33</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> PIN_13 13</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LED_PIN 2</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SS_PIN 5</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> RST_PIN 12</span></span><br><span class="line"></span><br><span class="line">MFRC522 <span class="title function_">rfid</span><span class="params">(SS_PIN, RST_PIN)</span>;</span><br><span class="line"></span><br><span class="line">Servo servo1; <span class="comment">//定义servo对象</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// SG90舵机的参数</span></span><br><span class="line"><span class="type">int</span> minUs = <span class="number">500</span>; <span class="comment">//0度时脉宽，us</span></span><br><span class="line"><span class="type">int</span> maxUs = <span class="number">2400</span>; <span class="comment">//180度时的脉宽，us</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> servo1Pin = <span class="number">22</span>; <span class="comment">//对应esp32上的pin22，输出pwm</span></span><br><span class="line"></span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> PS_GetImage[] = &#123;<span class="number">0xEF</span>, <span class="number">0x01</span>, <span class="number">0xFF</span>, <span class="number">0xFF</span>, <span class="number">0xFF</span>, <span class="number">0xFF</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0x03</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0x05</span>&#125;; <span class="comment">// PS_GetImage指令包: EF01 FFFFFFFF 01 0003 01 0005</span></span><br><span class="line"></span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> PS_GenChar[] = &#123;<span class="number">0xEF</span>, <span class="number">0x01</span>, <span class="number">0xFF</span>, <span class="number">0xFF</span>, <span class="number">0xFF</span>, <span class="number">0xFF</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0x04</span>, <span class="number">0x02</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0x08</span>&#125;; <span class="comment">// PS_GenChar指令包: EF01 FFFFFFFF 01 0004 02 01 0008</span></span><br><span class="line"></span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> PS_Search[] = &#123;<span class="number">0xEF</span>, <span class="number">0x01</span>, <span class="number">0xFF</span>, <span class="number">0xFF</span>, <span class="number">0xFF</span>, <span class="number">0xFF</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0x08</span>, <span class="number">0x04</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0x50</span>, <span class="number">0x00</span>, <span class="number">0x0A</span>, <span class="number">0x00</span>, <span class="number">0x68</span>&#125;; <span class="comment">// PS_Search指令包: EF01 FFFFFFFF 01 0008 04 01 0050 000A 0068</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">setup</span><span class="params">()</span> &#123;</span><br><span class="line"></span><br><span class="line">  ESP32PWM::allocateTimer(<span class="number">0</span>); <span class="comment">//分配一个定时器0</span></span><br><span class="line"></span><br><span class="line">  servo1.setPeriodHertz(<span class="number">50</span>); <span class="comment">// 设置舵机PWM频率为50Hz</span></span><br><span class="line"></span><br><span class="line">  servo1.attach(servo1Pin, minUs, maxUs); <span class="comment">// 将舵机与引脚对应</span></span><br><span class="line"></span><br><span class="line">  pinMode(LED_PIN, OUTPUT);</span><br><span class="line">  digitalWrite(LED_PIN, LOW);</span><br><span class="line"></span><br><span class="line">  pinMode(PIN_25, OUTPUT);</span><br><span class="line">  digitalWrite(PIN_25, HIGH); <span class="comment">// 25输出3.3V到传感器上</span></span><br><span class="line"></span><br><span class="line">  pinMode(PIN_13, OUTPUT);</span><br><span class="line">  digitalWrite(PIN_13, HIGH); <span class="comment">// 13输出3.3V到传感器上</span></span><br><span class="line"></span><br><span class="line">  pinMode(PIN_33, INPUT); <span class="comment">// 设置引脚33为输入模式</span></span><br><span class="line"></span><br><span class="line">  Serial1.begin(<span class="number">57600</span>, SERIAL_8N1, <span class="number">26</span>, <span class="number">27</span>); <span class="comment">// 初始化Serial1</span></span><br><span class="line"></span><br><span class="line">  SPI.begin(); <span class="comment">// 初始化SPI接口</span></span><br><span class="line"></span><br><span class="line">  rfid.PCD_Init(); <span class="comment">// 初始化RFID模块</span></span><br><span class="line"></span><br><span class="line">  rfid.PCD_SetAntennaGain(rfid.RxGain_max); <span class="comment">// 设置天线增益</span></span><br><span class="line"></span><br><span class="line">  esp_task_wdt_init(<span class="number">5</span>, <span class="literal">true</span>); <span class="comment">// 设置任务看门狗的超时时间为5s，并使能看门狗</span></span><br><span class="line">  esp_task_wdt_add(<span class="literal">NULL</span>); <span class="comment">// 将loop()添加到任务看门狗的监控列表中</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">bool</span> <span class="title function_">isTargetUID</span><span class="params">(byte *uid)</span> &#123;</span><br><span class="line">  <span class="type">const</span> byte targetUID1[] = &#123;<span class="number">0x7A</span>, <span class="number">0x14</span>, <span class="number">0x86</span>, <span class="number">0x4E</span>&#125;; <span class="comment">// 洪汶熙的校卡</span></span><br><span class="line">  <span class="type">const</span> byte targetUID2[] = &#123;<span class="number">0x09</span>, <span class="number">0xAB</span>, <span class="number">0x0D</span>, <span class="number">0x64</span>&#125;; <span class="comment">// 张殷华的校卡</span></span><br><span class="line">  <span class="type">const</span> byte targetUID3[] = &#123;<span class="number">0xCA</span>, <span class="number">0x55</span>, <span class="number">0x88</span>, <span class="number">0xE5</span>&#125;; <span class="comment">// 徐昌洲的校卡</span></span><br><span class="line">  <span class="type">const</span> byte targetUID4[] = &#123;<span class="number">0xCA</span>, <span class="number">0x8B</span>, <span class="number">0x90</span>, <span class="number">0x7F</span>&#125;; <span class="comment">// 毛逸先的校卡</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span> (byte i = <span class="number">0</span>; i &lt; <span class="keyword">sizeof</span>(targetUID1); i++) &#123;</span><br><span class="line">    <span class="keyword">if</span> (uid[i] != targetUID1[i]</span><br><span class="line">    &amp;&amp;  uid[i] != targetUID2[i]</span><br><span class="line">    &amp;&amp;  uid[i] != targetUID3[i]</span><br><span class="line">    &amp;&amp;  uid[i] != targetUID4[i]) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">loop</span><span class="params">()</span> &#123;</span><br><span class="line"></span><br><span class="line">  digitalWrite(LED_PIN, LOW); <span class="comment">// 确保LED初始状态为熄灭</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (digitalRead(PIN_33) == HIGH) <span class="comment">// 如果引脚33为高电平</span></span><br><span class="line">  &#123;</span><br><span class="line">    Serial1.write(PS_GetImage, <span class="keyword">sizeof</span>(PS_GetImage));  <span class="comment">// 向传感器发送指令包</span></span><br><span class="line"></span><br><span class="line">    delay(<span class="number">300</span>); <span class="comment">// 延时30ms，等待传感器返回数据</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (Serial1.available()) <span class="comment">// 判断串口是否读取到指令包</span></span><br><span class="line">    &#123;</span><br><span class="line">      String receiveData_1 = Serial1.readString(); <span class="comment">// 读取并存储串口数据</span></span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> (receiveData_1[<span class="number">9</span>] == <span class="number">0x00</span>) <span class="comment">// 检查确认码是否为0x00</span></span><br><span class="line">      &#123;</span><br><span class="line">        Serial1.write(PS_GenChar, <span class="keyword">sizeof</span>(PS_GenChar));</span><br><span class="line"></span><br><span class="line">        delay(<span class="number">300</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (Serial1.available())</span><br><span class="line">        &#123;</span><br><span class="line">          String receiveData_2 = Serial1.readString(); <span class="comment">// 读取并存储串口数据</span></span><br><span class="line"></span><br><span class="line">          <span class="keyword">if</span> (receiveData_2[<span class="number">9</span>] == <span class="number">0x00</span>) <span class="comment">// 检查确认码是否为0x00</span></span><br><span class="line">          &#123;</span><br><span class="line">            Serial1.write(PS_Search, <span class="keyword">sizeof</span>(PS_Search));</span><br><span class="line"></span><br><span class="line">            delay(<span class="number">300</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (Serial1.available())</span><br><span class="line">            &#123;</span><br><span class="line">              String receiveData_3 = Serial1.readString();</span><br><span class="line"></span><br><span class="line">              <span class="keyword">if</span> (receiveData_3[<span class="number">9</span>] == <span class="number">0x00</span>)</span><br><span class="line">              &#123;</span><br><span class="line">                digitalWrite(LED_PIN, HIGH); <span class="comment">// 点亮LED</span></span><br><span class="line">                servo1.write(<span class="number">60</span>); <span class="comment">// 执行开门操作</span></span><br><span class="line">                delay(<span class="number">1000</span>);</span><br><span class="line">                servo1.write(<span class="number">180</span>); </span><br><span class="line">              &#125;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (!rfid.PICC_IsNewCardPresent() || !rfid.PICC_ReadCardSerial()) &#123;</span><br><span class="line">    delay(<span class="number">50</span>);</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 检查是否为目标UID</span></span><br><span class="line">  <span class="keyword">if</span> (isTargetUID(rfid.uid.uidByte)) &#123;</span><br><span class="line">  digitalWrite(LED_PIN, HIGH); <span class="comment">// 点亮LED</span></span><br><span class="line"></span><br><span class="line">  servo1.write(<span class="number">60</span>); <span class="comment">// 执行开门操作</span></span><br><span class="line">  delay(<span class="number">1000</span>);</span><br><span class="line">  servo1.write(<span class="number">180</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  rfid.PICC_HaltA();</span><br><span class="line">  rfid.PCD_StopCrypto1();</span><br><span class="line"></span><br><span class="line">  esp_task_wdt_reset(); <span class="comment">// 重置任务看门狗的计时器</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<h2 id="门禁系统v2-0"><a href="#门禁系统v2-0" class="headerlink" title="门禁系统v2.0"></a>门禁系统v2.0</h2><p>由于已经不在宿舍住，V2.0改为卧室门锁，方便离开后锁门和解锁，保留NFC+指纹开门，同时在室内采用手扫上锁以及红外远程上锁解锁，同时采用7.4V的电池供电，红外遥控器通过工位上的USB HUB供电。</p>
<h3 id="问题总结-amp-硬件设计"><a href="#问题总结-amp-硬件设计" class="headerlink" title="问题总结&amp;硬件设计"></a>问题总结&amp;硬件设计</h3><p>第一代指纹传感器响应速度过慢，第二代将其替换为响应速度更快的指纹识别模块，并且有更小的体积，更便宜的价格。</p>
<p>保留NFC+指纹开门，同时加入室内开门机制，采用遥控器+人体识别开门，方便在工位的时候开门，同时也可以在室内手动上锁，方便出门上锁。</p>
<p>遥控器采用简单的红外遥控器即可，截取红外信号，然后自制一个开关放在工位上。</p>
<p>舵机采用经典的MG996R，不用小舵机，方便设计舵盘和复杂的机构，为了减少开发板的负担，舵机和开发板都在5V稳压模块上取电，指纹模块和RFID在开发板上取电。</p>
<h4 id="HLK-FPM383F-电容式指纹传感器"><a href="#HLK-FPM383F-电容式指纹传感器" class="headerlink" title="HLK-FPM383F 电容式指纹传感器"></a>HLK-FPM383F 电容式指纹传感器</h4><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/05/12/%E5%AE%BF%E8%88%8D%E6%99%BA%E8%83%BD%E9%97%A8%E7%A6%81%E7%B3%BB%E7%BB%9F/fig_4.png"
                      class="" width="500"
                >

<p>由于指纹模块的Rx端上拉电阻，而Tx端没有，因此单片机的Rx端需要上拉一个10K电阻到3V3引脚处，以保证通信正常。</p>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/05/12/%E5%AE%BF%E8%88%8D%E6%99%BA%E8%83%BD%E9%97%A8%E7%A6%81%E7%B3%BB%E7%BB%9F/fig_5.png"
                      class="" width="500"
                >

<p>UART默认波特率为57600，帧格式为8位数据位，2位停止位，无校验位；</p>
<p>指纹模块上电或者复位后需要一定时间初始化，根据手册，添加180ms的延时函数。</p>
<ul>
<li>单片机上引脚定义：<strong>26作为TX连接黑色，27作为RX连接黄色</strong>，引脚25作为输入连接<code>TOUCH</code>，引脚33输出3V3作为<code>VCC</code>；</li>
<li>指纹模块引脚定义：黄色线为<code>Tx</code>，黑色线为<code>Rx</code>，绿色线为<code>VCC</code>，白色线为<code>TOUCH_VCC</code>，蓝色线为<code>TOUCH</code>，红色线为<code>GND</code>；</li>
</ul>
<p>接线如下：</p>
<table>
<thead>
<tr>
<th align="center">HLK-FPM383F</th>
<th align="center">ESP32</th>
</tr>
</thead>
<tbody><tr>
<td align="center">TOUCH_VCC</td>
<td align="center">33</td>
</tr>
<tr>
<td align="center">TOUCH_OUT</td>
<td align="center">25</td>
</tr>
<tr>
<td align="center">VCC</td>
<td align="center">33</td>
</tr>
<tr>
<td align="center">TX</td>
<td align="center">27</td>
</tr>
<tr>
<td align="center">RX</td>
<td align="center">26</td>
</tr>
<tr>
<td align="center">GND</td>
<td align="center">GND</td>
</tr>
</tbody></table>
<p>关于休眠指令的触发，发送休眠指令<code>PS_Sleep</code>使得指纹模块进入休眠，<code>TOUCH</code>输出低电平，其触发条件如下：</p>
<ul>
<li>VCC为低电平，不能响应休眠，VCC检测到上升沿后，指纹模块激活；</li>
<li><code>TOUCH</code>上拉或下拉电阻，都会激活指纹模块；</li>
<li>重新烧录代码，引脚刷新，指纹模块激活；</li>
</ul>

  <div class="note p-4 mb-4 rounded-small yellow">
    <p>在计算校验和的时候，要注意是<strong>字节</strong>之和，而不是按照协议的分类，例如ID号是FFFF，应该算0xFF+0xFF，而不是直接用0xFFFF去算。算校验和的时候先把16进制全部转化为10进制，加起来再转换为16进制，多算几遍确保无误；</p>

  </div>

<p><a class="link"   href="https://www.sojson.com/hexconvert/10to16.html" >进制转换工具 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p>使用特定的上位机录入指纹较方便；</p>
<p>先用串口调试工具测试，再写代码！</p>
<div style="display: flex; align-items: center;">
    <div style="flex: 50%; padding: 5px;">
        <img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/05/12/%E5%AE%BF%E8%88%8D%E6%99%BA%E8%83%BD%E9%97%A8%E7%A6%81%E7%B3%BB%E7%BB%9F/fig_6.png"
                      class="" width="200"
                >
        主控唤醒指纹模块流程
    </div>
    <div style="flex: 50%; padding: 5px;">
        <img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/05/12/%E5%AE%BF%E8%88%8D%E6%99%BA%E8%83%BD%E9%97%A8%E7%A6%81%E7%B3%BB%E7%BB%9F/fig_7.png"
                      class="" width="250"
                >
        自动验证指纹流程
    </div>
</div>

<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Arduino.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LED_PIN 2</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> VCC 33   <span class="comment">// 指纹模组电源</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> TOUCH 25 <span class="comment">// 手指检测引脚</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">uint8_t</span> PS_AutoIdentify[] = &#123;<span class="number">0xEF</span>, <span class="number">0x01</span>, <span class="number">0xFF</span>, <span class="number">0xFF</span>, <span class="number">0xFF</span>, <span class="number">0xFF</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0x08</span>, <span class="number">0x32</span>, <span class="number">0x03</span>, <span class="number">0xFF</span>, <span class="number">0xFF</span>, <span class="number">0x00</span>, <span class="number">0x07</span>, <span class="number">0x02</span>, <span class="number">0x43</span>&#125;;</span><br><span class="line"><span class="comment">// EF 01 FF FF FF FF 01 00 08 32 03 FF FF 00 07 02 43</span></span><br><span class="line"><span class="type">const</span> <span class="type">uint8_t</span> PS_Sleep[] = &#123;<span class="number">0xEF</span>, <span class="number">0x01</span>, <span class="number">0xFF</span>, <span class="number">0xFF</span>, <span class="number">0xFF</span>, <span class="number">0xFF</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0x03</span>, <span class="number">0x33</span>, <span class="number">0x00</span>, <span class="number">0x37</span>&#125;;</span><br><span class="line"><span class="comment">// EF 01 FF FF FF FF 01 00 03 33 00 37</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">setup</span><span class="params">()</span> &#123;</span><br><span class="line">  Serial1.begin(<span class="number">57600</span>, SERIAL_8N2, <span class="number">27</span>, <span class="number">26</span>);</span><br><span class="line">  Serial.begin(<span class="number">57600</span>, SERIAL_8N2); <span class="comment">// 用于电脑端检查</span></span><br><span class="line"></span><br><span class="line">  pinMode(VCC, OUTPUT);</span><br><span class="line">  pinMode(LED_PIN, OUTPUT);</span><br><span class="line"></span><br><span class="line">  pinMode(TOUCH, INPUT);</span><br><span class="line"></span><br><span class="line">  pinMode(<span class="number">27</span>, INPUT_PULLUP); <span class="comment">// RX引脚上拉电阻</span></span><br><span class="line"></span><br><span class="line">  digitalWrite(LED_PIN, LOW);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">loop</span><span class="params">()</span> &#123;</span><br><span class="line">  <span class="keyword">if</span> (digitalRead(TOUCH) == HIGH) </span><br><span class="line">  &#123;</span><br><span class="line">    digitalWrite(VCC, HIGH); <span class="comment">// 指纹模块VCC上电</span></span><br><span class="line">    delay(<span class="number">180</span>); <span class="comment">// 上电初始化</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (Serial1.available()) <span class="comment">// 清空休眠和开机的数据缓存</span></span><br><span class="line">    &#123;</span><br><span class="line">      Serial1.read();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    Serial1.write(PS_AutoIdentify, <span class="keyword">sizeof</span>(PS_AutoIdentify)); <span class="comment">// 发送自动识别指令</span></span><br><span class="line">    delay(<span class="number">800</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (Serial1.available())</span><br><span class="line">    &#123;</span><br><span class="line">      String receiveData_1 = Serial1.readString(); <span class="comment">// 读取第一个应答包</span></span><br><span class="line">      </span><br><span class="line">      Serial.print(receiveData_1); <span class="comment">// 打印字符的十六进制值</span></span><br><span class="line">      Serial.print(<span class="string">&quot; &quot;</span>); <span class="comment">// 打印空格</span></span><br><span class="line">      Serial.println();</span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> (receiveData_1.length() &gt;= <span class="number">10</span> &amp;&amp; receiveData_1[<span class="number">9</span>] == <span class="number">0x00</span>) <span class="comment">// 验证第一个应答包</span></span><br><span class="line">      &#123;</span><br><span class="line">        digitalWrite(LED_PIN, HIGH);</span><br><span class="line">        delay(<span class="number">1000</span>);</span><br><span class="line">        digitalWrite(LED_PIN, LOW);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    Serial1.write(PS_Sleep, <span class="keyword">sizeof</span>(PS_Sleep)); <span class="comment">// 指纹模块休眠</span></span><br><span class="line"></span><br><span class="line">    delay(<span class="number">100</span>);</span><br><span class="line"></span><br><span class="line">    digitalWrite(VCC, LOW); <span class="comment">// 指纹模块VCC下电</span></span><br><span class="line">  &#125;</span><br><span class="line">  delay(<span class="number">100</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<h4 id="RFID-RC522-射频感应模块"><a href="#RFID-RC522-射频感应模块" class="headerlink" title="RFID-RC522 射频感应模块"></a>RFID-RC522 射频感应模块</h4><p>需要安装库依赖，打开根目录下的<code>platformio.ini</code>文件，添加如下内容：</p>
<div class="highlight-container" data-rel="Ini"><figure class="iseeu highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="section">[env:esp32dev]</span></span><br><span class="line"><span class="attr">platform</span> = espressif32</span><br><span class="line"><span class="attr">board</span> = esp32dev</span><br><span class="line"><span class="attr">framework</span> = ardui<span class="literal">no</span></span><br><span class="line"><span class="attr">lib_deps</span> = MFRC522</span><br></pre></td></tr></table></figure></div>

<p>接线如下：</p>
<table>
<thead>
<tr>
<th align="center">RFID-RC522</th>
<th align="center">ESP32</th>
</tr>
</thead>
<tbody><tr>
<td align="center">SDA</td>
<td align="center">5</td>
</tr>
<tr>
<td align="center">SCK</td>
<td align="center">18</td>
</tr>
<tr>
<td align="center">MOSI</td>
<td align="center">23</td>
</tr>
<tr>
<td align="center">MISO</td>
<td align="center">19</td>
</tr>
<tr>
<td align="center">GND</td>
<td align="center">GND</td>
</tr>
<tr>
<td align="center">RST</td>
<td align="center">12</td>
</tr>
<tr>
<td align="center">3V3</td>
<td align="center">13</td>
</tr>
</tbody></table>
<p>为了方便使用校园卡中的NFC身份信息来做验证，因此先通过一个程序读取并且打印所有NFC卡的UID，然后再将其写在门锁的程序中：</p>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Arduino.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;SPI.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;MFRC522.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> PIN_13 13</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SS_PIN 5</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> RST_PIN 12</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LED_PIN 2</span></span><br><span class="line"></span><br><span class="line">MFRC522 <span class="title function_">rfid</span><span class="params">(SS_PIN, RST_PIN)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">setup</span><span class="params">()</span> &#123;</span><br><span class="line">  Serial.begin(<span class="number">115200</span>);</span><br><span class="line"></span><br><span class="line">  pinMode(LED_PIN, OUTPUT);</span><br><span class="line">  digitalWrite(LED_PIN, LOW);</span><br><span class="line"></span><br><span class="line">  pinMode(PIN_13, OUTPUT);</span><br><span class="line">  digitalWrite(PIN_13, HIGH); <span class="comment">// 13输出3.3V到传感器上</span></span><br><span class="line"></span><br><span class="line">  SPI.begin(); <span class="comment">// 初始化SPI接口</span></span><br><span class="line"></span><br><span class="line">  rfid.PCD_Init(); <span class="comment">// 初始化RFID模块</span></span><br><span class="line"></span><br><span class="line">  rfid.PCD_SetAntennaGain(rfid.RxGain_max); <span class="comment">// 设置天线增益</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">loop</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (!rfid.PICC_IsNewCardPresent() || !rfid.PICC_ReadCardSerial()) &#123;</span><br><span class="line">    delay(<span class="number">50</span>);</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 点亮LED</span></span><br><span class="line">  digitalWrite(LED_PIN, HIGH); <span class="comment">// 点亮LED</span></span><br><span class="line">  <span class="comment">// 打印卡片UID</span></span><br><span class="line">  Serial.print(<span class="string">&quot;Card UID: &quot;</span>);</span><br><span class="line">  <span class="keyword">for</span> (byte i = <span class="number">0</span>; i &lt; rfid.uid.size; i++) &#123;</span><br><span class="line">    Serial.print(rfid.uid.uidByte[i] &lt; <span class="number">0x10</span> ? <span class="string">&quot; 0&quot;</span> : <span class="string">&quot; &quot;</span>);</span><br><span class="line">    Serial.print(rfid.uid.uidByte[i], HEX);</span><br><span class="line">  &#125;</span><br><span class="line">  Serial.println();</span><br><span class="line"></span><br><span class="line">  rfid.PICC_HaltA();</span><br><span class="line">  rfid.PCD_StopCrypto1();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<p>测试程序：</p>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Arduino.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;SPI.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;MFRC522.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LED_PIN 2</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> PIN_13 13 <span class="comment">// RFID输入3.3V</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SS_PIN 5</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> RST_PIN 12</span></span><br><span class="line"></span><br><span class="line">MFRC522 <span class="title function_">rfid</span><span class="params">(SS_PIN, RST_PIN)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">setup</span><span class="params">()</span> &#123;</span><br><span class="line">  pinMode(LED_PIN, OUTPUT);</span><br><span class="line">  digitalWrite(LED_PIN, LOW);</span><br><span class="line"></span><br><span class="line">  pinMode(PIN_13, OUTPUT); <span class="comment">// RFID输入3.3V</span></span><br><span class="line">  digitalWrite(PIN_13, HIGH);</span><br><span class="line"></span><br><span class="line">  SPI.begin(); <span class="comment">// 初始化SPI接口</span></span><br><span class="line">  rfid.PCD_Init(); <span class="comment">// 初始化RFID模块</span></span><br><span class="line">  rfid.PCD_SetAntennaGain(rfid.RxGain_max); <span class="comment">// 设置天线增益</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">bool</span> <span class="title function_">isTargetUID</span><span class="params">(byte *uid)</span> &#123;</span><br><span class="line">  <span class="type">const</span> byte targetUID1[] = &#123;<span class="number">0x7A</span>, <span class="number">0x14</span>, <span class="number">0x86</span>, <span class="number">0x4E</span>&#125;; <span class="comment">// 洪汶熙的校卡</span></span><br><span class="line">  <span class="type">const</span> byte targetUID2[] = &#123;<span class="number">0x09</span>, <span class="number">0xAB</span>, <span class="number">0x0D</span>, <span class="number">0x64</span>&#125;; <span class="comment">// 张殷华的校卡</span></span><br><span class="line">  <span class="type">const</span> byte targetUID3[] = &#123;<span class="number">0xCA</span>, <span class="number">0x55</span>, <span class="number">0x88</span>, <span class="number">0xE5</span>&#125;; <span class="comment">// 徐昌洲的校卡</span></span><br><span class="line">  <span class="type">const</span> byte targetUID4[] = &#123;<span class="number">0xCA</span>, <span class="number">0x8B</span>, <span class="number">0x90</span>, <span class="number">0x7F</span>&#125;; <span class="comment">// 毛逸先的校卡</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span> (byte i = <span class="number">0</span>; i &lt; <span class="keyword">sizeof</span>(targetUID1); i++) &#123;</span><br><span class="line">    <span class="keyword">if</span> (uid[i] != targetUID1[i]</span><br><span class="line">    &amp;&amp;  uid[i] != targetUID2[i]</span><br><span class="line">    &amp;&amp;  uid[i] != targetUID3[i]</span><br><span class="line">    &amp;&amp;  uid[i] != targetUID4[i]) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">loop</span><span class="params">()</span> &#123;</span><br><span class="line">  <span class="keyword">if</span> (!rfid.PICC_IsNewCardPresent() || !rfid.PICC_ReadCardSerial())</span><br><span class="line">  &#123;</span><br><span class="line">    delay(<span class="number">50</span>);</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">if</span> (isTargetUID(rfid.uid.uidByte))</span><br><span class="line">  &#123;</span><br><span class="line">    digitalWrite(LED_PIN, HIGH);</span><br><span class="line">    delay(<span class="number">1000</span>);</span><br><span class="line">    digitalWrite(LED_PIN, LOW);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  rfid.PICC_HaltA();</span><br><span class="line">  rfid.PCD_StopCrypto1();</span><br><span class="line">  delay(<span class="number">100</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<h4 id="HLK-LD102-微运动感应模块"><a href="#HLK-LD102-微运动感应模块" class="headerlink" title="HLK-LD102 微运动感应模块"></a>HLK-LD102 微运动感应模块</h4><p>手扫感应开关采用海凌科的HLK-LD102微运动感知模组；</p>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/05/12/%E5%AE%BF%E8%88%8D%E6%99%BA%E8%83%BD%E9%97%A8%E7%A6%81%E7%B3%BB%E7%BB%9F/fig_8.png"
                      class="" width="500"
                >

<p>上位机配置参数如下，串口波特率设置为57600：</p>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/05/12/%E5%AE%BF%E8%88%8D%E6%99%BA%E8%83%BD%E9%97%A8%E7%A6%81%E7%B3%BB%E7%BB%9F/fig_9.png"
                      class="" width="300"
                >

<p>注意：上位机配置完参数之后需要重启才行！</p>
<p>手扫一下，TTL引脚输出高电平，此时上锁；再扫一下，TTL引脚输出低电平，此时解锁，中间需要间隔1s。</p>
<p>输出引脚电平变高和变低会有抖动，需要加入延时函数消抖。</p>
<h4 id="MG996R-舵机"><a href="#MG996R-舵机" class="headerlink" title="MG996R 舵机"></a>MG996R 舵机</h4><p>MG996R 舵机的工作频率在50Hz，因此脉冲周期微20ms，通过控制高电平的时间来控制舵机角度，这里为0.5ms-2.5ms；</p>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/05/12/%E5%AE%BF%E8%88%8D%E6%99%BA%E8%83%BD%E9%97%A8%E7%A6%81%E7%B3%BB%E7%BB%9F/fig_10.png"
                      class="" width="300"
                >

<p>使用ledc模块输出PWM，使用10位解析度，将对应的脉冲转化为解析度；</p>
<p>测试程序：这里将正常情况下（没上锁）输入脉冲宽度为0.5ms，上锁的脉冲宽度设置为1.5ms。</p>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Arduino.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> servoPin 22 <span class="comment">// 舵机引脚</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> freq 50 <span class="comment">// 舵机频率</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ledChannel 0 <span class="comment">//LEDc模块的通道0</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> resolution 10 <span class="comment">// 分辨率</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">setup</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">  ledcSetup(ledChannel, freq, resolution); <span class="comment">// 配置LEDc模块</span></span><br><span class="line">  ledcAttachPin(servoPin, ledChannel); <span class="comment">// 将舵机引脚连接到LEDc模块的通道0</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">loop</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">  ledcWrite(ledChannel, <span class="number">77</span>); <span class="comment">// 上锁，占空比约为0.075，相当于1.5ms</span></span><br><span class="line">  delay(<span class="number">1000</span>);</span><br><span class="line">  ledcWrite(ledChannel, <span class="number">25</span>); <span class="comment">// 解锁，占空比约为0.025，相当于0.5ms</span></span><br><span class="line">  delay(<span class="number">1000</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<h4 id="红外传感器"><a href="#红外传感器" class="headerlink" title="红外传感器"></a>红外传感器</h4><p>目前还有点问题</p>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Arduino.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;IRremote.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> recvPin 35</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ledPin 2</span></span><br><span class="line"></span><br><span class="line">IRrecv <span class="title function_">irrecv</span><span class="params">(recvPin)</span>;</span><br><span class="line">decode_results results;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">setup</span><span class="params">()</span> &#123;</span><br><span class="line">  Serial.begin(<span class="number">9600</span>);</span><br><span class="line">  pinMode(ledPin, OUTPUT);</span><br><span class="line">  irrecv.enableIRIn(); <span class="comment">// 初始化接收器</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">loop</span><span class="params">()</span> &#123;</span><br><span class="line">  digitalWrite(ledPin, LOW);</span><br><span class="line">  <span class="keyword">if</span> (irrecv.decode()) &#123;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">long</span> data = IrReceiver.decodedIRData.decodedRawData;</span><br><span class="line">    Serial.println(data, HEX);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (data == <span class="number">0x00</span>) &#123;</span><br><span class="line">    digitalWrite(ledPin, HIGH);</span><br><span class="line">    Serial.println(<span class="string">&quot;LED ON&quot;</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      digitalWrite(ledPin, LOW);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    delay(<span class="number">100</span>);</span><br><span class="line">    irrecv.resume(); <span class="comment">// 接收下一个值</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></div>

<p><code>platformio.ini</code></p>
<div class="highlight-container" data-rel="Ini"><figure class="iseeu highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="section">[env:esp32dev]</span></span><br><span class="line"><span class="attr">platform</span> = espressif32</span><br><span class="line"><span class="attr">board</span> = esp32dev</span><br><span class="line"><span class="attr">framework</span> = ardui<span class="literal">no</span></span><br><span class="line"><span class="attr">lib_deps</span> = </span><br><span class="line">    MFRC522</span><br><span class="line">    IRremote</span><br></pre></td></tr></table></figure></div>



]]></content>
      <categories>
        <category>Other Projects</category>
      </categories>
  </entry>
  <entry>
    <title>服务机器人的构想</title>
    <url>/2024/08/28/%E5%BF%AB%E9%80%92%E6%9C%BA%E5%99%A8%E4%BA%BA%E7%9A%84%E6%9E%84%E6%83%B3/</url>
    <content><![CDATA[<h2 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h2><p>解决校园或者园区内实验室和宿舍取快递, 取外卖的问题. 解决取快递, 取外卖最后一公里的问题.</p>
<p>例如机器人要从实验室出发, 到达驿站, 取了快递之后, 进入大楼, 送到指定楼层的指定房间.</p>
<h2 id="技术难点"><a href="#技术难点" class="headerlink" title="技术难点"></a>技术难点</h2><ul>
<li>SLAM技术</li>
</ul>
<p>从实验室到驿站, 这一段路程, 机器人需要自主导航.</p>
<ul>
<li>带视觉系统的机械臂</li>
</ul>
<p>机器人到达快递柜之后, 需要输入取件码, 打开柜门, 取出快递. 除了使用神经网络的视觉系统外, 还需要机器人有一定的大模型能力.</p>
<ul>
<li>室内导航</li>
</ul>
<p>室内使用SLAM技术, 使得机器人会按电梯, 在指定的楼层导航, 最后能够到达指定楼层的指定房间.</p>
<p>主要难点在于让机器人能够理解乘坐电梯这件事情, 就非常困难.</p>
<p>整个室内导航可以分为三个部分: </p>
<ul>
<li>从一楼导航到电梯门口</li>
<li>乘坐电梯</li>
<li>从电梯出来, 导航到指定楼层的指定房间</li>
</ul>
<p>机器人导航到电梯门口, 如何判断电梯是否到达, 电梯门是否打开, 电梯内部是否有人, 如何躲避人类避免误伤, 如何判断电梯是否到达指定楼层, 判断指定楼层到达之后, 等待电梯门打开.</p>
<h2 id="初步设想"><a href="#初步设想" class="headerlink" title="初步设想"></a>初步设想</h2><ul>
<li>由我来完成机械臂取快递的操作, 然后找会SLAM的同学来完成机器人的导航. 最后一起解决乘坐电梯的问题.</li>
</ul>
]]></content>
  </entry>
  <entry>
    <title>打印机维修日志</title>
    <url>/2023/05/21/%E6%89%93%E5%8D%B0%E6%9C%BA%E7%BB%B4%E4%BF%AE%E6%97%A5%E5%BF%97/</url>
    <content><![CDATA[<h1 id="维修日志"><a href="#维修日志" class="headerlink" title="维修日志"></a>维修日志</h1><p>打印机型号：<strong>Sermoon D1</strong></p>
<h2 id="2023-05-19"><a href="#2023-05-19" class="headerlink" title="2023-05-19"></a>2023-05-19</h2><p>开始修理搁置大半年的打印机，遇到了很多问题，首先是在调平过程中，显示屏卡死，找创想三维的技术重新刷了固件，就能用了。</p>
<p>在调平过程中还遇到一个问题，螺母行程不足，喷头离打印平台太远，将螺母几乎扭出螺丝仍然不够，后续在四个支撑螺丝上加入垫片垫高（M4），使得弹簧给打印平台更多的压力，这样就有足够的行程调平了。</p>
<p>在打印过程发现，喷头无法正常出丝，打印的效果如下：</p>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/05/21/%E6%89%93%E5%8D%B0%E6%9C%BA%E7%BB%B4%E4%BF%AE%E6%97%A5%E5%BF%97/fig_1.jpg"
                      class="" width="500"
                >

<p>同时在喷头加热到220℃后仍然无法将打印耗材拔出（用钳子都拔不出来），拆开喷头后清理喉管和喷头都不管用，并且每次清理的时候都能清理一坨弯曲的耗材，后来才发现喉管滑落，喉管顶部和挤出机的连接地方有一个空腔，导致耗材都堵在那里，无法正常出丝。</p>
<p>咨询技术后买了新的喉管，准备进行更换。</p>
<h2 id="2023-05-20"><a href="#2023-05-20" class="headerlink" title="2023-05-20"></a>2023-05-20</h2><p>更换新的喉管之后，在220℃下能够正常出丝，并且拔出耗材的头如下图（正常情况）</p>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/05/21/%E6%89%93%E5%8D%B0%E6%9C%BA%E7%BB%B4%E4%BF%AE%E6%97%A5%E5%BF%97/fig_2.jpg"
                      class="" width="600"
                >

<p>并且能够进行初步的正常打印。</p>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/05/21/%E6%89%93%E5%8D%B0%E6%9C%BA%E7%BB%B4%E4%BF%AE%E6%97%A5%E5%BF%97/fig_3.jpg"
                      class="" width="500"
                >

<p>但是在打印过程中，又出现了出丝不畅的情况，即分层现象，同时整个打印件一捏就碎，毫无一点强度，咨询他人后发现是堵头。</p>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/05/21/%E6%89%93%E5%8D%B0%E6%9C%BA%E7%BB%B4%E4%BF%AE%E6%97%A5%E5%BF%97/fig_4.jpg"
                      class="" width="500"
                >

<h2 id="2023-05-21"><a href="#2023-05-21" class="headerlink" title="2023-05-21"></a>2023-05-21</h2><p>多次测试之后，猜测可能是铁氟龙管老化或者摩擦阻力太大，需要对铁氟龙管进行更换。</p>
<p>为了验证想法，我将铁氟龙管拆了，直接将耗材不通过铁氟龙管直接插入挤出机，发现打印效果好了一点，但是打到后面仍然会出现上述情况。猜测是由于打印过程中直接拉扯耗材造成，后续购买了新的进口铁氟龙管，准备更换。</p>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/05/21/%E6%89%93%E5%8D%B0%E6%9C%BA%E7%BB%B4%E4%BF%AE%E6%97%A5%E5%BF%97/fig_5.jpg"
                      class="" width="500"
                >


<h2 id="刷固件方法"><a href="#刷固件方法" class="headerlink" title="刷固件方法"></a>刷固件方法</h2><ol>
<li>将SD卡格式化，将<code>firmware_V1.1.18.bin</code>文件放入SD卡根目录；</li>
<li>切断打印机电源，将SD卡插入打印机；</li>
<li>重启打印机即可。</li>
</ol>
<h2 id="喉管问题"><a href="#喉管问题" class="headerlink" title="喉管问题"></a>喉管问题</h2><p>喉管的隔热套不能取下来，由于散热过快，可能会堵住喷头。</p>
]]></content>
      <categories>
        <category>Mechanical Design</category>
      </categories>
  </entry>
  <entry>
    <title>拓扑优化</title>
    <url>/2023/07/30/%E6%8B%93%E6%89%91%E4%BC%98%E5%8C%96/</url>
    <content><![CDATA[<h2 id="结构优化基础知识"><a href="#结构优化基础知识" class="headerlink" title="结构优化基础知识"></a>结构优化基础知识</h2><p>在对机器人进行研发设计的时候，结构优化是一个很重要的步骤，好的结构优化能够提高零件的刚度重量比，在机器人的关键部位和一些重要的承重零件，利用各种结构优化，从而减轻机器人的重量，提高整个机器人的性能。<br>结构优化通常可以分为以下四类：</p>
<ul>
<li>尺寸优化<ul>
<li>一般优化零件的整体尺寸参数，优化孔的半径、板的厚度以及整体大小尺寸和形状都是；</li>
</ul>
</li>
<li>形状优化<ul>
<li>连续体的开孔形状，如圆孔还是方孔等、倒角，圆倒角还是方倒角、和边界形状等；</li>
</ul>
</li>
<li>形貌优化<ul>
<li>一般应用于钣金件的结构加强筋设计上，利用冲压形成压痕的加工工艺添加加强筋，可以看作是广义的形状优化中的边界形状设计</li>
</ul>
</li>
<li>拓扑优化<ul>
<li>以材料分布为优化对象，通过拓扑优化，可以在均匀分布材料的设计空间中找到最佳的分布方案。</li>
</ul>
</li>
</ul>

  <div class="note p-4 mb-4 rounded-small primary">
    <p>💡除了拓扑优化会改变结构的拓扑以外，其余三种优化均不会改变结构的拓扑形式。</p>

  </div>

<h3 id="拓扑优化"><a href="#拓扑优化" class="headerlink" title="拓扑优化"></a>拓扑优化</h3><blockquote>
<p>拓扑优化（Topology Optimization）是在给定的3D几何设计空间内对设计人员设置的定义规则集优化材料的布局及结构的过程。目标是通过对设计范围内的外力、荷载条件、边界条件、约束以及材料属性等因素进行数学建模和优化，从而最大限度的提高零件的性能。</p>
</blockquote>
<p>拓扑优化常用于提高一个零件的刚度重量比；</p>
<div style="display: flex; align-items: center;">
    <div style="flex: 50%; padding: 5px;">
        
    </div>
    <div style="flex: 50%; padding: 5px;">
        
    </div>
</div>



<h2 id="Solidworks拓扑优化"><a href="#Solidworks拓扑优化" class="headerlink" title="Solidworks拓扑优化"></a>Solidworks拓扑优化</h2>]]></content>
      <categories>
        <category>Mechanical Design</category>
      </categories>
  </entry>
  <entry>
    <title>无人机安全性论文笔记</title>
    <url>/2024/10/15/%E6%97%A0%E4%BA%BA%E6%9C%BA%E5%AE%89%E5%85%A8%E6%80%A7%E8%AE%BA%E6%96%87%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h2 id="Neual-Fly-enables-rapid-learning-for-agile-flight-in-strong-winds"><a href="#Neual-Fly-enables-rapid-learning-for-agile-flight-in-strong-winds" class="headerlink" title="Neual-Fly enables rapid learning for agile flight in strong winds"></a>Neual-Fly enables rapid learning for agile flight in strong winds</h2><p><a class="link"   href="https://www.science.org/doi/epdf/10.1126/scirobotics.abm6597" >链接 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p>论文中提到的抵抗最大风力是43.6km&#x2F;h, 即12.1m&#x2F;s.</p>
<p>论文提出了一种 data-driven approach. 叫做 Neural-Fly. 能够达到厘米级精度的误差.</p>
<p>该算法的两个核心:</p>
<ul>
<li>an offline learning phase;<ul>
<li>Domain adversarially invariant meta-learning (DAIML) learns a wind condition-independent deep neural network (DNN).</li>
</ul>
</li>
<li>an online adaptive control phase used as real-time online learning.</li>
</ul>
]]></content>
      <categories>
        <category>Scientific Research</category>
      </categories>
  </entry>
  <entry>
    <title>无人机算法设计</title>
    <url>/2024/08/19/%E6%97%A0%E4%BA%BA%E6%9C%BA%E6%8E%A7%E5%88%B6%E7%AE%97%E6%B3%95%E8%AE%BE%E8%AE%A1/</url>
    <content><![CDATA[<h2 id="硬件选型"><a href="#硬件选型" class="headerlink" title="硬件选型"></a>硬件选型</h2><p>电机采用T-motor的U系列工业级无刷电机，具备防水防尘的特点。</p>
<img lazyload="" src="/images/loading.svg" data-src="/2024/08/19/%E6%97%A0%E4%BA%BA%E6%9C%BA%E6%8E%A7%E5%88%B6%E7%AE%97%E6%B3%95%E8%AE%BE%E8%AE%A1/fig_1.png" class="" width="400">

<p>采用4S电池供电，并且采用T-motor的13*4.4CF碳纤维桨叶，75%油门可以提供1400g的拉力。</p>
<p>14.8V飞行参数（从左到右：油门，电流，功率，拉力，转速，力效，电机温度）</p>
<img lazyload="" src="/images/loading.svg" data-src="/2024/08/19/%E6%97%A0%E4%BA%BA%E6%9C%BA%E6%8E%A7%E5%88%B6%E7%AE%97%E6%B3%95%E8%AE%BE%E8%AE%A1/fig_3.png" class="" width="400">

<p>电机工程图如下：</p>
<img lazyload="" src="/images/loading.svg" data-src="/2024/08/19/%E6%97%A0%E4%BA%BA%E6%9C%BA%E6%8E%A7%E5%88%B6%E7%AE%97%E6%B3%95%E8%AE%BE%E8%AE%A1/fig_2.png" class="" width="400">


<h2 id="机械结构设计"><a href="#机械结构设计" class="headerlink" title="机械结构设计"></a>机械结构设计</h2><p>采用八电机设计，主体结构为碳纤维连接, 轴距为360mm.</p>
<h2 id="基础算法"><a href="#基础算法" class="headerlink" title="基础算法"></a>基础算法</h2><p>经典的无人算法通过级联控制(cascaded control)或分层控制(hierarchical control)将姿态控制器, 高度控制器, 推力分配器分开进行设计. 每一个控制器采用PID进行设计.</p>
<h2 id="SDC算法设计与推导"><a href="#SDC算法设计与推导" class="headerlink" title="SDC算法设计与推导"></a>SDC算法设计与推导</h2><h2 id="实验设计"><a href="#实验设计" class="headerlink" title="实验设计"></a>实验设计</h2><h2 id="创新点设计"><a href="#创新点设计" class="headerlink" title="创新点设计"></a>创新点设计</h2>]]></content>
      <categories>
        <category>Robotics</category>
        <category>UAV</category>
      </categories>
  </entry>
  <entry>
    <title>本科毕业设计</title>
    <url>/2023/05/19/%E6%9C%AC%E7%A7%91%E6%AF%95%E4%B8%9A%E8%AE%BE%E8%AE%A1/</url>
    <content><![CDATA[<h2 id="合作博弈与可解释性"><a href="#合作博弈与可解释性" class="headerlink" title="合作博弈与可解释性"></a>合作博弈与可解释性</h2><p>项目的核心是将合作博弈中的估值问题与深度学习中的可解释性问题联系起来，用于解决样本的估值问题，判断出数据集的好坏和价值。</p>
<h2 id="博弈论中的估值问题"><a href="#博弈论中的估值问题" class="headerlink" title="博弈论中的估值问题"></a>博弈论中的估值问题</h2><h3 id="沙普利值-Shapley-Value"><a href="#沙普利值-Shapley-Value" class="headerlink" title="沙普利值 Shapley Value"></a>沙普利值 Shapley Value</h3><blockquote>
<p>沙普利值是由莱斯特·沙普利（Lloyd Shapley）在1953年提出的，用于解决合作博弈（Cooperative Game）中的支付分配问题。合作博弈中，个体或者团体可以通过联合行动以达到优于单独行动的结果，沙普利值则是判断如何公平地分配这个联合行动的收益。</p>
</blockquote>
<h2 id="机器学习中的估值问题"><a href="#机器学习中的估值问题" class="headerlink" title="机器学习中的估值问题"></a>机器学习中的估值问题</h2><ul>
<li><strong>Feature interpretation 可解释性的特征归因</strong><ul>
<li>特征解释通常涉及理解模型的输入特征如何影响模型的预测。这通常包括特征选择（哪些特征是重要的）以及特征的重要性排序，即对单个样本对模型的影响进行解释。</li>
</ul>
</li>
<li><strong>Data valuation 数据估值</strong><ul>
<li>数据估值涉及到评估数据集中每个样本的价值或贡献。找到贡献最大的样本和噪声最大的样本。</li>
</ul>
</li>
<li><strong>Model valuation for ensembles 模型估值</strong><ul>
<li>模型估值涉及到评估单个模型或模型组合（ensemble）对预测性能的贡献。通过模型估值，可以决定哪些模型应该包含在组合中，以及每个模型应该被赋予多少权重。</li>
</ul>
</li>
</ul>
<p>我主要的研究方向是先从Data valuation 数据估值入手，其实就是研究在机器学习中哪些数据是有用的，哪些数据是冗余的和对模型造成噪声。</p>
<h2 id="文献分析"><a href="#文献分析" class="headerlink" title="文献分析"></a>文献分析</h2><h3 id="Energy-Based-Learning-For-Cooperative-Games-with-Applications-to-Valuation-Problems-in-Machine-Learning"><a href="#Energy-Based-Learning-For-Cooperative-Games-with-Applications-to-Valuation-Problems-in-Machine-Learning" class="headerlink" title="Energy-Based Learning For Cooperative Games, with Applications to Valuation Problems in Machine Learning"></a>Energy-Based Learning For Cooperative Games, with Applications to Valuation Problems in Machine Learning</h3><blockquote>
<p>Valuation problems, such as feature interpretation, data valuation and model valuation for ensembles, become increasingly more important in many machine learning applications. Such problems are commonly addressed via well-known game-theoretic criteria, such as the Shapley value or Banzhaf value. In this work, we present a novel energy-based treatment for cooperative games, with a theoretical justification via the maximum entropy principle.</p>
</blockquote>
<p>在机器学习里面，在feature interpretation, data valuation, model valuation的三个估值问题上，通过博弈论中的Shapley值和Banzhaf值来解决。同时用一种基于能量的方法，，并通过最大熵原理进行理论上的证明。</p>
<blockquote>
<p>Surprisingly, through mean-field variational inference in the energy-based model, we recover classical game-theoretic valuation criteria by conducting one-step of fixed point iteration for maximizing the ELBO objective. By running the fixed point iteration for multiple steps, we achieve a trajectory of the variational valuations…</p>
</blockquote>
<p>利用平均场变分推断来进行学习和推断，通过一步不动点迭代来恢复Shapley值和Banzhaf值，并通过多步不动点迭代来得到一系列变分估值。</p>
<h2 id="概念分析"><a href="#概念分析" class="headerlink" title="概念分析"></a>概念分析</h2><h3 id="Shapley-Value"><a href="#Shapley-Value" class="headerlink" title="Shapley Value"></a>Shapley Value</h3><blockquote>
<p>沙普利值是由莱斯特·沙普利（Lloyd Shapley）在1953年提出的，用于解决合作博弈（Cooperative Game）中的支付分配问题。合作博弈中，个体或者团体可以通过联合行动以达到优于单独行动的结果，沙普利值则是判断如何公平地分配这个联合行动的收益。</p>
</blockquote>
<p>在深度学习中，训练数据的顺序确实可以影响模型的学习效果，尤其是在使用随机梯度下降（SGD）及其变种作为优化算法时。这是因为随机梯度下降每次更新权重时只使用一部分（即一个mini-batch）的数据，因此数据的顺序和组成可以影响梯度估计的准确性以及模型训练的方向和速度。</p>
<p>数据顺序的影响<br>局部最小和鞍点：在某些情况下，数据的顺序可能会导致模型更容易陷入局部最小值或鞍点。特别是在复杂的高维优化问题中，不同的数据顺序可能会使优化路径发生变化，从而影响最终模型的性能。</p>
<p>学习动态：不同的数据顺序可能会影响模型的学习动态，包括学习速率和收敛速度。例如，如果模型连续遇到相似的样本，它可能不会学习到足够多样化的特征表示；相反，如果数据顺序能够保证良好的样本多样性，模型可能会更快地学习到更泛化的特征表示。</p>
<p><strong>计算方法</strong></p>
<p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -3.222ex;" xmlns="http://www.w3.org/2000/svg" width="48.719ex" height="6.525ex" role="img" focusable="false" viewBox="0 -1460 21533.6 2884.1"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D719" d="M409 688Q413 694 421 694H429H442Q448 688 448 686Q448 679 418 563Q411 535 404 504T392 458L388 442Q388 441 397 441T429 435T477 418Q521 397 550 357T579 260T548 151T471 65T374 11T279 -10H275L251 -105Q245 -128 238 -160Q230 -192 227 -198T215 -205H209Q189 -205 189 -198Q189 -193 211 -103L234 -11Q234 -10 226 -10Q221 -10 206 -8T161 6T107 36T62 89T43 171Q43 231 76 284T157 370T254 422T342 441Q347 441 348 445L378 567Q409 686 409 688ZM122 150Q122 116 134 91T167 53T203 35T237 27H244L337 404Q333 404 326 403T297 395T255 379T211 350T170 304Q152 276 137 237Q122 191 122 150ZM500 282Q500 320 484 347T444 385T405 400T381 404H378L332 217L284 29Q284 27 285 27Q293 27 317 33T357 47Q400 66 431 100T475 170T494 234T500 282Z"></path></g><g data-mml-node="mi" transform="translate(629,-150) scale(0.707)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g></g><g data-mml-node="mo" transform="translate(923,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1312,0)"><path data-c="1D463" d="M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z"></path></g><g data-mml-node="mo" transform="translate(1797,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(2463.7,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="munder" transform="translate(3519.5,0)"><g data-mml-node="mo" transform="translate(393.8,0)"><path data-c="2211" d="M60 948Q63 950 665 950H1267L1325 815Q1384 677 1388 669H1348L1341 683Q1320 724 1285 761Q1235 809 1174 838T1033 881T882 898T699 902H574H543H251L259 891Q722 258 724 252Q725 250 724 246Q721 243 460 -56L196 -356Q196 -357 407 -357Q459 -357 548 -357T676 -358Q812 -358 896 -353T1063 -332T1204 -283T1307 -196Q1328 -170 1348 -124H1388Q1388 -125 1381 -145T1356 -210T1325 -294L1267 -449L666 -450Q64 -450 61 -448Q55 -446 55 -439Q55 -437 57 -433L590 177Q590 178 557 222T452 366T322 544L56 909L55 924Q55 945 60 948Z"></path></g><g data-mml-node="TeXAtom" transform="translate(0,-1147.3) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D446" d="M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z"></path></g><g data-mml-node="mo" transform="translate(645,0)"><path data-c="2286" d="M84 346Q84 468 166 546T360 635Q361 635 370 635T395 635T430 636T475 636T524 636H679Q694 628 694 616Q694 607 681 597L522 596H470H441Q366 596 338 592T266 568Q244 557 224 542T179 500T139 433T124 346V341Q124 253 185 185Q244 121 328 103Q348 98 366 98T522 96H681Q694 86 694 76Q694 64 679 56H526Q510 56 480 56T434 55Q350 55 289 71T172 141Q84 223 84 346ZM104 -131T104 -118T118 -98H679Q694 -106 694 -118T679 -138H118Q104 -131 104 -118Z"></path></g><g data-mml-node="mi" transform="translate(1423,0)"><path data-c="1D441" d="M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z"></path></g><g data-mml-node="mo" transform="translate(2311,0)"><path data-c="2216" d="M56 731Q56 740 62 745T75 750Q85 750 92 740Q96 733 270 255T444 -231Q444 -239 438 -244T424 -250Q414 -250 407 -240Q404 -236 230 242T56 731Z"></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(2811,0)"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g></g></g></g><g data-mml-node="mfrac" transform="translate(5917.8,0)"><g data-mml-node="mrow" transform="translate(220,710)"><g data-mml-node="mo" transform="translate(0 -0.5)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"></path></g><g data-mml-node="mi" transform="translate(278,0)"><path data-c="1D446" d="M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z"></path></g><g data-mml-node="mo" transform="translate(923,0) translate(0 -0.5)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"></path></g><g data-mml-node="mo" transform="translate(1201,0)"><path data-c="21" d="M78 661Q78 682 96 699T138 716T180 700T199 661Q199 654 179 432T158 206Q156 198 139 198Q121 198 119 206Q118 209 98 431T78 661ZM79 61Q79 89 97 105T141 121Q164 119 181 104T198 61Q198 31 181 16T139 1Q114 1 97 16T79 61Z"></path></g><g data-mml-node="mo" transform="translate(1479,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mo" transform="translate(1868,0) translate(0 -0.5)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"></path></g><g data-mml-node="mi" transform="translate(2146,0)"><path data-c="1D441" d="M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z"></path></g><g data-mml-node="mo" transform="translate(3034,0) translate(0 -0.5)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"></path></g><g data-mml-node="mo" transform="translate(3534.2,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mo" transform="translate(4534.4,0) translate(0 -0.5)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"></path></g><g data-mml-node="mi" transform="translate(4812.4,0)"><path data-c="1D446" d="M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z"></path></g><g data-mml-node="mo" transform="translate(5457.4,0) translate(0 -0.5)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"></path></g><g data-mml-node="mo" transform="translate(5957.7,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(6957.9,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(7457.9,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(7846.9,0)"><path data-c="21" d="M78 661Q78 682 96 699T138 716T180 700T199 661Q199 654 179 432T158 206Q156 198 139 198Q121 198 119 206Q118 209 98 431T78 661ZM79 61Q79 89 97 105T141 121Q164 119 181 104T198 61Q198 31 181 16T139 1Q114 1 97 16T79 61Z"></path></g></g><g data-mml-node="mrow" transform="translate(3421.4,-709.5)"><g data-mml-node="mo" transform="translate(0 -0.5)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"></path></g><g data-mml-node="mi" transform="translate(278,0)"><path data-c="1D441" d="M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z"></path></g><g data-mml-node="mo" transform="translate(1166,0) translate(0 -0.5)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"></path></g><g data-mml-node="mo" transform="translate(1444,0)"><path data-c="21" d="M78 661Q78 682 96 699T138 716T180 700T199 661Q199 654 179 432T158 206Q156 198 139 198Q121 198 119 206Q118 209 98 431T78 661ZM79 61Q79 89 97 105T141 121Q164 119 181 104T198 61Q198 31 181 16T139 1Q114 1 97 16T79 61Z"></path></g></g><rect width="8324.9" height="60" x="120" y="220"></rect></g><g data-mml-node="mrow" transform="translate(14482.7,0)"><g data-mml-node="mo"><path data-c="5B" d="M118 -250V750H255V710H158V-210H255V-250H118Z"></path></g><g data-mml-node="mi" transform="translate(278,0)"><path data-c="1D463" d="M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z"></path></g><g data-mml-node="mo" transform="translate(763,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1152,0)"><path data-c="1D446" d="M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z"></path></g><g data-mml-node="mo" transform="translate(2019.2,0)"><path data-c="222A" d="M591 598H592Q604 598 611 583V376Q611 345 611 296Q610 162 606 148Q605 146 605 145Q586 68 507 23T333 -22Q268 -22 209 -1T106 66T56 173Q55 180 55 384L56 585Q66 598 75 598Q85 598 95 585V378L96 172L98 162Q112 95 181 57T332 18Q415 18 487 58T570 175Q571 180 571 383V583Q579 598 591 598Z"></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(2908.4,0)"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g></g><g data-mml-node="mo" transform="translate(3253.4,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(3864.7,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mi" transform="translate(4864.9,0)"><path data-c="1D463" d="M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z"></path></g><g data-mml-node="mo" transform="translate(5349.9,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(5738.9,0)"><path data-c="1D446" d="M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z"></path></g><g data-mml-node="mo" transform="translate(6383.9,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(6772.9,0)"><path data-c="5D" d="M22 710V750H159V-250H22V-210H119V710H22Z"></path></g></g></g></g></svg></mjx-container></p>
<h2 id="算法复杂度的计算"><a href="#算法复杂度的计算" class="headerlink" title="算法复杂度的计算"></a>算法复杂度的计算</h2><p>了解shapley值的计算复杂度，判断对于计算机来说是否是可行的。</p>
<ul>
<li>时间复杂度：衡量算法执行所需时间的增长率，随着输入数据量的增加，算法执行时间的增长情况。</li>
<li>空间复杂度：衡量算法执行过程中所需存储空间的增长率，同样随着输入数据量的增加，所需的存储空间增长的情况。</li>
</ul>
<p>对shapley value的计算复杂度进行分析，可以从以下几个方面进行分析：</p>
<p>计算复杂度分析</p>
<ul>
<li><p>子集数量：最关键的因素是需要考虑所有不包括特定玩家 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="0.781ex" height="1.52ex" role="img" focusable="false" viewBox="0 -661 345 672"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g></g></g></svg></mjx-container> 的子集 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.05ex;" xmlns="http://www.w3.org/2000/svg" width="1.459ex" height="1.645ex" role="img" focusable="false" viewBox="0 -705 645 727"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D446" d="M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z"></path></g></g></g></svg></mjx-container>。对于一个包含 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="1.357ex" height="1.025ex" role="img" focusable="false" viewBox="0 -442 600 453"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g></g></svg></mjx-container> 个玩家的集合 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: 0;" xmlns="http://www.w3.org/2000/svg" width="2.009ex" height="1.545ex" role="img" focusable="false" viewBox="0 -683 888 683"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D441" d="M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z"></path></g></g></g></svg></mjx-container>，去除一个特定玩家后，剩余 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.186ex;" xmlns="http://www.w3.org/2000/svg" width="5.254ex" height="1.692ex" role="img" focusable="false" viewBox="0 -666 2322.4 748"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(822.2,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(1822.4,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g></svg></mjx-container> 个玩家。这 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.186ex;" xmlns="http://www.w3.org/2000/svg" width="5.254ex" height="1.692ex" role="img" focusable="false" viewBox="0 -666 2322.4 748"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(822.2,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(1822.4,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g></svg></mjx-container> 个玩家可以形成的子集总数为 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: 0;" xmlns="http://www.w3.org/2000/svg" width="4.323ex" height="1.887ex" role="img" focusable="false" viewBox="0 -833.9 1910.9 833.9"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="TeXAtom" transform="translate(533,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(600,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(1378,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g></g></g></svg></mjx-container>。这是因为每个玩家可以选择加入或不加入子集，因此每个玩家对子集的形成有2种可能的状态（在或不在），对所有玩家来说总共有 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: 0;" xmlns="http://www.w3.org/2000/svg" width="4.323ex" height="1.887ex" role="img" focusable="false" viewBox="0 -833.9 1910.9 833.9"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="TeXAtom" transform="translate(533,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(600,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(1378,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g></g></g></svg></mjx-container> 种组合。</p>
</li>
<li><p>每个子集的计算：对于每个子集 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.05ex;" xmlns="http://www.w3.org/2000/svg" width="1.459ex" height="1.645ex" role="img" focusable="false" viewBox="0 -705 645 727"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D446" d="M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z"></path></g></g></g></svg></mjx-container>，需要计算两个值：<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="7.612ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 3364.4 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D463" d="M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z"></path></g><g data-mml-node="mo" transform="translate(485,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(874,0)"><path data-c="1D446" d="M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z"></path></g><g data-mml-node="mo" transform="translate(1741.2,0)"><path data-c="222A" d="M591 598H592Q604 598 611 583V376Q611 345 611 296Q610 162 606 148Q605 146 605 145Q586 68 507 23T333 -22Q268 -22 209 -1T106 66T56 173Q55 180 55 384L56 585Q66 598 75 598Q85 598 95 585V378L96 172L98 162Q112 95 181 57T332 18Q415 18 487 58T570 175Q571 180 571 383V583Q579 598 591 598Z"></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(2630.4,0)"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g></g><g data-mml-node="mo" transform="translate(2975.4,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container> 和 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="4.317ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 1908 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D463" d="M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z"></path></g><g data-mml-node="mo" transform="translate(485,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(874,0)"><path data-c="1D446" d="M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z"></path></g><g data-mml-node="mo" transform="translate(1519,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container>，然后计算它们的差值。这个差值之后会乘以一个系数 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -1.236ex;" xmlns="http://www.w3.org/2000/svg" width="12.572ex" height="3.605ex" role="img" focusable="false" viewBox="0 -1047.1 5556.6 1593.5"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mfrac"><g data-mml-node="mrow" transform="translate(220,516.8) scale(0.707)"><g data-mml-node="mo" transform="translate(0 -0.5)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"></path></g><g data-mml-node="mi" transform="translate(278,0)"><path data-c="1D446" d="M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z"></path></g><g data-mml-node="mo" transform="translate(923,0) translate(0 -0.5)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"></path></g><g data-mml-node="mo" transform="translate(1201,0)"><path data-c="21" d="M78 661Q78 682 96 699T138 716T180 700T199 661Q199 654 179 432T158 206Q156 198 139 198Q121 198 119 206Q118 209 98 431T78 661ZM79 61Q79 89 97 105T141 121Q164 119 181 104T198 61Q198 31 181 16T139 1Q114 1 97 16T79 61Z"></path></g><g data-mml-node="mo" transform="translate(1479,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mo" transform="translate(1868,0) translate(0 -0.5)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"></path></g><g data-mml-node="mi" transform="translate(2146,0)"><path data-c="1D441" d="M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z"></path></g><g data-mml-node="mo" transform="translate(3034,0) translate(0 -0.5)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"></path></g><g data-mml-node="mo" transform="translate(3312,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mo" transform="translate(4090,0) translate(0 -0.5)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"></path></g><g data-mml-node="mi" transform="translate(4368,0)"><path data-c="1D446" d="M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z"></path></g><g data-mml-node="mo" transform="translate(5013,0) translate(0 -0.5)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"></path></g><g data-mml-node="mo" transform="translate(5291,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(6069,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(6569,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(6958,0)"><path data-c="21" d="M78 661Q78 682 96 699T138 716T180 700T199 661Q199 654 179 432T158 206Q156 198 139 198Q121 198 119 206Q118 209 98 431T78 661ZM79 61Q79 89 97 105T141 121Q164 119 181 104T198 61Q198 31 181 16T139 1Q114 1 97 16T79 61Z"></path></g></g><g data-mml-node="mrow" transform="translate(2169.5,-370) scale(0.707)"><g data-mml-node="mo" transform="translate(0 -0.5)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"></path></g><g data-mml-node="mi" transform="translate(278,0)"><path data-c="1D441" d="M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z"></path></g><g data-mml-node="mo" transform="translate(1166,0) translate(0 -0.5)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"></path></g><g data-mml-node="mo" transform="translate(1444,0)"><path data-c="21" d="M78 661Q78 682 96 699T138 716T180 700T199 661Q199 654 179 432T158 206Q156 198 139 198Q121 198 119 206Q118 209 98 431T78 661ZM79 61Q79 89 97 105T141 121Q164 119 181 104T198 61Q198 31 181 16T139 1Q114 1 97 16T79 61Z"></path></g></g><rect width="5316.6" height="60" x="120" y="220"></rect></g></g></g></svg></mjx-container>。计算这个系数涉及到阶乘运算，但与子集的数量相比，阶乘运算的复杂度不是主导因素。</p>
</li>
</ul>
<p>因此，Shapley值计算的总体复杂度主要受到子集枚举的影响，即 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="9.662ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 4270.7 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D442" d="M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z"></path></g><g data-mml-node="mo" transform="translate(763,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msup" transform="translate(1152,0)"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mi" transform="translate(533,363) scale(0.707)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g><g data-mml-node="mo" transform="translate(2381.5,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(3381.7,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(3881.7,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container>。这意味着随着n增大，Shapley值的计算复杂度是指数级的，对于大规模的数据集，计算Shapley值是非常耗时的。</p>
<p>因此我们需要一些优化的方法来降低计算复杂度，使其计算结果近似于真实的Shapley值。</p>
<h2 id="近似计算方法"><a href="#近似计算方法" class="headerlink" title="近似计算方法"></a>近似计算方法</h2><p>抽样方法<br>由于直接计算Shapley值涉及到的所有可能子集的数量是指数级的，一种解决方案是通过抽样子集而不是枚举所有可能的子集来估计Shapley值。这种方法随机选择子集并计算这些子集的贡献，然后基于这些抽样结果估计Shapley值。</p>
<p>优点：大大减少了计算量。<br>缺点：结果是近似的，准确度取决于抽样的数量和方法。<br>2. 分组抽样<br>这种方法涉及将特征或玩家分组，并将每个组作为单个实体来处理。通过评估组的贡献而不是个别特征或玩家的贡献，可以减少必要的计算量。</p>
<p>优点：减少了考虑的特征或玩家的数量。<br>缺点：可能会丢失组内元素的细节信息。<br>3. TMC (Truncated Monte Carlo) Shapley估计<br>这种方法结合了蒙特卡洛方法和截断策略，通过在蒙特卡洛抽样过程中引入截断来限制每个玩家或特征的贡献计算次数，以此来减少总的计算次数。</p>
<p>优点：提供了一种平衡计算复杂度和估计准确性的方法。<br>缺点：选择合适的截断阈值可能需要一定的经验和实验。<br>4. 使用机器学习模型<br>另一种方法是使用机器学习模型直接学习特征贡献的映射关系。例如，可以训练一个模型来预测给定数据点的Shapley值，而不是通过传统的计算方法来直接计算。</p>
<p>优点：可以显著减少计算时间，特别是在可以重复使用模型的场景中。<br>缺点：需要足够的数据来训练模型，且模型的准确性直接影响Shapley值估计的准确性。</p>
<p>在SHAP中的近似计算方法</p>
<ul>
<li>Kernel SHAP<ul>
<li>通过对特征空间进行采样，然后计算每个采样点的Shapley值，最后对所有采样点的Shapley值进行平均来估计真实的Shapley值。</li>
</ul>
</li>
<li>Tree SHAP<ul>
<li>通过树搜索的方式来近似计算Shapley值，通过构建一个树结构来表示特征的组合，然后通过树搜索来计算Shapley值。</li>
</ul>
</li>
<li>Deep SHAP<ul>
<li>通过深度学习模型来学习特征的贡献，通过训练一个深度神经网络来预测Shapley值，从而减少计算复杂度。</li>
</ul>
</li>
<li>Gradient SHAP<ul>
<li>通过梯度的方式来近似计算Shapley值，通过计算梯度来估计特征的贡献，从而减少计算复杂度。</li>
</ul>
</li>
</ul>
<p>针对不同的模型采用了不同的近似方法。</p>
<h2 id="开题报告"><a href="#开题报告" class="headerlink" title="开题报告"></a>开题报告</h2><h3 id="选题目的与意义"><a href="#选题目的与意义" class="headerlink" title="选题目的与意义"></a>选题目的与意义</h3><p>近年来，估值问题再机器学习中变得越来越重要，其中一种典型的估值问题是数据估值，用于数据估值涉及到评估数据集中每个样本的价值或贡献。找到贡献最大的样本和噪声最大的样本。</p>
<p>沙普利值是博弈论中的一个概念，用来公平地分配合作博弈中玩家的收益。在机器学习中引入合作博弈中的沙普利值作为度量标准，用来量化每个训练数据对预测器性能的价值。</p>
<p>但在实际的应用过程中，对于数据量较大的模型，沙普利值的计算考虑需要所有可能的数据子集，并评估每个子集对模型性能的贡献。这意味着数据量大的模型计算量呈指数级增长，变得及其庞大，对于复杂的模型，单词模型训练就可能需要很长时间，整个过程因此变得不切实际。</p>
<p>因此很难估算单个数据的沙普利值，该研究需要提出一种优化的算法策略，高效的近似估算单个数据的沙普利值。</p>
<h3 id="研究现状与文献综述"><a href="#研究现状与文献综述" class="headerlink" title="研究现状与文献综述"></a>研究现状与文献综述</h3><p>在过去的几年中，沙普利值的计算方法和应用已经成为了研究的热点。研究者们提出了多种策略来降低其计算复杂度，如蒙特卡洛近似和基于梯度的方法。这些方法在一定程度上缓解了计算复杂度的问题，但仍然存在一些局限性，特别是在处理大规模数据时。</p>
<p>当前的研究主要集中在如何提高计算效率，以及如何更准确地近似估算沙普利值。但是，现有方法在处理大数据模型时仍然面临着巨大的挑战，需要进一步的研究和优化。</p>
<h3 id="研究的主要内容、预期目标与创新点"><a href="#研究的主要内容、预期目标与创新点" class="headerlink" title="研究的主要内容、预期目标与创新点"></a>研究的主要内容、预期目标与创新点</h3><p>研究的主要内容为刨析沙普利值的传统计算方法，找到或者提出一种高效的近似估算单个数据的沙普利值的方法。预期目标是能够在有限的计算资源下，快速完成沙普利值的估计。创新点是提高了沙普利值的计算效率，使得沙普利值的计算更加实用。</p>
<h3 id="研究思路、研究方法与研究计划"><a href="#研究思路、研究方法与研究计划" class="headerlink" title="研究思路、研究方法与研究计划"></a>研究思路、研究方法与研究计划</h3><p>尝试使用特定的机器学习模型，对数据进行采用和降维来减少计算量。并且采用并行化和分布式计算来加速计算。利用现有的数据集进行实验，验证算法的有效性。</p>
<p>同时尝试其他算法，如粒子滤波，树搜索等，来优化沙普利值的计算。</p>
<p>研究计划：</p>
<ol>
<li>研究合作博弈中标准的沙普利值计算方法，分析其在算法上的复杂度是如何产生的；</li>
<li>研究现有的沙普利值计算方法，包括蒙特卡洛法和基于梯度的方法，分析其优缺点；</li>
<li>尝试引入机器学习模型，对数据进行采用和降维或者其他更优的算法策略，来减少计算量，提高效率；</li>
<li>搭建神经网络测试平台，利用现有的数据集进行实验，验证算法的有效性；</li>
</ol>
<h3 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h3><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ul>
<li><a class="link" href="https://m.thepaper.cn/baijiahao_18000292">腾讯AI Lab联合ETH提出合作博弈新范式，为可解释性等机器学习估值问题提供新方法 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link" href="https://www.bilibili.com/video/BV1Kt411h7Ep?p=21&vd_source=77634fbace993f80c84cb94e22e46e73">【公开课】耶鲁大学：博弈论（中英双语字幕） <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link" href="https://zhuanlan.zhihu.com/p/343529491">综述：基于能量的模型 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link" href="https://github.com/AstraZeneca/awesome-shapley-value?tab=readme-ov-file">Awesome Shapley Value <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
</ul>
]]></content>
      <categories>
        <category>Other Projects</category>
      </categories>
  </entry>
  <entry>
    <title>机器学习基础知识</title>
    <url>/2023/05/09/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</url>
    <content><![CDATA[<h2 id="神经网络的结构"><a href="#神经网络的结构" class="headerlink" title="神经网络的结构"></a>神经网络的结构</h2><hr>
<h3 id="Multilayer-Perceptron-多层感知器-MLP"><a href="#Multilayer-Perceptron-多层感知器-MLP" class="headerlink" title="Multilayer Perceptron 多层感知器 MLP"></a>Multilayer Perceptron 多层感知器 MLP</h3><p>对于一个深度学习网络的神经元吗，我们可以将其理解为一个装有数字的容器。</p>

  <div class="note p-4 mb-4 rounded-small info">
    <p>💡在神经网络</p>

  </div>

<p>神经元中装着的数叫做<strong>激活值 activation</strong>，它是一个标量。</p>
<img lazyload="" src="/images/loading.svg" data-src="/2023/05/09/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/fig_11.png" class="" width="500">

<p>在早期这种人工神经元叫做<strong>感知器 perceptron</strong>，后来随着神经网络的发展，逐渐变为<strong>sigmoid neurons</strong></p>
<p>关于perceptron的概念可以看<a class="link" href="http://neuralnetworksanddeeplearning.com/chap1.html">Perceptrons <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>中的第二段。</p>
<p>下一层与上一层的连接的每条线叫做<strong>权重 weight</strong>，每一层的神经元与上一层的所有神经元连接，它的权重构成一个列向量。</p>
<img lazyload="" src="/images/loading.svg" data-src="/2023/05/09/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/fig_12.png" class="" width="500">

<p>这一层的某个神经元，它的激活值本质上是上一层所有神经元的激活值的线性组合。</p>
<p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -2.819ex;" xmlns="http://www.w3.org/2000/svg" width="36.602ex" height="6.354ex" role="img" focusable="false" viewBox="0 -1562.5 16178.2 2808.5"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z"></path></g><g data-mml-node="mn" transform="translate(749,-150) scale(0.707)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="msub" transform="translate(1152.6,0)"><g data-mml-node="mi"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mn" transform="translate(562,-150) scale(0.707)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="mo" transform="translate(2340.3,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="msub" transform="translate(3340.6,0)"><g data-mml-node="mi"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z"></path></g><g data-mml-node="mn" transform="translate(749,-150) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="msub" transform="translate(4493.1,0)"><g data-mml-node="mi"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mn" transform="translate(562,-150) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="mo" transform="translate(5680.9,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mo" transform="translate(6681.1,0)"><path data-c="22EF" d="M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250ZM525 250Q525 274 542 292T585 310Q609 310 627 294T646 251Q646 226 629 208T586 190T543 207T525 250ZM972 250Q972 274 989 292T1032 310Q1056 310 1074 294T1093 251Q1093 226 1076 208T1033 190T990 207T972 250Z"></path></g><g data-mml-node="mo" transform="translate(8075.3,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="msub" transform="translate(9075.5,0)"><g data-mml-node="mi"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z"></path></g><g data-mml-node="mi" transform="translate(749,-150) scale(0.707)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g><g data-mml-node="msub" transform="translate(10298.8,0)"><g data-mml-node="mi"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mi" transform="translate(562,-150) scale(0.707)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g><g data-mml-node="mo" transform="translate(11612.9,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="munderover" transform="translate(12668.6,0)"><g data-mml-node="mo"><path data-c="2211" d="M60 948Q63 950 665 950H1267L1325 815Q1384 677 1388 669H1348L1341 683Q1320 724 1285 761Q1235 809 1174 838T1033 881T882 898T699 902H574H543H251L259 891Q722 258 724 252Q725 250 724 246Q721 243 460 -56L196 -356Q196 -357 407 -357Q459 -357 548 -357T676 -358Q812 -358 896 -353T1063 -332T1204 -283T1307 -196Q1328 -170 1348 -124H1388Q1388 -125 1381 -145T1356 -210T1325 -294L1267 -449L666 -450Q64 -450 61 -448Q55 -446 55 -439Q55 -437 57 -433L590 177Q590 178 557 222T452 366T322 544L56 909L55 924Q55 945 60 948Z"></path></g><g data-mml-node="TeXAtom" transform="translate(148.2,-1087.9) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(345,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(1123,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="mi" transform="translate(509.9,1150) scale(0.707)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g><g data-mml-node="msub" transform="translate(14279.3,0)"><g data-mml-node="mi"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z"></path></g><g data-mml-node="mi" transform="translate(749,-150) scale(0.707)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g></g><g data-mml-node="msub" transform="translate(15322.2,0)"><g data-mml-node="mi"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mi" transform="translate(562,-150) scale(0.707)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g></g></g></g></svg></mjx-container></p>
<p>但是这个线性组合的结果可以为任意实数，因此通常需要一个函数将其映射到实数域的<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="4.526ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 2000.7 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="5B" d="M118 -250V750H255V710H158V-210H255V-250H118Z"></path></g><g data-mml-node="mn" transform="translate(278,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g><g data-mml-node="mo" transform="translate(778,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mn" transform="translate(1222.7,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(1722.7,0)"><path data-c="5D" d="M22 710V750H159V-250H22V-210H119V710H22Z"></path></g></g></g></svg></mjx-container>的区间。</p>
<p>最开始常用的是<strong>Sigmoid Function</strong>，这个函数可以把正数趋近1，负数趋近0，它的图像如下：</p>
<p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -1.738ex;" xmlns="http://www.w3.org/2000/svg" width="15.657ex" height="4.774ex" role="img" focusable="false" viewBox="0 -1342 6920.6 2110"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D70E" d="M184 -11Q116 -11 74 34T31 147Q31 247 104 333T274 430Q275 431 414 431H552Q553 430 555 429T559 427T562 425T565 422T567 420T569 416T570 412T571 407T572 401Q572 357 507 357Q500 357 490 357T476 358H416L421 348Q439 310 439 263Q439 153 359 71T184 -11ZM361 278Q361 358 276 358Q152 358 115 184Q114 180 114 178Q106 141 106 117Q106 67 131 47T188 26Q242 26 287 73Q316 103 334 153T356 233T361 278Z"></path></g><g data-mml-node="mo" transform="translate(571,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(960,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(1532,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(2198.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mfrac" transform="translate(3254.6,0)"><g data-mml-node="mn" transform="translate(1583,676)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mrow" transform="translate(220,-686)"><g data-mml-node="mn"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(722.2,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="msup" transform="translate(1722.4,0)"><g data-mml-node="mi"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="TeXAtom" transform="translate(499,289) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mi" transform="translate(778,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g></g></g></g><rect width="3426" height="60" x="120" y="220"></rect></g></g></g></svg></mjx-container></p>
<img lazyload="" src="/images/loading.svg" data-src="/2023/05/09/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/fig_13.png" class="" width="500">

<p>一层所有的神经元只有一部分需要激活，即大于 0，其他都为负数并且接近 0，如果需要的加权值并不在<strong>sigmoid</strong>函数的定义域附近，为了使得加权和能够在实数轴上对应我们需要的位置，我们可以把这个加权值拖拽到所需要的位置。</p>
<p>所以我们需要对加权和做一个偏置，这个偏置叫做<strong>偏置项 bias</strong>。<br>例如我需要加权和大于 10 的激发才有意义，那么最终的结果就是：</p>
<p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="41.283ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 18247.1 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D70E" d="M184 -11Q116 -11 74 34T31 147Q31 247 104 333T274 430Q275 431 414 431H552Q553 430 555 429T559 427T562 425T565 422T567 420T569 416T570 412T571 407T572 401Q572 357 507 357Q500 357 490 357T476 358H416L421 348Q439 310 439 263Q439 153 359 71T184 -11ZM361 278Q361 358 276 358Q152 358 115 184Q114 180 114 178Q106 141 106 117Q106 67 131 47T188 26Q242 26 287 73Q316 103 334 153T356 233T361 278Z"></path></g><g data-mml-node="mo" transform="translate(571,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(960,0)"><g data-mml-node="mi"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z"></path></g><g data-mml-node="mn" transform="translate(749,-150) scale(0.707)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="msub" transform="translate(2112.6,0)"><g data-mml-node="mi"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mn" transform="translate(562,-150) scale(0.707)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="mo" transform="translate(3300.3,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="msub" transform="translate(4300.6,0)"><g data-mml-node="mi"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z"></path></g><g data-mml-node="mn" transform="translate(749,-150) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="msub" transform="translate(5453.1,0)"><g data-mml-node="mi"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mn" transform="translate(562,-150) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="mo" transform="translate(6640.9,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="msub" transform="translate(7641.1,0)"><g data-mml-node="mi"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z"></path></g><g data-mml-node="mn" transform="translate(749,-150) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="msub" transform="translate(8793.7,0)"><g data-mml-node="mi"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mn" transform="translate(562,-150) scale(0.707)"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path></g></g><g data-mml-node="mo" transform="translate(9981.4,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mo" transform="translate(10981.7,0)"><path data-c="22EF" d="M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250ZM525 250Q525 274 542 292T585 310Q609 310 627 294T646 251Q646 226 629 208T586 190T543 207T525 250ZM972 250Q972 274 989 292T1032 310Q1056 310 1074 294T1093 251Q1093 226 1076 208T1033 190T990 207T972 250Z"></path></g><g data-mml-node="mo" transform="translate(12375.9,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="msub" transform="translate(13376.1,0)"><g data-mml-node="mi"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z"></path></g><g data-mml-node="mi" transform="translate(749,-150) scale(0.707)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g><g data-mml-node="msub" transform="translate(14599.4,0)"><g data-mml-node="mi"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mi" transform="translate(562,-150) scale(0.707)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g><g data-mml-node="mo" transform="translate(15857.8,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(16858.1,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z" transform="translate(500,0)"></path></g><g data-mml-node="mo" transform="translate(17858.1,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container></p>
<p>在sigmoid函数的作用下，一个神经元的输出为0~1之间的任何一个数，同时从函数图像我们可以看出它的变化是平滑的，因此对于weights和biaes的微小的改变从而得到的输出结果的改变也是平滑的（可导的），而不是像阶梯函数那样产生突变。</p>

  <div class="note p-4 mb-4 rounded-small info">
    <p>💡在perceptron中，改变weights和bias的结果很有可能导致输出发生突变。所以为什么选择sigmoid函数作为激活函数并不重要，重要的是sigmoid函数的平滑性。</p>

  </div>

<p>利用多重积分的数学公式，我们可以推导得：</p>
<p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -3.006ex;" xmlns="http://www.w3.org/2000/svg" width="43.066ex" height="6.153ex" role="img" focusable="false" viewBox="0 -1391 19035 2719.6"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="394" d="M51 0Q46 4 46 7Q46 9 215 357T388 709Q391 716 416 716Q439 716 444 709Q447 705 616 357T786 7Q786 4 781 0H51ZM507 344L384 596L137 92L383 91H630Q630 93 507 344Z"></path></g><g data-mml-node="mtext" transform="translate(833,0)"><path data-c="6F" d="M28 214Q28 309 93 378T250 448Q340 448 405 380T471 215Q471 120 407 55T250 -10Q153 -10 91 57T28 214ZM250 30Q372 30 372 193V225V250Q372 272 371 288T364 326T348 362T317 390T268 410Q263 411 252 411Q222 411 195 399Q152 377 139 338T126 246V226Q126 130 145 91Q177 30 250 30Z"></path><path data-c="75" d="M383 58Q327 -10 256 -10H249Q124 -10 105 89Q104 96 103 226Q102 335 102 348T96 369Q86 385 36 385H25V408Q25 431 27 431L38 432Q48 433 67 434T105 436Q122 437 142 438T172 441T184 442H187V261Q188 77 190 64Q193 49 204 40Q224 26 264 26Q290 26 311 35T343 58T363 90T375 120T379 144Q379 145 379 161T380 201T380 248V315Q380 361 370 372T320 385H302V431Q304 431 378 436T457 442H464V264Q464 84 465 81Q468 61 479 55T524 46H542V0Q540 0 467 -5T390 -11H383V58Z" transform="translate(500,0)"></path><path data-c="74" d="M27 422Q80 426 109 478T141 600V615H181V431H316V385H181V241Q182 116 182 100T189 68Q203 29 238 29Q282 29 292 100Q293 108 293 146V181H333V146V134Q333 57 291 17Q264 -10 221 -10Q187 -10 162 2T124 33T105 68T98 100Q97 107 97 248V385H18V422H27Z" transform="translate(1056,0)"></path><path data-c="70" d="M36 -148H50Q89 -148 97 -134V-126Q97 -119 97 -107T97 -77T98 -38T98 6T98 55T98 106Q98 140 98 177T98 243T98 296T97 335T97 351Q94 370 83 376T38 385H20V408Q20 431 22 431L32 432Q42 433 61 434T98 436Q115 437 135 438T165 441T176 442H179V416L180 390L188 397Q247 441 326 441Q407 441 464 377T522 216Q522 115 457 52T310 -11Q242 -11 190 33L182 40V-45V-101Q182 -128 184 -134T195 -145Q216 -148 244 -148H260V-194H252L228 -193Q205 -192 178 -192T140 -191Q37 -191 28 -194H20V-148H36ZM424 218Q424 292 390 347T305 402Q234 402 182 337V98Q222 26 294 26Q345 26 384 80T424 218Z" transform="translate(1445,0)"></path><path data-c="75" d="M383 58Q327 -10 256 -10H249Q124 -10 105 89Q104 96 103 226Q102 335 102 348T96 369Q86 385 36 385H25V408Q25 431 27 431L38 432Q48 433 67 434T105 436Q122 437 142 438T172 441T184 442H187V261Q188 77 190 64Q193 49 204 40Q224 26 264 26Q290 26 311 35T343 58T363 90T375 120T379 144Q379 145 379 161T380 201T380 248V315Q380 361 370 372T320 385H302V431Q304 431 378 436T457 442H464V264Q464 84 465 81Q468 61 479 55T524 46H542V0Q540 0 467 -5T390 -11H383V58Z" transform="translate(2001,0)"></path><path data-c="74" d="M27 422Q80 426 109 478T141 600V615H181V431H316V385H181V241Q182 116 182 100T189 68Q203 29 238 29Q282 29 292 100Q293 108 293 146V181H333V146V134Q333 57 291 17Q264 -10 221 -10Q187 -10 162 2T124 33T105 68T98 100Q97 107 97 248V385H18V422H27Z" transform="translate(2557,0)"></path></g><g data-mml-node="mo" transform="translate(4056.8,0)"><path data-c="2248" d="M55 319Q55 360 72 393T114 444T163 472T205 482Q207 482 213 482T223 483Q262 483 296 468T393 413L443 381Q502 346 553 346Q609 346 649 375T694 454Q694 465 698 474T708 483Q722 483 722 452Q722 386 675 338T555 289Q514 289 468 310T388 357T308 404T224 426Q164 426 125 393T83 318Q81 289 69 289Q55 289 55 319ZM55 85Q55 126 72 159T114 210T163 238T205 248Q207 248 213 248T223 249Q262 249 296 234T393 179L443 147Q502 112 553 112Q609 112 649 141T694 220Q694 249 708 249T722 217Q722 153 675 104T555 55Q514 55 468 76T388 123T308 170T224 192Q164 192 125 159T83 84Q80 55 69 55Q55 55 55 85Z"></path></g><g data-mml-node="munder" transform="translate(5112.6,0)"><g data-mml-node="mo"><path data-c="2211" d="M60 948Q63 950 665 950H1267L1325 815Q1384 677 1388 669H1348L1341 683Q1320 724 1285 761Q1235 809 1174 838T1033 881T882 898T699 902H574H543H251L259 891Q722 258 724 252Q725 250 724 246Q721 243 460 -56L196 -356Q196 -357 407 -357Q459 -357 548 -357T676 -358Q812 -358 896 -353T1063 -332T1204 -283T1307 -196Q1328 -170 1348 -124H1388Q1388 -125 1381 -145T1356 -210T1325 -294L1267 -449L666 -450Q64 -450 61 -448Q55 -446 55 -439Q55 -437 57 -433L590 177Q590 178 557 222T452 366T322 544L56 909L55 924Q55 945 60 948Z"></path></g><g data-mml-node="mi" transform="translate(576.3,-1084.4) scale(0.707)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g></g><g data-mml-node="mfrac" transform="translate(6723.2,0)"><g data-mml-node="mrow" transform="translate(220,676)"><g data-mml-node="mi"><path data-c="1D715" d="M202 508Q179 508 169 520T158 547Q158 557 164 577T185 624T230 675T301 710L333 715H345Q378 715 384 714Q447 703 489 661T549 568T566 457Q566 362 519 240T402 53Q321 -22 223 -22Q123 -22 73 56Q42 102 42 148V159Q42 276 129 370T322 465Q383 465 414 434T455 367L458 378Q478 461 478 515Q478 603 437 639T344 676Q266 676 223 612Q264 606 264 572Q264 547 246 528T202 508ZM430 306Q430 372 401 400T333 428Q270 428 222 382Q197 354 183 323T150 221Q132 149 132 116Q132 21 232 21Q244 21 250 22Q327 35 374 112Q389 137 409 196T430 306Z"></path></g><g data-mml-node="mtext" transform="translate(566,0)"><path data-c="6F" d="M28 214Q28 309 93 378T250 448Q340 448 405 380T471 215Q471 120 407 55T250 -10Q153 -10 91 57T28 214ZM250 30Q372 30 372 193V225V250Q372 272 371 288T364 326T348 362T317 390T268 410Q263 411 252 411Q222 411 195 399Q152 377 139 338T126 246V226Q126 130 145 91Q177 30 250 30Z"></path><path data-c="75" d="M383 58Q327 -10 256 -10H249Q124 -10 105 89Q104 96 103 226Q102 335 102 348T96 369Q86 385 36 385H25V408Q25 431 27 431L38 432Q48 433 67 434T105 436Q122 437 142 438T172 441T184 442H187V261Q188 77 190 64Q193 49 204 40Q224 26 264 26Q290 26 311 35T343 58T363 90T375 120T379 144Q379 145 379 161T380 201T380 248V315Q380 361 370 372T320 385H302V431Q304 431 378 436T457 442H464V264Q464 84 465 81Q468 61 479 55T524 46H542V0Q540 0 467 -5T390 -11H383V58Z" transform="translate(500,0)"></path><path data-c="74" d="M27 422Q80 426 109 478T141 600V615H181V431H316V385H181V241Q182 116 182 100T189 68Q203 29 238 29Q282 29 292 100Q293 108 293 146V181H333V146V134Q333 57 291 17Q264 -10 221 -10Q187 -10 162 2T124 33T105 68T98 100Q97 107 97 248V385H18V422H27Z" transform="translate(1056,0)"></path><path data-c="70" d="M36 -148H50Q89 -148 97 -134V-126Q97 -119 97 -107T97 -77T98 -38T98 6T98 55T98 106Q98 140 98 177T98 243T98 296T97 335T97 351Q94 370 83 376T38 385H20V408Q20 431 22 431L32 432Q42 433 61 434T98 436Q115 437 135 438T165 441T176 442H179V416L180 390L188 397Q247 441 326 441Q407 441 464 377T522 216Q522 115 457 52T310 -11Q242 -11 190 33L182 40V-45V-101Q182 -128 184 -134T195 -145Q216 -148 244 -148H260V-194H252L228 -193Q205 -192 178 -192T140 -191Q37 -191 28 -194H20V-148H36ZM424 218Q424 292 390 347T305 402Q234 402 182 337V98Q222 26 294 26Q345 26 384 80T424 218Z" transform="translate(1445,0)"></path><path data-c="75" d="M383 58Q327 -10 256 -10H249Q124 -10 105 89Q104 96 103 226Q102 335 102 348T96 369Q86 385 36 385H25V408Q25 431 27 431L38 432Q48 433 67 434T105 436Q122 437 142 438T172 441T184 442H187V261Q188 77 190 64Q193 49 204 40Q224 26 264 26Q290 26 311 35T343 58T363 90T375 120T379 144Q379 145 379 161T380 201T380 248V315Q380 361 370 372T320 385H302V431Q304 431 378 436T457 442H464V264Q464 84 465 81Q468 61 479 55T524 46H542V0Q540 0 467 -5T390 -11H383V58Z" transform="translate(2001,0)"></path><path data-c="74" d="M27 422Q80 426 109 478T141 600V615H181V431H316V385H181V241Q182 116 182 100T189 68Q203 29 238 29Q282 29 292 100Q293 108 293 146V181H333V146V134Q333 57 291 17Q264 -10 221 -10Q187 -10 162 2T124 33T105 68T98 100Q97 107 97 248V385H18V422H27Z" transform="translate(2557,0)"></path></g></g><g data-mml-node="mrow" transform="translate(1147.8,-686)"><g data-mml-node="mi"><path data-c="1D715" d="M202 508Q179 508 169 520T158 547Q158 557 164 577T185 624T230 675T301 710L333 715H345Q378 715 384 714Q447 703 489 661T549 568T566 457Q566 362 519 240T402 53Q321 -22 223 -22Q123 -22 73 56Q42 102 42 148V159Q42 276 129 370T322 465Q383 465 414 434T455 367L458 378Q478 461 478 515Q478 603 437 639T344 676Q266 676 223 612Q264 606 264 572Q264 547 246 528T202 508ZM430 306Q430 372 401 400T333 428Q270 428 222 382Q197 354 183 323T150 221Q132 149 132 116Q132 21 232 21Q244 21 250 22Q327 35 374 112Q389 137 409 196T430 306Z"></path></g><g data-mml-node="msub" transform="translate(566,0)"><g data-mml-node="mi"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z"></path></g><g data-mml-node="mi" transform="translate(749,-150) scale(0.707)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g></g></g><rect width="3712" height="60" x="120" y="220"></rect></g><g data-mml-node="mi" transform="translate(10675.2,0)"><path data-c="394" d="M51 0Q46 4 46 7Q46 9 215 357T388 709Q391 716 416 716Q439 716 444 709Q447 705 616 357T786 7Q786 4 781 0H51ZM507 344L384 596L137 92L383 91H630Q630 93 507 344Z"></path></g><g data-mml-node="msub" transform="translate(11508.2,0)"><g data-mml-node="mi"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z"></path></g><g data-mml-node="mi" transform="translate(749,-150) scale(0.707)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g></g><g data-mml-node="mo" transform="translate(12820.8,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mfrac" transform="translate(13821,0)"><g data-mml-node="mrow" transform="translate(220,676)"><g data-mml-node="mi"><path data-c="1D715" d="M202 508Q179 508 169 520T158 547Q158 557 164 577T185 624T230 675T301 710L333 715H345Q378 715 384 714Q447 703 489 661T549 568T566 457Q566 362 519 240T402 53Q321 -22 223 -22Q123 -22 73 56Q42 102 42 148V159Q42 276 129 370T322 465Q383 465 414 434T455 367L458 378Q478 461 478 515Q478 603 437 639T344 676Q266 676 223 612Q264 606 264 572Q264 547 246 528T202 508ZM430 306Q430 372 401 400T333 428Q270 428 222 382Q197 354 183 323T150 221Q132 149 132 116Q132 21 232 21Q244 21 250 22Q327 35 374 112Q389 137 409 196T430 306Z"></path></g><g data-mml-node="mtext" transform="translate(566,0)"><path data-c="6F" d="M28 214Q28 309 93 378T250 448Q340 448 405 380T471 215Q471 120 407 55T250 -10Q153 -10 91 57T28 214ZM250 30Q372 30 372 193V225V250Q372 272 371 288T364 326T348 362T317 390T268 410Q263 411 252 411Q222 411 195 399Q152 377 139 338T126 246V226Q126 130 145 91Q177 30 250 30Z"></path><path data-c="75" d="M383 58Q327 -10 256 -10H249Q124 -10 105 89Q104 96 103 226Q102 335 102 348T96 369Q86 385 36 385H25V408Q25 431 27 431L38 432Q48 433 67 434T105 436Q122 437 142 438T172 441T184 442H187V261Q188 77 190 64Q193 49 204 40Q224 26 264 26Q290 26 311 35T343 58T363 90T375 120T379 144Q379 145 379 161T380 201T380 248V315Q380 361 370 372T320 385H302V431Q304 431 378 436T457 442H464V264Q464 84 465 81Q468 61 479 55T524 46H542V0Q540 0 467 -5T390 -11H383V58Z" transform="translate(500,0)"></path><path data-c="74" d="M27 422Q80 426 109 478T141 600V615H181V431H316V385H181V241Q182 116 182 100T189 68Q203 29 238 29Q282 29 292 100Q293 108 293 146V181H333V146V134Q333 57 291 17Q264 -10 221 -10Q187 -10 162 2T124 33T105 68T98 100Q97 107 97 248V385H18V422H27Z" transform="translate(1056,0)"></path><path data-c="70" d="M36 -148H50Q89 -148 97 -134V-126Q97 -119 97 -107T97 -77T98 -38T98 6T98 55T98 106Q98 140 98 177T98 243T98 296T97 335T97 351Q94 370 83 376T38 385H20V408Q20 431 22 431L32 432Q42 433 61 434T98 436Q115 437 135 438T165 441T176 442H179V416L180 390L188 397Q247 441 326 441Q407 441 464 377T522 216Q522 115 457 52T310 -11Q242 -11 190 33L182 40V-45V-101Q182 -128 184 -134T195 -145Q216 -148 244 -148H260V-194H252L228 -193Q205 -192 178 -192T140 -191Q37 -191 28 -194H20V-148H36ZM424 218Q424 292 390 347T305 402Q234 402 182 337V98Q222 26 294 26Q345 26 384 80T424 218Z" transform="translate(1445,0)"></path><path data-c="75" d="M383 58Q327 -10 256 -10H249Q124 -10 105 89Q104 96 103 226Q102 335 102 348T96 369Q86 385 36 385H25V408Q25 431 27 431L38 432Q48 433 67 434T105 436Q122 437 142 438T172 441T184 442H187V261Q188 77 190 64Q193 49 204 40Q224 26 264 26Q290 26 311 35T343 58T363 90T375 120T379 144Q379 145 379 161T380 201T380 248V315Q380 361 370 372T320 385H302V431Q304 431 378 436T457 442H464V264Q464 84 465 81Q468 61 479 55T524 46H542V0Q540 0 467 -5T390 -11H383V58Z" transform="translate(2001,0)"></path><path data-c="74" d="M27 422Q80 426 109 478T141 600V615H181V431H316V385H181V241Q182 116 182 100T189 68Q203 29 238 29Q282 29 292 100Q293 108 293 146V181H333V146V134Q333 57 291 17Q264 -10 221 -10Q187 -10 162 2T124 33T105 68T98 100Q97 107 97 248V385H18V422H27Z" transform="translate(2557,0)"></path></g></g><g data-mml-node="mrow" transform="translate(1478.5,-686)"><g data-mml-node="mi"><path data-c="1D715" d="M202 508Q179 508 169 520T158 547Q158 557 164 577T185 624T230 675T301 710L333 715H345Q378 715 384 714Q447 703 489 661T549 568T566 457Q566 362 519 240T402 53Q321 -22 223 -22Q123 -22 73 56Q42 102 42 148V159Q42 276 129 370T322 465Q383 465 414 434T455 367L458 378Q478 461 478 515Q478 603 437 639T344 676Q266 676 223 612Q264 606 264 572Q264 547 246 528T202 508ZM430 306Q430 372 401 400T333 428Q270 428 222 382Q197 354 183 323T150 221Q132 149 132 116Q132 21 232 21Q244 21 250 22Q327 35 374 112Q389 137 409 196T430 306Z"></path></g><g data-mml-node="mi" transform="translate(566,0)"><path data-c="1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"></path></g></g><rect width="3712" height="60" x="120" y="220"></rect></g><g data-mml-node="mi" transform="translate(17773,0)"><path data-c="394" d="M51 0Q46 4 46 7Q46 9 215 357T388 709Q391 716 416 716Q439 716 444 709Q447 705 616 357T786 7Q786 4 781 0H51ZM507 344L384 596L137 92L383 91H630Q630 93 507 344Z"></path></g><g data-mml-node="mi" transform="translate(18606,0)"><path data-c="1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"></path></g></g></g></svg></mjx-container></p>
<p>假设第0层有n个神经元，第1层有k个神经元，那么第1层的激活值就是：</p>
<div style="display: flex; align-items: center;">
    <div style="flex: 50%; padding: 5px;">
        <img lazyload="" src="/images/loading.svg" data-src="/2023/05/09/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/fig_14.png" class="" width="200">
    </div>
    <div style="flex: 50%; padding: 5px;">
        <mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -7.118ex;" xmlns="http://www.w3.org/2000/svg" width="39.123ex" height="15.367ex" role="img" focusable="false" viewBox="0 -3646.2 17292.5 6792.3"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mrow"><g data-mml-node="mo"><path data-c="23A1" d="M319 -645V1154H666V1070H403V-645H319Z" transform="translate(0,2136.8)"></path><path data-c="23A3" d="M319 -644V1155H403V-560H666V-644H319Z" transform="translate(0,-2146.8)"></path><svg width="667" height="2683.5" y="-1091.8" x="0" viewBox="0 670.9 667 2683.5"><path data-c="23A2" d="M319 0V602H403V0H319Z" transform="scale(1,6.687)"></path></svg></g><g data-mml-node="mtable" transform="translate(667,0)"><g data-mml-node="mtr" transform="translate(0,2540.8)"><g data-mml-node="mtd" transform="translate(7.4,0)"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z"></path></g><g data-mml-node="TeXAtom" transform="translate(749,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g><g data-mml-node="mo" transform="translate(500,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mn" transform="translate(778,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g></g></g></g><g data-mml-node="mtd" transform="translate(2725,0)"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z"></path></g><g data-mml-node="TeXAtom" transform="translate(749,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g><g data-mml-node="mo" transform="translate(500,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mn" transform="translate(778,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g></g><g data-mml-node="mtd" transform="translate(5490.1,0)"><g data-mml-node="mo"><path data-c="22EF" d="M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250ZM525 250Q525 274 542 292T585 310Q609 310 627 294T646 251Q646 226 629 208T586 190T543 207T525 250ZM972 250Q972 274 989 292T1032 310Q1056 310 1074 294T1093 251Q1093 226 1076 208T1033 190T990 207T972 250Z"></path></g></g><g data-mml-node="mtd" transform="translate(7724.5,0)"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z"></path></g><g data-mml-node="TeXAtom" transform="translate(749,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g><g data-mml-node="mo" transform="translate(500,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(778,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g></g></g></g><g data-mml-node="mtr" transform="translate(0,1103.6)"><g data-mml-node="mtd" transform="translate(7.4,0)"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z"></path></g><g data-mml-node="TeXAtom" transform="translate(749,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(500,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mn" transform="translate(778,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g></g></g></g><g data-mml-node="mtd" transform="translate(2725,0)"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z"></path></g><g data-mml-node="TeXAtom" transform="translate(749,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(500,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mn" transform="translate(778,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g></g><g data-mml-node="mtd" transform="translate(5490.1,0)"><g data-mml-node="mo"><path data-c="22EF" d="M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250ZM525 250Q525 274 542 292T585 310Q609 310 627 294T646 251Q646 226 629 208T586 190T543 207T525 250ZM972 250Q972 274 989 292T1032 310Q1056 310 1074 294T1093 251Q1093 226 1076 208T1033 190T990 207T972 250Z"></path></g></g><g data-mml-node="mtd" transform="translate(7724.5,0)"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z"></path></g><g data-mml-node="TeXAtom" transform="translate(749,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(500,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(778,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g></g></g></g><g data-mml-node="mtr" transform="translate(0,-1103.6)"><g data-mml-node="mtd" transform="translate(719.8,0)"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="22EE" d="M78 30Q78 54 95 72T138 90Q162 90 180 74T199 31Q199 6 182 -12T139 -30T96 -13T78 30ZM78 440Q78 464 95 482T138 500Q162 500 180 484T199 441Q199 416 182 398T139 380T96 397T78 440ZM78 840Q78 864 95 882T138 900Q162 900 180 884T199 841Q199 816 182 798T139 780T96 797T78 840Z"></path></g></g></g><g data-mml-node="mtd" transform="translate(3437.3,0)"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="22EE" d="M78 30Q78 54 95 72T138 90Q162 90 180 74T199 31Q199 6 182 -12T139 -30T96 -13T78 30ZM78 440Q78 464 95 482T138 500Q162 500 180 484T199 441Q199 416 182 398T139 380T96 397T78 440ZM78 840Q78 864 95 882T138 900Q162 900 180 884T199 841Q199 816 182 798T139 780T96 797T78 840Z"></path></g></g></g><g data-mml-node="mtd" transform="translate(5435.1,0)"><g data-mml-node="mo"><path data-c="22F1" d="M133 760Q133 784 150 802T193 820Q217 820 235 804T254 761Q254 736 237 718T194 700T151 717T133 760ZM580 460Q580 484 597 502T640 520Q664 520 682 504T701 461Q701 436 684 418T641 400T598 417T580 460ZM1027 160Q1027 184 1044 202T1087 220Q1111 220 1129 204T1148 161Q1148 136 1131 118T1088 100T1045 117T1027 160Z"></path></g></g><g data-mml-node="mtd" transform="translate(8472.2,0)"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="22EE" d="M78 30Q78 54 95 72T138 90Q162 90 180 74T199 31Q199 6 182 -12T139 -30T96 -13T78 30ZM78 440Q78 464 95 482T138 500Q162 500 180 484T199 441Q199 416 182 398T139 380T96 397T78 440ZM78 840Q78 864 95 882T138 900Q162 900 180 884T199 841Q199 816 182 798T139 780T96 797T78 840Z"></path></g></g></g></g><g data-mml-node="mtr" transform="translate(0,-2503.6)"><g data-mml-node="mtd"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z"></path></g><g data-mml-node="TeXAtom" transform="translate(749,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mo" transform="translate(521,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mn" transform="translate(799,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g></g></g></g><g data-mml-node="mtd" transform="translate(2717.5,0)"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z"></path></g><g data-mml-node="TeXAtom" transform="translate(749,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mo" transform="translate(521,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mn" transform="translate(799,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g></g><g data-mml-node="mtd" transform="translate(5490.1,0)"><g data-mml-node="mo"><path data-c="22EF" d="M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250ZM525 250Q525 274 542 292T585 310Q609 310 627 294T646 251Q646 226 629 208T586 190T543 207T525 250ZM972 250Q972 274 989 292T1032 310Q1056 310 1074 294T1093 251Q1093 226 1076 208T1033 190T990 207T972 250Z"></path></g></g><g data-mml-node="mtd" transform="translate(7717.1,0)"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z"></path></g><g data-mml-node="TeXAtom" transform="translate(749,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mo" transform="translate(521,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(799,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g></g></g></g></g><g data-mml-node="mo" transform="translate(10172.3,0)"><path data-c="23A4" d="M0 1070V1154H347V-645H263V1070H0Z" transform="translate(0,2136.8)"></path><path data-c="23A6" d="M263 -560V1155H347V-644H0V-560H263Z" transform="translate(0,-2146.8)"></path><svg width="667" height="2683.5" y="-1091.8" x="0" viewBox="0 670.9 667 2683.5"><path data-c="23A5" d="M263 0V602H347V0H263Z" transform="scale(1,6.687)"></path></svg></g></g><g data-mml-node="mrow" transform="translate(11006,0)"><g data-mml-node="mo"><path data-c="23A1" d="M319 -645V1154H666V1070H403V-645H319Z" transform="translate(0,2492.2)"></path><path data-c="23A3" d="M319 -644V1155H403V-560H666V-644H319Z" transform="translate(0,-2502.2)"></path><svg width="667" height="3394.3" y="-1447.2" x="0" viewBox="0 848.6 667 3394.3"><path data-c="23A2" d="M319 0V602H403V0H319Z" transform="scale(1,8.458)"></path></svg></g><g data-mml-node="mtable" transform="translate(667,0)"><g data-mml-node="mtr" transform="translate(0,2585.5)"><g data-mml-node="mtd"><g data-mml-node="msubsup"><g data-mml-node="mi"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="TeXAtom" transform="translate(562,530.4) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mn" transform="translate(389,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g><g data-mml-node="mo" transform="translate(889,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="mn" transform="translate(562,-297.3) scale(0.707)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g></g></g></g><g data-mml-node="mtr" transform="translate(0,811.9)"><g data-mml-node="mtd"><g data-mml-node="msubsup"><g data-mml-node="mi"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="TeXAtom" transform="translate(562,530.4) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mn" transform="translate(389,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g><g data-mml-node="mo" transform="translate(889,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="mn" transform="translate(562,-297.3) scale(0.707)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g></g><g data-mml-node="mtr" transform="translate(0,-1185.5)"><g data-mml-node="mtd" transform="translate(618.8,0)"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="22EE" d="M78 30Q78 54 95 72T138 90Q162 90 180 74T199 31Q199 6 182 -12T139 -30T96 -13T78 30ZM78 440Q78 464 95 482T138 500Q162 500 180 484T199 441Q199 416 182 398T139 380T96 397T78 440ZM78 840Q78 864 95 882T138 900Q162 900 180 884T199 841Q199 816 182 798T139 780T96 797T78 840Z"></path></g></g></g></g><g data-mml-node="mtr" transform="translate(0,-2896.2)"><g data-mml-node="mtd"><g data-mml-node="msubsup"><g data-mml-node="mi"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="TeXAtom" transform="translate(562,530.4) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mn" transform="translate(389,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g><g data-mml-node="mo" transform="translate(889,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="mi" transform="translate(562,-138.9) scale(0.707)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g></g></g></g><g data-mml-node="mo" transform="translate(2182.7,0)"><path data-c="23A4" d="M0 1070V1154H347V-645H263V1070H0Z" transform="translate(0,2492.2)"></path><path data-c="23A6" d="M263 -560V1155H347V-644H0V-560H263Z" transform="translate(0,-2502.2)"></path><svg width="667" height="3394.3" y="-1447.2" x="0" viewBox="0 848.6 667 3394.3"><path data-c="23A5" d="M263 0V602H347V0H263Z" transform="scale(1,8.458)"></path></svg></g></g><g data-mml-node="mo" transform="translate(14077.9,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mrow" transform="translate(15078.1,0)"><g data-mml-node="mo"><path data-c="23A1" d="M319 -645V1154H666V1070H403V-645H319Z" transform="translate(0,1971)"></path><path data-c="23A3" d="M319 -644V1155H403V-560H666V-644H319Z" transform="translate(0,-1981)"></path><svg width="667" height="2352" y="-926" x="0" viewBox="0 588 667 2352"><path data-c="23A2" d="M319 0V602H403V0H319Z" transform="scale(1,5.86)"></path></svg></g><g data-mml-node="mtable" transform="translate(667,0)"><g data-mml-node="mtr" transform="translate(0,2375)"><g data-mml-node="mtd" transform="translate(7.4,0)"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"></path></g><g data-mml-node="mn" transform="translate(462,-150) scale(0.707)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g></g></g></g><g data-mml-node="mtr" transform="translate(0,975)"><g data-mml-node="mtd" transform="translate(7.4,0)"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"></path></g><g data-mml-node="mn" transform="translate(462,-150) scale(0.707)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g></g><g data-mml-node="mtr" transform="translate(0,-975)"><g data-mml-node="mtd" transform="translate(301.2,0)"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="22EE" d="M78 30Q78 54 95 72T138 90Q162 90 180 74T199 31Q199 6 182 -12T139 -30T96 -13T78 30ZM78 440Q78 464 95 482T138 500Q162 500 180 484T199 441Q199 416 182 398T139 380T96 397T78 440ZM78 840Q78 864 95 882T138 900Q162 900 180 884T199 841Q199 816 182 798T139 780T96 797T78 840Z"></path></g></g></g></g><g data-mml-node="mtr" transform="translate(0,-2375)"><g data-mml-node="mtd"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"></path></g><g data-mml-node="mi" transform="translate(462,-150) scale(0.707)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g></g></g><g data-mml-node="mo" transform="translate(1547.4,0)"><path data-c="23A4" d="M0 1070V1154H347V-645H263V1070H0Z" transform="translate(0,1971)"></path><path data-c="23A6" d="M263 -560V1155H347V-644H0V-560H263Z" transform="translate(0,-1981)"></path><svg width="667" height="2352" y="-926" x="0" viewBox="0 588 667 2352"><path data-c="23A5" d="M263 0V602H347V0H263Z" transform="scale(1,5.86)"></path></svg></g></g></g></g></svg></mjx-container>
    </div>
</div>


  <div class="note p-4 mb-4 rounded-small info">
    <p>💡矩阵第一行与第二层第一个的神经元的所有权重对应，也就是对应第一个圆的所有线。</p>

  </div>

<h2 id="神经网络的原理"><a href="#神经网络的原理" class="headerlink" title="神经网络的原理"></a>神经网络的原理</h2><p>通过梯度下降法来寻找函数的最低点，对应的是所有权重的最优值。</p>
<h3 id="随机梯度下降-Stochastic-Gradient-Descent"><a href="#随机梯度下降-Stochastic-Gradient-Descent" class="headerlink" title="随机梯度下降 Stochastic Gradient Descent"></a>随机梯度下降 Stochastic Gradient Descent</h3><p>看3b1b的视频来学习，做好笔记</p>
<h3 id="反向传播法"><a href="#反向传播法" class="headerlink" title="反向传播法"></a>反向传播法</h3><h2 id="手写数字识别"><a href="#手写数字识别" class="headerlink" title="手写数字识别"></a>手写数字识别</h2><p><a class="link" href="http://neuralnetworksanddeeplearning.com/chap1.html">A simple networks to classify handwritten digits <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p>手写数字是一个很好的原型对于学习神经网络，这个网络算法的核心，就是找到最合适的weights和biaes，使得网络能够成功识别数字。</p>
<p>对于一个手写数字的神经网络，第一层是这个图像的单个像素的排列，最后一层是对应0~9这9个数字的神经元。</p>
<h3 id="Cost-Function"><a href="#Cost-Function" class="headerlink" title="Cost Function"></a>Cost Function</h3><p>cost function相当于对网络中的所有的weights和biaes进行评分。</p>
<p>类似于概率论中的方差公式，cost function的公式如下：</p>
<p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -2.619ex;" xmlns="http://www.w3.org/2000/svg" width="27.97ex" height="5.656ex" role="img" focusable="false" viewBox="0 -1342 12362.6 2499.8"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D436" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z"></path></g><g data-mml-node="mo" transform="translate(760,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1149,0)"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z"></path></g><g data-mml-node="mo" transform="translate(1865,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(2309.7,0)"><path data-c="1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"></path></g><g data-mml-node="mo" transform="translate(2738.7,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(3405.4,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mfrac" transform="translate(4461.2,0)"><g data-mml-node="mn" transform="translate(520,676)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mrow" transform="translate(220,-686)"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mi" transform="translate(500,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g><rect width="1300" height="60" x="120" y="220"></rect></g><g data-mml-node="munder" transform="translate(6167.9,0)"><g data-mml-node="mo"><path data-c="2211" d="M60 948Q63 950 665 950H1267L1325 815Q1384 677 1388 669H1348L1341 683Q1320 724 1285 761Q1235 809 1174 838T1033 881T882 898T699 902H574H543H251L259 891Q722 258 724 252Q725 250 724 246Q721 243 460 -56L196 -356Q196 -357 407 -357Q459 -357 548 -357T676 -358Q812 -358 896 -353T1063 -332T1204 -283T1307 -196Q1328 -170 1348 -124H1388Q1388 -125 1381 -145T1356 -210T1325 -294L1267 -449L666 -450Q64 -450 61 -448Q55 -446 55 -439Q55 -437 57 -433L590 177Q590 178 557 222T452 366T322 544L56 909L55 924Q55 945 60 948Z"></path></g><g data-mml-node="mi" transform="translate(519.8,-1050) scale(0.707)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g></g><g data-mml-node="mo" transform="translate(7778.6,0) translate(0 -0.5)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"></path></g><g data-mml-node="mi" transform="translate(8056.6,0)"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(8546.6,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(8935.6,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(9507.6,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(10118.8,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mi" transform="translate(11119,0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="msup" transform="translate(11648,0)"><g data-mml-node="mo" transform="translate(0 -0.5)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"></path></g><g data-mml-node="mn" transform="translate(311,413) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g></g></svg></mjx-container></p>
<p>其中</p>
<ul>
<li><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="4.163ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 1840 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(490,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(879,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(1451,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container>是网络的输出</li>
<li><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.023ex;" xmlns="http://www.w3.org/2000/svg" width="1.197ex" height="1.02ex" role="img" focusable="false" viewBox="0 -441 529 451"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g></g></g></svg></mjx-container>是期望的输出</li>
<li><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="1.357ex" height="1.025ex" role="img" focusable="false" viewBox="0 -442 600 453"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g></g></svg></mjx-container>是训练样本的数量。</li>
</ul>
<h2 id="强化学习基础-Deep-Reinforcement-Learning"><a href="#强化学习基础-Deep-Reinforcement-Learning" class="headerlink" title="强化学习基础 Deep Reinforcement Learning"></a>强化学习基础 Deep Reinforcement Learning</h2><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><ul>
<li><a class="link" href="https://www.bilibili.com/video/BV1bx411M7Zx/?spm_id_from=333.999.0.0&vd_source=5c8e073b8f94f9e61f07ae791a132eaf">【官方双语】深度学习之神经网络的结构 Part 1 ver 2.0 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link" href="http://neuralnetworksanddeeplearning.com/">Neural Networks and Deep Learning <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
</ul>
]]></content>
      <categories>
        <category>Algorithm</category>
      </categories>
  </entry>
  <entry>
    <title>机械臂论文笔记</title>
    <url>/2024/09/09/%E6%9C%BA%E6%A2%B0%E8%87%82%E8%AE%BA%E6%96%87%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h2 id="Inverse-kinematics-solution-and-control-method-of-6-degree-of-freedom-manipulator-based-on-deep-reinforcement-learning"><a href="#Inverse-kinematics-solution-and-control-method-of-6-degree-of-freedom-manipulator-based-on-deep-reinforcement-learning" class="headerlink" title="Inverse kinematics solution and control method of 6-degree-of-freedom manipulator based on deep reinforcement learning"></a>Inverse kinematics solution and control method of 6-degree-of-freedom manipulator based on deep reinforcement learning</h2><p>2024.5</p>
<p>该文章主要解决的是机械臂逆运动学的算法，通过强化学习设置奖励机制，实时计算末端执行器与目标位姿之间的差异，考虑了高斯距离和余弦距离，称为 MAPPO-IK算法。通过实际的实验表明，MAPPO-IK算法相比传统的逆运动学算法，具有更好的泛化能力和计算效率，能够实时求解唯一解，并且在复杂环境中具有更改好的适应性，还具备路径规划和智能避障等优势。</p>


	<div class="row">
    <embed src="./6.pdf" width="100%" height="550" type="application/pdf">
	</div>





<h2 id="Hybrid-hierarchical-learning-for-solving-complex-sequential-tasks-using-the-robotic-manipulation-network-ROMAN"><a href="#Hybrid-hierarchical-learning-for-solving-complex-sequential-tasks-using-the-robotic-manipulation-network-ROMAN" class="headerlink" title="Hybrid hierarchical learning for solving complex sequential tasks using the robotic manipulation network ROMAN"></a>Hybrid hierarchical learning for solving complex sequential tasks using the robotic manipulation network ROMAN</h2><p>2023.11</p>
<p>该文章提出了一个混合分层学习框架，称为机器人操作网络 ROMAN, 以应对在机器人操作中解决长时间跨度内的多个复杂任务的挑战。通过整合行为克隆、模仿学习和强化学习。中央操作网络协调一组专门化的神经网络，每个神经网络专注于不同的子任务，从而生成正确的顺序动作，解决复杂的操作任务。</p>
<p>整个框架通过设计一个中央操作网络 (MN) 来协调多个专家网络，每个专家网络专注于特定的操作任务，专家网络包括多个专门化的神经网络，每个网络擅长特定的操作任务，如推按钮，拾取并插入，拾取并放置，旋转开关，拾取并丢弃，拉开等。使用行为克隆 (BC) 收集初始的状态-动作数据。实施生成对抗模仿学习 (GAIL) 来进一步优化策略，使其能够更好地模仿人类专家的行为。最后，通过强化学习进行策略更新，使用PPO算法结合内在和外在奖励来鼓励探索和改进行为。最终通过在虚拟环境中实验得到结果。</p>


	<div class="row">
    <embed src="./7.pdf" width="100%" height="550" type="application/pdf">
	</div>




<h2 id="Large-Language-Models-for-Robotics-Opportunities-Challenges-and-Perspectives"><a href="#Large-Language-Models-for-Robotics-Opportunities-Challenges-and-Perspectives" class="headerlink" title="Large Language Models for Robotics: Opportunities, Challenges, and Perspectives"></a>Large Language Models for Robotics: Opportunities, Challenges, and Perspectives</h2>

	<div class="row">
    <embed src="./1.pdf" width="100%" height="550" type="application/pdf">
	</div>




<p>LLMs 正在多个领域得到广泛应用，尤其是在机器人任务规划方面，它们通过其推理和语言理解能力，能够根据自然语言指令生成高效的行动计划。然而，当涉及到机器人需要与复杂环境进行交互的任务时，单纯基于文本的 LLMs 存在与视觉感知不兼容的挑战。</p>
<p>为了解决这个问题，本文提出了一个基于多模态 GPT-4V 的框架，将自然语言指令与机器人视觉感知结合，以提升机器人在任务规划中的表现。</p>
<p>同时这篇论文给出了LLM方向的综述:</p>
<h2 id="TidyBot-personalized-robot-assistance-with-large-language-models"><a href="#TidyBot-personalized-robot-assistance-with-large-language-models" class="headerlink" title="TidyBot: personalized robot assistance with large language models"></a>TidyBot: personalized robot assistance with large language models</h2>

	<div class="row">
    <embed src="./5.pdf" width="100%" height="550" type="application/pdf">
	</div>




<p>TidyBot主要结构是一个机械臂加上AGV小车，然后机械臂末端有两个摄像头。首先这个TidyBot要实现通过目标检测来识别有哪些物体，这里他用了ViLD网络。然后对于距离自己最近的检测物体，将这个物体所在的矩形框图片（图像）和之前LLM summarized的物体概括（文本），通过CLIP进行embedding之后，计算余弦相似度获取和这个物体最匹配的物体概括，从而确定这个物体属于哪一类。这里就体现了抽象的物体概括的好处，如果不概括，那么就需要人实现指定一个更大的物体列表，这样的话整体的泛化能力就下降了。有了这个物体的概括之后，然后再通过LLM，来确定这个物体应该放到哪（”recycling bin”, “plastic storage box”, “black storage box”, “sofa”, “drawer”）以及以怎样的方式放（place、toss）。</p>
<p><a class="link"   href="https://zhuanlan.zhihu.com/p/664959506" >Robotics+LLM系列TidyBot家务机器人 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<h2 id="⭐ReKep-Spatio-Temporal-Reasoning-of-Relational-Keypoint-Constraints-for-Robotic-Manipulation"><a href="#⭐ReKep-Spatio-Temporal-Reasoning-of-Relational-Keypoint-Constraints-for-Robotic-Manipulation" class="headerlink" title="⭐ReKep: Spatio-Temporal Reasoning of Relational Keypoint Constraints for Robotic Manipulation"></a>⭐ReKep: Spatio-Temporal Reasoning of Relational Keypoint Constraints for Robotic Manipulation</h2><p><a href="https://rekep-robot.github.io/">ReKep: Spatio-Temporal Reasoning of Relational<br>Keypoint Constraints for Robotic Manipulation</a></p>


	<div class="row">
    <embed src="./2.pdf" width="100%" height="550" type="application/pdf">
	</div>




<p>文提出了一种名为 Relational Keypoint Constraints (ReKep) 的方法，用于表示机器人操作中的约束条件。传统的操作任务往往需要明确的约束定义，而 ReKep 通过将 3D 关键点映射为数值成本的 Python 函数，能够灵活适应不同的任务，并实现实时优化。通过这种方法，机器人可以在多任务场景中执行复杂操作，而无需手动标注或特定的环境数据模型。此外，作者设计了一个自动化流程，利用大型视觉模型和视觉语言模型，从自由形式的语言指令和 RGB-D 数据中自动生成 ReKep。系统在单臂和双臂平台上的实验表明，该方法在多阶段、野外、多手臂协作和动态响应任务中的有效性。</p>
<p>ReKep 的核心是基于 3D 关键点的约束表示。关键点是物体或机器人的特定位置（例如，抓手的末端或物体的边缘），这些关键点之间的空间关系被定义为 Python 函数，表示约束条件。</p>
<ul>
<li>关键点：在环境中定义的一组语义相关的 3D 点，通常与任务目标相关，例如茶壶的把手、壶嘴、杯子的位置。</li>
<li>约束函数：这些函数基于关键点之间的几何关系（例如，距离、角度、相对位置）来计算数值成本。约束满足时，成本接近于零，否则约束不成立。</li>
</ul>
<p>这些关键点之间的关系可以通过简单的几何计算表达，例如欧几里得距离或点积。这些关系不仅可以在平面上定义，还可以定义在 3D 空间内，适应复杂的操作场景。</p>
<p>ReKep 将操作任务分解为多个阶段，每个阶段由两类约束定义：</p>
<ul>
<li>子目标约束（Sub-goal Constraints）：这些约束定义了每个阶段需要达到的目标位置。例如，在倒茶任务中，第一阶段的子目标约束是让抓手接近茶壶的把手。</li>
<li>路径约束（Path Constraints）：这些约束定义了在完成某个子目标时必须持续满足的条件。例如，在移动茶壶过程中，壶嘴必须保持与杯子对齐以避免洒水。</li>
</ul>
<p>通过这些约束，ReKep 可以确保机器人在执行复杂操作时不仅能达到每个阶段的目标，还能确保操作过程中的中间行为是安全和有效的。</p>
<h2 id="⭐In-Hand-Singulation-and-Scooping-Manipulation-with-a-5-DOF-Tactile-Gripper"><a href="#⭐In-Hand-Singulation-and-Scooping-Manipulation-with-a-5-DOF-Tactile-Gripper" class="headerlink" title="⭐In-Hand Singulation and Scooping Manipulation with a 5 DOF Tactile Gripper"></a>⭐In-Hand Singulation and Scooping Manipulation with a 5 DOF Tactile Gripper</h2>

	<div class="row">
    <embed src="./3.pdf" width="100%" height="550" type="application/pdf">
	</div>




<p><a class="link"   href="https://www.youtube.com/watch?v=6c1AyeaGjbk" >In-Hand Singulation and Scooping Manipulation with a 5 DOF Tactile Gripper <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p> 这篇文章讨论了在机器人操作任务中，灵巧性是一个关键要求，通常需要具有多个自由度（DoF）的抓手。然而，多自由度的抓手虽然能完成复杂任务，但也增加了操作的复杂性。本文介绍了一种带有触觉传感器的两指抓手设计，具有五个自由度，并结合 GelSight 触觉传感器，以提高操作控制精度。文中通过两个实验评估了该抓手的性能：1）从颗粒物中提取、分离和分类不同物体，2）在狭小环境中执行信用卡的铲取和精确插入操作。实验结果表明，该方法在分离和分类任务中，尤其是对球形物体，达到了 94.3% 的高成功率，而在信用卡铲取和插入任务中，成功率达到了 100%。</p>
<h2 id="⭐RGBManip-Monocular-Image-based-Robotic-Manipulation-through-Active-Object-Pose-Estimation"><a href="#⭐RGBManip-Monocular-Image-based-Robotic-Manipulation-through-Active-Object-Pose-Estimation" class="headerlink" title="⭐RGBManip: Monocular Image-based Robotic Manipulation through Active Object Pose Estimation"></a>⭐RGBManip: Monocular Image-based Robotic Manipulation through Active Object Pose Estimation</h2><p><a class="link"   href="https://rgbmanip.github.io/" >RGBManip: Monocular Image-based Robotic Manipulation through Active Object Pose Estimation <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>


	<div class="row">
    <embed src="./4.pdf" width="100%" height="550" type="application/pdf">
	</div>




<p>这篇文章主要探讨了在机器人操作中常用的两种视觉感知方式：RGB 图像和点云数据。虽然点云可以提供 3D 信息，但由于技术限制，点云数据常常面临稀疏采样和噪声的问题。相比之下，RGB 图像能提供丰富的纹理信息，但缺乏深度和 3D 空间信息，这对机器人操作非常关键。</p>
<p>为了克服这些问题，作者提出了一种仅基于图像的机器人操作框架。该框架利用安装在机器人抓取器上的单目相机，通过相机随抓取器移动从多个视角感知物体，从而估计物体的 6D 姿态（即位置和方向）。这种方法虽然通过多视角提高了姿态估计的准确性，但也增加了操作时间。为了解决这个权衡问题，作者采用了强化学习策略来平衡操作效率和姿态估计的准确性。实验结果表明，该方法在仿真和实际环境中均表现出色。</p>
<p>文中使用了一种常见的强化学习算法——Proximal Policy Optimization (PPO) 来训练全局调度策略。PPO 是一种高效且稳定的强化学习方法，通过不断优化策略来改进机器人在不同视角之间的切换决策，使其能够更好地权衡感知精度和操作效率。</p>
<p>该强化学习应用的算法, 全局调度策略（Global Scheduling Policy），该策略是一个高层次的决策机制。其主要功能是在机器人探索环境或开始操作之间做出决策。它根据已经累积的环境信息和主动感知模块的反馈，决定是否需要进一步探索新视角。若选择探索，策略会为机械臂指定 6D 外参参数，调整相机位置以获取图像；若决定停止探索，机器人将进入操作模式，继续执行任务。</p>
<h2 id="Plan-Seq-Learn-Language-Model-Guided-RL-for-Solving-Long-Horizon-Robotics-Tasks"><a href="#Plan-Seq-Learn-Language-Model-Guided-RL-for-Solving-Long-Horizon-Robotics-Tasks" class="headerlink" title="Plan-Seq-Learn: Language Model Guided RL for Solving Long Horizon Robotics Tasks"></a>Plan-Seq-Learn: Language Model Guided RL for Solving Long Horizon Robotics Tasks</h2><p>2024 ICLR</p>
<p><a class="link"   href="https://mihdalal.github.io/planseqlearn/" >Plan-Seq-Learn: Language Model Guided RL for Solving Long Horizon Robotics Tasks <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>


	<div class="row">
    <embed src="./8.pdf" width="100%" height="550" type="application/pdf">
	</div>




<p>现有的LLM方法能够给机器人提供high-level的planning. 但是这些方法依赖预定义的技能库(抓取, 放置, 拉动, 推动). LLM无法解决如何设计或学习这些技能, 尤其是在长时序任务中.</p>
<p>本文提出了一个Plan-Seq-Learn框架, 利用LLM的高层次策略引导强化学习(RL)来解决机器人的控制任务.</p>
<p>文中提出一个观点, LLM与RL优势互补, LLMs可以借助互联网规模的知识将长时序任务分解为可实现的子目标，但它们缺乏生成低层次控制策略的能力；而RL则擅长发现复杂的控制行为，但在长时序推理方面表现不足。</p>
<p>PSL框架的创新在于, 它不依赖任何预定义的技能库, 而是通过运动规划控制跟踪LLM的计划, 并通过RL学习低层次的控制技能.</p>
<ol>
<li>Plan（计划）阶段：由LLM生成高层次任务分解计划<br>在“NutAssembly”任务中，首先由LLM生成任务的高层次计划。这一步的目的是将任务分解为多个可执行的子步骤。对于这个任务，LLM可能生成如下计划：</li>
</ol>
<ul>
<li>抓取金色螺母</li>
<li>将金色螺母放置在金色螺栓上</li>
<li>抓取银色螺母</li>
<li>将银色螺母放置在银色螺栓上</li>
</ul>
<p>原文示例：</p>
<blockquote>
<p>Plan: [(“gold nut”,“grasp”), (“gold peg”, “place”), (“silver nut”, “grasp”), (“silver peg”, “place”)]​。</p>
</blockquote>
<p>这个计划展示了任务的四个关键步骤，分别是抓取和放置两个螺母。计划通过自然语言描述任务的各个阶段，供后续模块执行。</p>
<ol start="2">
<li>Seq（序列）阶段：运动规划追踪任务计划<br>在这一步中，PSL框架使用视觉引导的运动规划模块（Seq）将计划的每个阶段转化为机器人要达到的具体目标位置。具体来说：</li>
</ol>
<p>系统通过视觉系统识别场景中的目标对象，如“金色螺母”和“金色螺栓”。<br>通过视觉估计物体的三维坐标，计算机器人臂的目标姿态（q_target）。<br>运动规划算法（如AIT*）计算从机器人当前姿态到目标姿态的无碰撞路径，使机器人到达目标区域。<br>这一步主要是通过视觉引导和运动规划来执行无接触的运动，比如将机器人移动到金色螺母的上方，准备抓取。</p>
<p>原文说明：</p>
<blockquote>
<p>Vision and Estimation: Using a text label of the target region of interest from the high-level plan and observation Oglobal, we need to compute a target robot state qtarget for the motion planner to achieve​。</p>
</blockquote>
<p>通过运动规划模块，机器人能够在空间中移动到正确的目标区域，比如移动到金色螺母上方。</p>
<ol start="3">
<li>Learn（学习）阶段：强化学习策略进行低层次控制<br>当机器人到达目标区域（如金色螺母上方）后，系统开始执行与环境的接触互动，这时RL模块开始发挥作用。RL策略负责学习如何抓取螺母、如何精确地放置螺母在螺栓上等接触任务。</li>
</ol>
<p>强化学习（RL）模型通过观察局部的环境信息（如机器人手臂末端的摄像头视角）执行动作。<br>机器人通过与环境的反复交互，逐渐学习到如何精确操控物体，如抓取螺母、放置到螺栓上。<br>每次成功执行后，系统通过奖励函数反馈调整策略，逐渐提高成功率。<br>原文说明：</p>
<blockquote>
<p>Once the agent steps through the plan and achieves states near target regions of interest, it needs to train an RL policy πθ to learn low-level control for solving the task. We train πθ using DRQ-v2 Yarats et al. (2021), a SOTA visual model-free RL algorithm​。</p>
</blockquote>
<p>通过RL策略，PSL能够处理需要精细控制的接触任务，比如如何准确抓住螺母并将其对准螺栓。</p>
]]></content>
      <categories>
        <category>Scientific Research</category>
      </categories>
  </entry>
  <entry>
    <title>模拟信号处理的PCB设计</title>
    <url>/2024/05/23/%E6%A8%A1%E6%8B%9F%E4%BF%A1%E5%8F%B7%E5%A4%84%E7%90%86%E7%9A%84PCB%E8%AE%BE%E8%AE%A1/</url>
    <content><![CDATA[<h2 id="设计需求和原理"><a href="#设计需求和原理" class="headerlink" title="设计需求和原理"></a>设计需求和原理</h2><p>根据实验室电机控制需求，需要给电机三相交流电的电流传感器的输出信号进行处理，将电流传感器的-4V~+4V的输出信号转换为0~3.3V的电压信号，以便于后续单片机的AD采样。</p>
<p>采用运放模块进行运算，先用加法器将-4V~+4V的信号转换为0~8V的信号，再用比例放大器将0<del>8V的信号转换为0</del>3.3V的信号。</p>
<p>要处理信号的电流传感器为 LEM HAS 50-S</p>
<img lazyload="" src="/images/loading.svg" data-src="/2024/05/23/%E6%A8%A1%E6%8B%9F%E4%BF%A1%E5%8F%B7%E5%A4%84%E7%90%86%E7%9A%84PCB%E8%AE%BE%E8%AE%A1/fig_1.jpg" class="" width="500">

<h2 id="电路设计"><a href="#电路设计" class="headerlink" title="电路设计"></a>电路设计</h2><p>参考运放的负反馈电路，几乎所有运算电路都可以通过运放的两个特性计算出来：</p>
<ul>
<li>虚断：理想运放的输入阻抗无穷大，输入电流近似为零。</li>
<li>虚短：当给运放引入反馈时，运放的两个输入端的电压相等，相当于短路。</li>
</ul>
<img lazyload="" src="/images/loading.svg" data-src="/2024/05/23/%E6%A8%A1%E6%8B%9F%E4%BF%A1%E5%8F%B7%E5%A4%84%E7%90%86%E7%9A%84PCB%E8%AE%BE%E8%AE%A1/fig_3.png" class="" width="500">

<p>通过公式可以对加法器进行计算：将-4V~+4V的信号转换为0~8V的信号</p>
<img lazyload="" src="/images/loading.svg" data-src="/2024/05/23/%E6%A8%A1%E6%8B%9F%E4%BF%A1%E5%8F%B7%E5%A4%84%E7%90%86%E7%9A%84PCB%E8%AE%BE%E8%AE%A1/fig_4.png" class="" width="500">

<p>乘法器的计算公式如下：将0~8V的信号转换为0~3.3V的信号，增益系数为0.4125</p>
<img lazyload="" src="/images/loading.svg" data-src="/2024/05/23/%E6%A8%A1%E6%8B%9F%E4%BF%A1%E5%8F%B7%E5%A4%84%E7%90%86%E7%9A%84PCB%E8%AE%BE%E8%AE%A1/fig_5.png" class="" width="500">

<p>采用LM358运放，AD的原理图如下：（单个原理图）<br>运放的输入电压和供电均采用LDO线性稳压器，减少输入电压的纹波；</p>
<img lazyload="" src="/images/loading.svg" data-src="/2024/05/23/%E6%A8%A1%E6%8B%9F%E4%BF%A1%E5%8F%B7%E5%A4%84%E7%90%86%E7%9A%84PCB%E8%AE%BE%E8%AE%A1/fig_6.png" class="" width="500">

<p>线性稳压将15V的电压输入转换为12V的电压输出，作为运放输入和供电：</p>
<img lazyload="" src="/images/loading.svg" data-src="/2024/05/23/%E6%A8%A1%E6%8B%9F%E4%BF%A1%E5%8F%B7%E5%A4%84%E7%90%86%E7%9A%84PCB%E8%AE%BE%E8%AE%A1/fig_7.png" class="" width="300">

<h3 id="仿真测试"><a href="#仿真测试" class="headerlink" title="仿真测试"></a>仿真测试</h3><p>在1kHz的输入信号下，输出信号的波形如下：</p>
<img lazyload="" src="/images/loading.svg" data-src="/2024/05/23/%E6%A8%A1%E6%8B%9F%E4%BF%A1%E5%8F%B7%E5%A4%84%E7%90%86%E7%9A%84PCB%E8%AE%BE%E8%AE%A1/fig_10.png" class="" width="500">

<p>在LM358带宽内，输出信号正常不失真。</p>
<h2 id="PCB设计"><a href="#PCB设计" class="headerlink" title="PCB设计"></a>PCB设计</h2><p>除了需要处理的信号，还需要将电流传感器原本的信号通过SMA接口输出，方便输入到Dspace进行调试。</p>
<p>PCB的设计如下：</p>
<img lazyload="" src="/images/loading.svg" data-src="/2024/05/23/%E6%A8%A1%E6%8B%9F%E4%BF%A1%E5%8F%B7%E5%A4%84%E7%90%86%E7%9A%84PCB%E8%AE%BE%E8%AE%A1/fig_8.png" class="" width="600">

<p>实际焊接效果如图：</p>
<img lazyload="" src="/images/loading.svg" data-src="/2024/05/23/%E6%A8%A1%E6%8B%9F%E4%BF%A1%E5%8F%B7%E5%A4%84%E7%90%86%E7%9A%84PCB%E8%AE%BE%E8%AE%A1/fig_9.png" class="" width="600">

<h2 id="测试结果"><a href="#测试结果" class="headerlink" title="测试结果"></a>测试结果</h2><p>通过信号发生器输入1kHz的正弦波信号，用示波器测得输出信号如下：</p>
<img lazyload="" src="/images/loading.svg" data-src="/2024/05/23/%E6%A8%A1%E6%8B%9F%E4%BF%A1%E5%8F%B7%E5%A4%84%E7%90%86%E7%9A%84PCB%E8%AE%BE%E8%AE%A1/fig_11.png" class="" width="500">

<p>可以看到输出信号的幅值为0~3.3V，基本符合设计要求。</p>
<h2 id="问题总结"><a href="#问题总结" class="headerlink" title="问题总结"></a>问题总结</h2><ul>
<li><p>LM358的供电电压应该大于输出电压，否则输出电压会嵌在特定的电压值，无法正常输出。</p>
</li>
<li><p>电路设计一定要多仿真，不要没有仿真就画pcb，仿真能够提前发现和解决很多问题。</p>
</li>
</ul>
<p>最开始设计的时候采用5V供电电压，导致加法器后的输出无论输入多少，都是3.5V，后续去掉5V的降压芯片，直接使用12V供电电压，输出信号正常。</p>
<ul>
<li>4p的xh接口封装与板子画的封装不是对应的封装</li>
</ul>
<p>后续的PCB设计中，注意购买的封装和设计的封装是否对得上，可以通过软件中的3维模型来判断。</p>
<ul>
<li><p>3P的AD输出接口应该改为4P，除了三路模拟信号外，还需要一个接地信号。</p>
</li>
<li><p>多买一些3p和4p的xh线，方便测试。</p>
</li>
<li><p>四个角应该开一个M3的螺纹孔，并用尼龙柱来支撑，与放置平面绝缘。</p>
</li>
<li><p>PCB的布局应该更加合理，同一路模拟信号的器件都放在一起，电源和信号隔离开。</p>
</li>
<li><p>PCB需要处于强电的工作环境中，具有较强的电磁干扰，后续需要做好电磁屏蔽和隔离。</p>
</li>
<li><p>LM358的单位增益带宽仅为1.2MHz，对于电机三相交流电，需要100kHz的带宽，需要更好用的运放，来增加带宽冗余。</p>
</li>
</ul>
<p>运放的增益带宽积，即运放能处理的最高频率计算如下：</p>
<p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -0.452ex;" xmlns="http://www.w3.org/2000/svg" width="35.195ex" height="2.149ex" role="img" focusable="false" viewBox="0 -750 15556 950"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">增</text></g><g data-mml-node="mi" transform="translate(1000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">益</text></g><g data-mml-node="mi" transform="translate(2000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">带</text></g><g data-mml-node="mi" transform="translate(3000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">宽</text></g><g data-mml-node="mi" transform="translate(4000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">积</text></g><g data-mml-node="mo" transform="translate(5277.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mi" transform="translate(6333.6,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">单</text></g><g data-mml-node="mi" transform="translate(7333.6,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">位</text></g><g data-mml-node="mi" transform="translate(8333.6,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">增</text></g><g data-mml-node="mi" transform="translate(9333.6,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">益</text></g><g data-mml-node="mi" transform="translate(10333.6,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">带</text></g><g data-mml-node="mi" transform="translate(11333.6,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">宽</text></g><g data-mml-node="mo" transform="translate(12555.8,0)"><path data-c="D7" d="M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z"></path></g><g data-mml-node="mi" transform="translate(13556,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">增</text></g><g data-mml-node="mi" transform="translate(14556,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">益</text></g></g></g></svg></mjx-container></p>
<p>实际上LM358的增益非常小，在板子最大增益系数为1的时候，输入1MHz的模拟信号，输出信号出现了明显的失真。</p>
<img lazyload="" src="/images/loading.svg" data-src="/2024/05/23/%E6%A8%A1%E6%8B%9F%E4%BF%A1%E5%8F%B7%E5%A4%84%E7%90%86%E7%9A%84PCB%E8%AE%BE%E8%AE%A1/fig_12.png" class="" width="500">

]]></content>
      <categories>
        <category>Electronics and Embedded System</category>
      </categories>
  </entry>
  <entry>
    <title>电机原理</title>
    <url>/2023/09/08/%E7%94%B5%E6%9C%BA%E5%8E%9F%E7%90%86/</url>
    <content><![CDATA[<h2 id="有刷电机原理"><a href="#有刷电机原理" class="headerlink" title="有刷电机原理"></a>有刷电机原理</h2><p>电机最底层的物理原理来源于电流的磁效应；</p>
<img lazyload="" src="/images/loading.svg" data-src="/2023/09/08/%E7%94%B5%E6%9C%BA%E5%8E%9F%E7%90%86/fig_1.png" class="" width="400">

<p>利用电磁铁的原理，得到直流有刷电机的<strong>转子</strong>，可以绕轴心转动；</p>
<img lazyload="" src="/images/loading.svg" data-src="/2023/09/08/%E7%94%B5%E6%9C%BA%E5%8E%9F%E7%90%86/fig_2.png" class="" width="400">

<p>两块弧形永磁体放置在左右两边，称为<strong>定子</strong>；</p>
<p>由于异性相吸，同性相斥，使得电机快速转到异性相吸的位置。</p>
<p>利用电刷进行换相，切换电流方向；</p>
<img lazyload="" src="/images/loading.svg" data-src="/2023/09/08/%E7%94%B5%E6%9C%BA%E5%8E%9F%E7%90%86/fig_3.png" class="" width="400">

<p>但由于双极容易平衡，容易锁住无法启动，因此转子都是奇数线圈。</p>
<img lazyload="" src="/images/loading.svg" data-src="/2023/09/08/%E7%94%B5%E6%9C%BA%E5%8E%9F%E7%90%86/fig_4.png" class="" width="400">

<img lazyload="" src="/images/loading.svg" data-src="/2023/09/08/%E7%94%B5%E6%9C%BA%E5%8E%9F%E7%90%86/fig_6.png" class="" width="400">

<p>电刷限制了电机的转速，也容易造成磨损，电火花的问题；因此为了更加高速的旋转，则把电刷去掉，即无刷电机；</p>
<h2 id="无刷电机原理"><a href="#无刷电机原理" class="headerlink" title="无刷电机原理"></a>无刷电机原理</h2><img lazyload="" src="/images/loading.svg" data-src="/2023/09/08/%E7%94%B5%E6%9C%BA%E5%8E%9F%E7%90%86/fig_5.png" class="" width="400">

<p>有感无刷电机采用永磁体作为转子，电磁铁作为定子，还需要霍尔原件来感受转子的状态和位置；</p>
<img lazyload="" src="/images/loading.svg" data-src="/2023/09/08/%E7%94%B5%E6%9C%BA%E5%8E%9F%E7%90%86/fig_7.png" class="" width="400">

<p>一般的霍尔器件N级激发为高电平，S级激发低电平，如下图；</p>
<center><img lazyload="" src="/images/loading.svg" data-src="gif_1.gif" width="800"></center>

<ul>
<li>当N级同时激活两块霍尔元件时，控制电路中的两个mos管导通，两个线圈流入电流产生不同极性的磁场；</li>
<li>当N级只激活一块霍尔元件时，控制电路切换开关，另外两个线圈导通，继续推动转子转动，使其循环往复；<br>（感觉像是人坐在一头猪上，吊着胡萝卜吸引猪使得人可以一直前进）</li>
</ul>
<p>利用pwm波可以控制电机的转速，不同的占空比可以得到不同的电机速度，这是因为输入的电能越多，转化为的机械能就越多；PWM波的占空比越高，它的速度也越快；</p>
<p>在实际应用中，应用比较多的时三相无刷直流电机，这也是为什么一般的无刷电机有三条线的缘故；</p>
<img lazyload="" src="/images/loading.svg" data-src="/2023/09/08/%E7%94%B5%E6%9C%BA%E5%8E%9F%E7%90%86/fig_8.png" class="" width="400">

<p>除了三相无刷电机，还有单相无刷电机，通过霍尔传感器来判断转子之后，然后用4个mos管组成的H桥电路来改变电流方向；</p>
<img lazyload="" src="/images/loading.svg" data-src="/2023/09/08/%E7%94%B5%E6%9C%BA%E5%8E%9F%E7%90%86/fig_9.png" class="" width="400">

<p>在同等体积下，单相无刷电机拥有更低的成本，而三相电机则拥有更高的功率；</p>

  <div class="note p-4 mb-4 rounded-small primary">
    <p>💡由于霍尔传感器容易受环境影响，可以使用磁场改变之后在线圈中产生的的反电动势，再将该反生电动势的电流通过单片机检测电压的多少，但是该方法则需要复杂的FOC控制，才能实现对电机精确的控制。</p>

  </div>

<h2 id="BLDC与PMSM"><a href="#BLDC与PMSM" class="headerlink" title="BLDC与PMSM"></a>BLDC与PMSM</h2><p>无刷电机可以分为<strong>无刷直流电机 BLDC</strong>和<strong>永磁同步电机 PMSM</strong>；结构大同小异，主要区别在于线圈绕组不同导致的一些特性差异。</p>
<p>由于转子在磁场中只有一定数量的稳定状态，在上述动画中，显然我们能发现电机之后6个稳定状态，因此事实上电机的旋转不是均匀平滑的吗，存在扭矩转动。</p>

  <div class="note p-4 mb-4 rounded-small default">
    <p>没有通电的时候可以用手转一下无刷电机，会感受到这种“颗粒感”。</p>

  </div>

<ul>
<li>从硬件上解决这个问题，就是增加极对数，即磁铁对数，拆开航模的电机我们都能发现里面有很多组线圈和很多个磁铁，这样就是<strong>BLDC</strong>；</li>
<li>从软件上解决这个问题，通过产生正弦波来驱动电机，就是<strong>PMSM</strong>；</li>
</ul>
<h3 id="驱动电路"><a href="#驱动电路" class="headerlink" title="驱动电路"></a>驱动电路</h3><p>三相逆变电路主要用到场效应管，这里先复习一下场效应管的原理：</p>
<img lazyload="" src="/images/loading.svg" data-src="/2023/09/08/%E7%94%B5%E6%9C%BA%E5%8E%9F%E7%90%86/fig_10.png" class="" width="500">

<p>初始状态如下，金属薄板与半导体之间有一层二氧化硅，从左到右分别为源极，栅极，漏极；</p>
<ol>
<li>由于漏极是正电，源极和栅极都是负电，PN结不可反向通电，因此该管无电流流动，属于关闭状态；<img lazyload="" src="/images/loading.svg" data-src="/2023/09/08/%E7%94%B5%E6%9C%BA%E5%8E%9F%E7%90%86/fig_11.png" class="" width="500"></li>
<li>当栅极是正电时，栅极的金属通过中间的二氧化硅层形成电容激发电场，P型半导体靠近栅极处在电容作用下聚集大量电子；</li>
<li>在栅极处，P型半导体的电子多于N型半导体，电子开始反向扩散，此时原来的PN结变为<strong>反型层</strong>；</li>
<li>在源极处，由于连接负极，电子无法扩散，反而源源不断向其他两极输入电子；</li>
<li>漏极连接正电，因此电子不断从漏极处流出；</li>
<li>最终，在栅极的控制下，源极和漏极形成通电回路；</li>
<li>正电为1，负电为0，则可以通过输入0和1到栅极处控制电路通断；</li>
</ol>


<p>三相逆变电路具体实现是由半桥MOS电路来制作的，<strong>半桥电路</strong>由两个MOS管组成上桥臂和下桥臂，中间引出一条输出线；</p>
<p>3个半桥电路就可以组成一个三相逆变电路，每个半桥引出一根输出线与无刷电机相连，组成最基本的无刷驱动电路。</p>
<img lazyload="" src="/images/loading.svg" data-src="/2023/09/08/%E7%94%B5%E6%9C%BA%E5%8E%9F%E7%90%86/fig_13.png" class="" width="800">

<p>如图，通过霍尔传感器或者pwm信号连接到控制电路，再连接到相应MOS管的栅极，就能控制特定线圈的通电，从而控制电机转动；</p>
<p>实际上有些时候会控制三个MOS管，使得三个线圈都有电流流过，这样可以不浪费电机的扭矩；</p>
<h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ul>
<li><p><a class="link" href="https://www.bilibili.com/video/BV1ig411S7gX/?spm_id_from=333.337.search-card.all.click&vd_source=5c8e073b8f94f9e61f07ae791a132eaf">有刷电机与无刷电机的原理，为什么无刷电机转的更快？ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
</li>
<li><p><a class="link" href="https://www.bilibili.com/video/BV1dc41137Gx/?spm_id_from=333.788.recommend_more_video.0&vd_source=5c8e073b8f94f9e61f07ae791a132eaf">底层原理极其简单，却很难造出精品！无刷直流电机的工作原理 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
</li>
<li><p><a class="link" href="https://blog.csdn.net/helaisun/article/details/127156100">永磁同步电机（PMSM） <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
</li>
<li><p><a class="link" href="https://www.bilibili.com/video/BV11V411m7rh/?spm_id_from=333.788.recommend_more_video.6&vd_source=5c8e073b8f94f9e61f07ae791a132eaf">TI公开课 永磁同步电机（PMSM）磁场定向控制（FOC）中文字幕 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
</li>
<li><p><a class="link" href="https://zhuanlan.zhihu.com/p/147659820">【自制FOC驱动器】深入浅出讲解FOC算法与SVPWM技术 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
</li>
</ul>
]]></content>
      <categories>
        <category>Electronics and Embedded System</category>
      </categories>
  </entry>
  <entry>
    <title>TCP/IP基础知识以及ssh连接</title>
    <url>/2024/02/07/%E7%BD%91%E7%BB%9C%E9%80%9A%E4%BF%A1%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</url>
    <content><![CDATA[<blockquote>
<p>在研究ssh连接的时候，无法解决服务器接入公网的问题，因此学习网络通信的理论知识；</p>
</blockquote>
<h2 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h2><p>计算机网络可以根据规模分为</p>
<ul>
<li>WAN (Wide Area Network, 广域网)</li>
<li>MAN (Metropolitan Area Network, 城域网, 整个城市的网络)</li>
<li>LAN (Local Area Network, 局域网)</li>
</ul>
<p>局域网LAN可以在一个实验室, 一栋楼中, 若干个主机连接到路由器上, 形成一个有限, 狭小的区域内网络;</p>
<p>TCP&#x2F;IP通信协议为现代计算机网络的基本工作模式；它是一种网络体系架构, 就是IP, TCP, HTTP等协议的集合.</p>
<blockquote>
<p>TCP&#x2F;IP协议指利用IP进行通信时所必须用到的协议群的统称, IP或ICMP, TCP或UDP, TELNET或FTP以及HTTP都属于TCP&#x2F;IP的协议.</p>
</blockquote>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2024/02/07/%E7%BD%91%E7%BB%9C%E9%80%9A%E4%BF%A1%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/fig_1.png"
                      class="" width="500"
                >

<p>网卡 (NIC, Network Interface Card) </p>
<p>IP地址具有层次性，而MAC地址不具备；</p>
<h2 id="IP协议"><a href="#IP协议" class="headerlink" title="IP协议"></a>IP协议</h2><p>ubuntu设置环境变量指定代理服务器，</p>
<h2 id="路由器的工作原理"><a href="#路由器的工作原理" class="headerlink" title="路由器的工作原理"></a>路由器的工作原理</h2><p>静态路由方式:</p>
<ul>
<li>泛洪法</li>
<li>固定路由法</li>
</ul>
<h2 id="ssh"><a href="#ssh" class="headerlink" title="ssh"></a>ssh</h2><h2 id="NAT内网穿透"><a href="#NAT内网穿透" class="headerlink" title="NAT内网穿透"></a>NAT内网穿透</h2><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ul>
<li>《图解tcp&#x2F;ip》</li>
<li><a class="link"   href="https://www.bilibili.com/video/BV1Ea411V7gu/?spm_id_from=333.337.search-card.all.click&vd_source=5c8e073b8f94f9e61f07ae791a132eaf" >路由器是如何路由的？（上集） <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
</ul>
]]></content>
      <categories>
        <category>Basic Computer Programming</category>
      </categories>
  </entry>
  <entry>
    <title>通用麦轮底盘设计文档</title>
    <url>/2024/04/11/%E9%80%9A%E7%94%A8%E9%BA%A6%E8%BD%AE%E5%BA%95%E7%9B%98%E8%AE%BE%E8%AE%A1%E6%96%87%E6%A1%A3/</url>
    <content><![CDATA[<h2 id="硬件选型"><a href="#硬件选型" class="headerlink" title="硬件选型"></a>硬件选型</h2><p>电机选用众灵370总线直流有刷电机，包含编码器，参数如下：</p>
<ul>
<li>减速比：1：56</li>
<li>转速：178rpm</li>
<li>额定电压：7.4V(使用范围为6-8.4V)</li>
<li>额定电流：0.50A</li>
<li>扭矩：3.5N.m</li>
<li>编码器类型：霍尔AB相编码器</li>
<li>编码器线数：13线</li>
</ul>
<p><a class="link"   href="https://item.taobao.com/item.htm?id=588112233735&skuId=5116592929189&spm=a1z0d.6639537/tb.1997196601.4.8bb57484kA21wW" >购买链接 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<h2 id="机械设计"><a href="#机械设计" class="headerlink" title="机械设计"></a>机械设计</h2><p>麦轮选型:<br>采用80mm直径的麦克纳姆轮，在178rpm的转速下，直线速度可达0.75m&#x2F;s，足以满足机器人的运动需求。</p>



<p>机械臂的yaw轴可以使用法兰轴承</p>
<p>使用打印嵌入轴承的做法，做一个杠铃的打印件，打印到一半的时候放入轴承</p>
<h2 id="电源管理设计"><a href="#电源管理设计" class="headerlink" title="电源管理设计"></a>电源管理设计</h2><p>小车的底盘采用can总线控制，设计一个pcb，用来搭载can通讯的芯片，然后与stm32f103通讯，实现底盘的控制。同时PCB包含了电源管理模块，可以接受7.4V的电源输入，输出5V和3.3V的电源。</p>
<p><a class="link"   href="https://item.taobao.com/item.htm?_u=b3hgjd528872&id=659735392980&spm=a1z09.2.0.0.63b22e8dOu1XHj" >购买链接 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
]]></content>
      <categories>
        <category>Robotics</category>
      </categories>
  </entry>
  <entry>
    <title>树莓派语音交互助手笨笨</title>
    <url>/2023/11/02/%E8%AF%AD%E9%9F%B3%E4%BA%A4%E4%BA%92%E5%8A%A9%E6%89%8BEric/</url>
    <content><![CDATA[<blockquote>
<p>发布到知乎上！</p>
</blockquote>
<blockquote>
<p>该项目目标实现一个放置在工位上的智能语音助手，能够与其进行语音对话并且控制卧室家居；</p>
</blockquote>
<h2 id="snowboy语音唤醒"><a href="#snowboy语音唤醒" class="headerlink" title="snowboy语音唤醒"></a>snowboy语音唤醒</h2><p><a class="link"   href="https://github.com/Kitt-AI/snowboy/blob/master/README_ZH_CN.md" >Snowboy 唤醒词检测 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p>根据官方的readme，配置环境；</p>
<p>这里采用的安装环境位RaspberryPi 4B；</p>
<p>克隆项目：</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/Kitt-AI/snowboy.git</span><br></pre></td></tr></table></figure></div>

<h3 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h3><ul>
<li>SWIG<ul>
<li>SWIG（Simplified Wrapper and Interface Generator）是一个软件开发工具，用来将C&#x2F;C++代码连接到各种高级编程语言，包括Python、Java、C#等；</li>
</ul>
</li>
<li>python-pyaudio<ul>
<li>pyAudio是一个python库，用于处理音频流，它提供了音频录制和播放的功能， python3-pyaudio是pyAudio的python3版本；</li>
</ul>
</li>
<li>sox<ul>
<li>Sound eXchange，用于处理音频文件；</li>
</ul>
</li>
<li>Atlas<ul>
<li>ATLAS（Automatically Tuned Linear Algebra Software）是一个自动优化的矩阵计算库。它提供了高性能的线性代数计算能力，包括矩阵乘法、求逆、分解等操作；</li>
</ul>
</li>
</ul>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get install swig python3-pyaudio sox</span><br><span class="line">sudo apt-get install libatlas-base-dev</span><br></pre></td></tr></table></figure></div>

<h3 id="测试demo"><a href="#测试demo" class="headerlink" title="测试demo"></a>测试demo</h3><p>配置好环境之后，进入项目，修改两个bug；</p>
<ol>
<li>修改snowboydecoder.py库的引用</li>
</ol>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> snowboy/examples/Python3</span><br><span class="line">nano snowboydecoder.py</span><br></pre></td></tr></table></figure></div>

<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/11/02/%E8%AF%AD%E9%9F%B3%E4%BA%A4%E4%BA%92%E5%8A%A9%E6%89%8BEric/fig_3.png"
                      class="" width="400"
                >

<p>将<code>from . import snowboydetect</code>修改为<code>import snowboydetect</code></p>
<ol start="2">
<li>修改Makefile中libsnowboy-detect.a文件</li>
</ol>
<p>如果不修改，会出现以下报错：</p>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/11/02/%E8%AF%AD%E9%9F%B3%E4%BA%A4%E4%BA%92%E5%8A%A9%E6%89%8BEric/fig_1.png"
                      class="" width="600"
                >

<p>由于<code>Makefile</code>中的<code>libsnowboy-detect.a</code>文件默认x86-64架构的Ubuntu系统编译版本，与我的树莓派架构不同；</p>
<p>通过以下命令得到树莓派的架构为aarch64</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">uname</span> -m</span><br></pre></td></tr></table></figure></div>
<p>在目录<code>/snowboy/lib/aarch64-ubuntu1604</code>中找到了<code>libsnowboy-detect.a</code>文件，于是修改<code>Makefile</code>：</p>
<div class="highlight-container" data-rel="Makefile"><figure class="iseeu highlight makefile"><table><tr><td class="code"><pre><span class="line">SNOWBOYDETECTLIBFILE = <span class="variable">$(TOPDIR)</span>/lib/ubuntu64/libsnowboy-detect.a</span><br></pre></td></tr></table></figure></div>
<p>修改为</p>
<div class="highlight-container" data-rel="Makefile"><figure class="iseeu highlight makefile"><table><tr><td class="code"><pre><span class="line">SNOWBOYDETECTLIBFILE = <span class="variable">$(TOPDIR)</span>/lib/aarch64-ubuntu1604/libsnowboy-detect.a</span><br></pre></td></tr></table></figure></div>
<p>在该目录下<code>/snowboy/swig/Python3</code>编译：<code>make</code><br>得到<code>snowboydetect.py</code>和<code>_snowboydetect.so</code>两个文件；</p>
<p>进入示例文件夹：</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> snowboy/examples/Python3</span><br><span class="line">python3 demo.py resources/models/snowboy.umdl</span><br></pre></td></tr></table></figure></div>
<p>对着麦克风说“snowboy!”<br>回应如下即测试成功:</p>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/11/02/%E8%AF%AD%E9%9F%B3%E4%BA%A4%E4%BA%92%E5%8A%A9%E6%89%8BEric/fig_2.png"
                      class="" width="500"
                >

<h3 id="录制自己的唤醒词"><a href="#录制自己的唤醒词" class="headerlink" title="录制自己的唤醒词"></a>录制自己的唤醒词</h3><p><a class="link"   href="https://snowboy.hahack.com/" >Snowboy Personal Wake Word Recorder <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p>录入三遍音频，给模型命名，即可得到<code>.pmdl</code>文件；（这里是<code>Stupid.pmdl</code>）</p>
<p>如果是通过ssh连接的树莓派，通过以下命令传输文件（本机是win11）</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">scp C:\Users\hwx_pc\Downloads\Stupid.pmdl hwx_pi@192.168.3.232:/home/hwx_pi/snowboy/examples/Python3</span><br></pre></td></tr></table></figure></div>
<p>在示例目录下执行命令进行测试：</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> snowboy/examples/Python3</span><br><span class="line">python demo.py Stupid.pmdl</span><br></pre></td></tr></table></figure></div>

<h3 id="Python-API"><a href="#Python-API" class="headerlink" title="Python API"></a>Python API</h3><p>这个是<code>demo.py</code>的源代码，</p>
<div class="highlight-container" data-rel="Py"><figure class="iseeu highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> snowboydecoder</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> signal</span><br><span class="line"></span><br><span class="line">interrupted = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">signal_handler</span>(<span class="params">signal, frame</span>):</span><br><span class="line">    <span class="keyword">global</span> interrupted</span><br><span class="line">    interrupted = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">interrupt_callback</span>():</span><br><span class="line">    <span class="keyword">global</span> interrupted</span><br><span class="line">    <span class="keyword">return</span> interrupted</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(sys.argv) == <span class="number">1</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Error: need to specify model name&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Usage: python demo.py your.model&quot;</span>)</span><br><span class="line">    sys.exit(-<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">model = sys.argv[<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># capture SIGINT signal, e.g., Ctrl+C</span></span><br><span class="line">signal.signal(signal.SIGINT, signal_handler)</span><br><span class="line"></span><br><span class="line">detector = snowboydecoder.HotwordDetector(model, sensitivity=<span class="number">0.5</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;Listening... Press Ctrl+C to exit&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># main loop</span></span><br><span class="line">detector.start(detected_callback=snowboydecoder.play_audio_file, <span class="comment"># 重新绑定detected_callback</span></span><br><span class="line">               interrupt_check=interrupt_callback,</span><br><span class="line">               sleep_time=<span class="number">0.03</span>)</span><br><span class="line"></span><br><span class="line">detector.terminate()</span><br></pre></td></tr></table></figure></div>
<p>重新绑定detected_callback所对应的函数，即可实现其他动作。</p>
<h2 id="语音识别ASR-sherpa-ncnn"><a href="#语音识别ASR-sherpa-ncnn" class="headerlink" title="语音识别ASR: sherpa-ncnn"></a>语音识别ASR: sherpa-ncnn</h2><p><a class="link"   href="https://k2-fsa.github.io/sherpa/intro.html" >sherpa-ncnn <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p>采用ncnn框架下的sherpa-ncnn，是一个轻量级的语音识别模型，支持中英文双语言以及离线识别。</p>
<h3 id="配置ncnn环境"><a href="#配置ncnn环境" class="headerlink" title="配置ncnn环境"></a>配置ncnn环境</h3><p><a class="link"   href="https://k2-fsa.github.io/sherpa/ncnn/install/index.html" >Installation <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/k2-fsa/sherpa-ncnn</span><br><span class="line"><span class="built_in">cd</span> sherpa-ncnn</span><br><span class="line"><span class="built_in">mkdir</span> build</span><br><span class="line"><span class="built_in">cd</span> build</span><br><span class="line">cmake \</span><br><span class="line">  -DCMAKE_BUILD_TYPE=Release \</span><br><span class="line">  -DCMAKE_C_FLAGS=<span class="string">&quot;-march=armv8-a&quot;</span> \</span><br><span class="line">  -DCMAKE_CXX_FLAGS=<span class="string">&quot;-march=armv8-a&quot;</span> \</span><br><span class="line">  ..</span><br><span class="line">make -j4</span><br></pre></td></tr></table></figure></div>
<p>输入命令<code>cmake...</code>之后，提示在<code>./build/bin</code>中不能找到<code>sherpa-ncnn-alsa</code>，则需要进行以下步骤：</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /path/to/sherpa-ncnn</span><br><span class="line">sudo apt-get install alsa-utils libasound2-dev</span><br><span class="line"><span class="built_in">cd</span> build</span><br><span class="line"><span class="built_in">rm</span> CMakeCache.txt <span class="comment"># Important, remove the cmake cache file</span></span><br><span class="line">make -j</span><br></pre></td></tr></table></figure></div>
<p>之后就可以找到对应的文件了。</p>
<p>检查，如果出现以下结果，则说明编译成功：</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">ls</span> -lh bin/</span><br></pre></td></tr></table></figure></div>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">total 13M</span><br><span class="line">-rwxr-xr-x 1 kuangfangjun root 6.5M Dec 18 11:31 sherpa-ncnn</span><br><span class="line">-rwxr-xr-x 1 kuangfangjun root 6.5M Dec 18 11:31 sherpa-ncnn-microphone</span><br></pre></td></tr></table></figure></div>

<h3 id="下载预训练大模型"><a href="#下载预训练大模型" class="headerlink" title="下载预训练大模型"></a>下载预训练大模型</h3><p>下载模型之前，需要提前安装git-lfs</p>
<p>由于Huggingface国内无法访问，需要全局代理之后才能访问，为了方便，不需要在树莓派中另外设置科学上网，因此利用ssh的<code>scp</code>将文件从windows传输到树莓派中。</p>
<p>在windows下<code>git bash</code>任意一个目录，执行以下命令：</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">GIT_LFS_SKIP_SMUDGE=1 git <span class="built_in">clone</span> https://huggingface.co/marcoyang/sherpa-ncnn-streaming-zipformer-zh-14M-2023-02-23</span><br><span class="line"><span class="built_in">cd</span> sherpa-ncnn-streaming-zipformer-zh-14M-2023-02-23</span><br><span class="line">git lfs pull --include <span class="string">&quot;*.bin&quot;</span></span><br><span class="line">scp -r sherpa-ncnn-streaming-zipformer-bilingual-zh-en-2023-02-13 hwx_pi@192.168.3.232:/home/hwx_pi/sherpa-ncnn</span><br></pre></td></tr></table></figure></div>

<p>检查是否下载成功：</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">sherpa-ncnn-streaming-zipformer-bilingual-zh-en-2023-02-13 fangjun$ <span class="built_in">ls</span> -lh *.bin</span><br></pre></td></tr></table></figure></div>
<p>生成结果</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">-rw-r--r--  1 fangjun  staff   6.1M Feb 14 10:08 decoder_jit_trace-pnnx.ncnn.bin</span><br><span class="line">-rw-r--r--  1 fangjun  staff   121M Feb 14 10:09 encoder_jit_trace-pnnx.ncnn.bin</span><br><span class="line">-rw-r--r--  1 fangjun  staff   7.0M Feb 14 10:08 joiner_jit_trace-pnnx.ncnn.bin</span><br></pre></td></tr></table></figure></div>
<p>测试：</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /path/to/sherpa-ncnn</span><br><span class="line"></span><br><span class="line">./build/bin/sherpa-ncnn-microphone \</span><br><span class="line">  ./sherpa-ncnn-streaming-zipformer-bilingual-zh-en-2023-02-13/tokens.txt \</span><br><span class="line">  ./sherpa-ncnn-streaming-zipformer-bilingual-zh-en-2023-02-13/encoder_jit_trace-pnnx.ncnn.param \</span><br><span class="line">  ./sherpa-ncnn-streaming-zipformer-bilingual-zh-en-2023-02-13/encoder_jit_trace-pnnx.ncnn.bin \</span><br><span class="line">  ./sherpa-ncnn-streaming-zipformer-bilingual-zh-en-2023-02-13/decoder_jit_trace-pnnx.ncnn.param \</span><br><span class="line">  ./sherpa-ncnn-streaming-zipformer-bilingual-zh-en-2023-02-13/decoder_jit_trace-pnnx.ncnn.bin \</span><br><span class="line">  ./sherpa-ncnn-streaming-zipformer-bilingual-zh-en-2023-02-13/joiner_jit_trace-pnnx.ncnn.param \</span><br><span class="line">  ./sherpa-ncnn-streaming-zipformer-bilingual-zh-en-2023-02-13/joiner_jit_trace-pnnx.ncnn.bin \</span><br><span class="line">  2 \</span><br><span class="line">  greedy_search</span><br></pre></td></tr></table></figure></div>

<p><code>Ctrl+C</code>之后会出现语音识别成功的文本。</p>
<h3 id="Python-API-1"><a href="#Python-API-1" class="headerlink" title="Python API"></a>Python API</h3><p>首先要安装python3的依赖</p>
<p>运用文档的method 4可以成功安装python3依赖</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> sherpa-ncnn</span><br><span class="line"><span class="built_in">cd</span> build</span><br><span class="line"></span><br><span class="line">cmake \</span><br><span class="line">  -D SHERPA_NCNN_ENABLE_PYTHON=ON \</span><br><span class="line">  -D SHERPA_NCNN_ENABLE_PORTAUDIO=OFF \</span><br><span class="line">  -D BUILD_SHARED_LIBS=ON \</span><br><span class="line">  -DCMAKE_C_FLAGS=<span class="string">&quot;-march=armv8-a&quot;</span> \</span><br><span class="line">  -DCMAKE_CXX_FLAGS=<span class="string">&quot;-march=armv8-a&quot;</span> \</span><br><span class="line">  ..</span><br><span class="line"></span><br><span class="line">make -j2</span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> PYTHONPATH=<span class="variable">$PWD</span>/lib:<span class="variable">$PWD</span>/../sherpa-ncnn/python:<span class="variable">$PYTHONPATH</span></span><br></pre></td></tr></table></figure></div>
<p>检查是否安装成功；</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">python3 -c <span class="string">&quot;import sherpa_ncnn; print(sherpa_ncnn.__file__)&quot;</span></span><br><span class="line">python3 -c <span class="string">&quot;import _sherpa_ncnn; print(_sherpa_ncnn.__file__)&quot;</span></span><br></pre></td></tr></table></figure></div>
<p>如果有具体的路径，则说明安装成功。</p>
<p>在安装python库sounddevice中发现，在终端不能直接使用<code>pip install sounddevice</code>，会发生如下报错：</p>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/11/02/%E8%AF%AD%E9%9F%B3%E4%BA%A4%E4%BA%92%E5%8A%A9%E6%89%8BEric/fig_6.png"
                      class="" width="600"
                >

<p>这是由于树莓派是由系统外部管理，意味着系统禁止使用pip直接在全局环境安装python包，避免与系统管理的Python软件包发生冲突。此时需要创建一个虚拟环境：</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">python3 -m venv ~/python_venv <span class="comment"># 需要等一会</span></span><br><span class="line"><span class="built_in">source</span> ~/python_venv/bin/activate</span><br></pre></td></tr></table></figure></div>
<p>此时终端前面会出现<code>(python_venv)</code>，表示虚拟环境已经激活；<br>由于pip被墙了，因此需要用镜像源来进行安装，这里用清华源；</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">pip install -i https://pypi.tuna.tsinghua.edu.cn/simple sounddevice</span><br></pre></td></tr></table></figure></div>

<p><strong>Python脚本如果包含虚拟环境的库，必须在虚拟环境激活后才能运行python脚本；</strong></p>
<p>如果要退出虚拟环境，在终端输入<code>deactivate</code>即可退出。</p>
<p>利用<code>pip list</code>来检查环境中是否包含sounddevice库和sherpa-ncnn包。</p>
<p>测试脚本<code>asr_test.py</code>：</p>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="keyword">import</span> sounddevice <span class="keyword">as</span> sd</span><br><span class="line">    <span class="keyword">import</span> sherpa_ncnn</span><br><span class="line"><span class="keyword">except</span> ImportError <span class="keyword">as</span> e:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Please install sounddevice first. You can use&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>()</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;  pip install sounddevice&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>()</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;to install it&quot;</span>)</span><br><span class="line">    sys.exit(-<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># replace the model files</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">create_recognizer</span>():</span><br><span class="line">    <span class="comment"># 使用绝对路径定位模型文件</span></span><br><span class="line">    base_path = <span class="string">&quot;/home/hwx_pi/sherpa-ncnn/sherpa-ncnn-streaming-zipformer-bilingual-zh-en-2023-02-13&quot;</span></span><br><span class="line">    recognizer = sherpa_ncnn.Recognizer(</span><br><span class="line">        tokens=<span class="string">f&quot;<span class="subst">&#123;base_path&#125;</span>/tokens.txt&quot;</span>,</span><br><span class="line">        encoder_param=<span class="string">f&quot;<span class="subst">&#123;base_path&#125;</span>/encoder_jit_trace-pnnx.ncnn.param&quot;</span>,</span><br><span class="line">        encoder_bin=<span class="string">f&quot;<span class="subst">&#123;base_path&#125;</span>/encoder_jit_trace-pnnx.ncnn.bin&quot;</span>,</span><br><span class="line">        decoder_param=<span class="string">f&quot;<span class="subst">&#123;base_path&#125;</span>/decoder_jit_trace-pnnx.ncnn.param&quot;</span>,</span><br><span class="line">        decoder_bin=<span class="string">f&quot;<span class="subst">&#123;base_path&#125;</span>/decoder_jit_trace-pnnx.ncnn.bin&quot;</span>,</span><br><span class="line">        joiner_param=<span class="string">f&quot;<span class="subst">&#123;base_path&#125;</span>/joiner_jit_trace-pnnx.ncnn.param&quot;</span>,</span><br><span class="line">        joiner_bin=<span class="string">f&quot;<span class="subst">&#123;base_path&#125;</span>/joiner_jit_trace-pnnx.ncnn.bin&quot;</span>,</span><br><span class="line">        num_threads=<span class="number">4</span>,</span><br><span class="line">    )</span><br><span class="line">    <span class="keyword">return</span> recognizer</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Started! Please speak&quot;</span>)</span><br><span class="line">    recognizer = create_recognizer()</span><br><span class="line">    sample_rate = recognizer.sample_rate</span><br><span class="line">    samples_per_read = <span class="built_in">int</span>(<span class="number">0.1</span> * sample_rate)  <span class="comment"># 0.1 second = 100 ms</span></span><br><span class="line">    last_result = <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="keyword">with</span> sd.InputStream(</span><br><span class="line">        channels=<span class="number">1</span>, dtype=<span class="string">&quot;float32&quot;</span>, samplerate=sample_rate</span><br><span class="line">    ) <span class="keyword">as</span> s:</span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            samples, _ = s.read(samples_per_read)  <span class="comment"># a blocking read</span></span><br><span class="line">            samples = samples.reshape(-<span class="number">1</span>)</span><br><span class="line">            recognizer.accept_waveform(sample_rate, samples)</span><br><span class="line">            result = recognizer.text</span><br><span class="line">            <span class="keyword">if</span> last_result != result:</span><br><span class="line">                last_result = result</span><br><span class="line">                <span class="built_in">print</span>(result)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    devices = sd.query_devices()</span><br><span class="line">    <span class="built_in">print</span>(devices)</span><br><span class="line">    default_input_device_idx = sd.default.device[<span class="number">0</span>]</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&#x27;Use default device: <span class="subst">&#123;devices[default_input_device_idx][<span class="string">&quot;name&quot;</span>]&#125;</span>&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        main()</span><br></pre></td></tr></table></figure></div>

<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> asr_test</span><br><span class="line">python asr_test.py</span><br></pre></td></tr></table></figure></div>
<p>运行脚本后能够实时识别说话的内容。</p>
<h2 id="Mqtt协议通信"><a href="#Mqtt协议通信" class="headerlink" title="Mqtt协议通信"></a>Mqtt协议通信</h2><p>采用Mqtt协议进行通信，以树莓派作为Mqtt Broker，ESP32作为Mqtt Client。</p>
<p>Client通过订阅topic，向Broker发送消息，同时从Broker上接收消息。</p>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/11/02/%E8%AF%AD%E9%9F%B3%E4%BA%A4%E4%BA%92%E5%8A%A9%E6%89%8BEric/fig_5.png"
                      class="" width="600"
                >

<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/2023/11/02/%E8%AF%AD%E9%9F%B3%E4%BA%A4%E4%BA%92%E5%8A%A9%E6%89%8BEric/fig_4.png"
                      class="" width="600"
                >

<p>关于Mqtt的详细介绍：</p>
<p><a class="link"   href="https://randomnerdtutorials.com/what-is-mqtt-and-how-it-works/" >What is MQTT and How It Works <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<h3 id="树莓派安装和配置Mosquitto-Broker"><a href="#树莓派安装和配置Mosquitto-Broker" class="headerlink" title="树莓派安装和配置Mosquitto Broker"></a>树莓派安装和配置Mosquitto Broker</h3><p><a class="link"   href="https://randomnerdtutorials.com/how-to-install-mosquitto-broker-on-raspberry-pi/" >Install Mosquitto MQTT Broker on Raspberry Pi <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p>安装与配置完之后进行测试；</p>
<p><a class="link"   href="https://randomnerdtutorials.com/testing-mosquitto-broker-and-client-on-raspbbery-pi/" >Testing Mosquitto Broker and Client on Raspberry Pi <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<h2 id="软件框架整合"><a href="#软件框架整合" class="headerlink" title="软件框架整合"></a>软件框架整合</h2><p>首先需要激活虚拟环境：</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">source</span> ~/python_venv/bin/activate</span><br></pre></td></tr></table></figure></div>

<p>由于在虚拟的环境中运行，需要安装一些基本的库：</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">pip install -i https://pypi.tuna.tsinghua.edu.cn/simple numpy pyaudio paho-mqtt</span><br></pre></td></tr></table></figure></div>

<h3 id="语音唤醒：awaken-py"><a href="#语音唤醒：awaken-py" class="headerlink" title="语音唤醒：awaken.py"></a>语音唤醒：awaken.py</h3><blockquote>
<p>这里由于树莓派计算能力有限，因此将中文识别模型和英语识别模型分开，中文模型叫做笨笨，英文模型叫做Echo；</p>
</blockquote>
<p>将snowboy的运行依赖移植到新的文件夹中：</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cp</span> -Lr /home/hwx_pi/snowboy/examples/Python3/* /home/hwx_pi/Stupid</span><br></pre></td></tr></table></figure></div>
<p>录入模型Stupid.pmdl，测试snowboy是否能够正常运行：</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">python snowboy_test.py Stupid.pmdl</span><br></pre></td></tr></table></figure></div>
<p>如果能够正常唤醒，可以听到“叮”的一声。</p>
<p>新建库<code>awaken.py</code>，用于语音唤醒：</p>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> snowboydecoder</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> signal</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">snowboy_awaken</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, model, detected_callback = <span class="literal">None</span></span>):</span><br><span class="line">        self.interrupted = <span class="literal">False</span></span><br><span class="line">        self.model = model</span><br><span class="line">        self.sensitivity = <span class="number">0.5</span></span><br><span class="line">        self.detected_callback = detected_callback</span><br><span class="line">        self.detector = snowboydecoder.HotwordDetector(self.model, sensitivity = self.sensitivity)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">signal_handler</span>(<span class="params">self, signal, frame</span>):</span><br><span class="line">        self.interrupted = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">interrupt_callback</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> self.interrupted</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">start</span>(<span class="params">self</span>):</span><br><span class="line">        signal.signal(signal.SIGINT, self.signal_handler)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;我正在休眠中，需要的时候呼叫我zzz&#x27;</span>)</span><br><span class="line"></span><br><span class="line">        self.detector.start(detected_callback = self.detected_callback, </span><br><span class="line">                            interrupt_check = self.interrupt_callback,</span><br><span class="line">                            sleep_time = <span class="number">0.03</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">stop</span>(<span class="params">self</span>):</span><br><span class="line">        self.detector.terminate()</span><br></pre></td></tr></table></figure></div>

<h3 id="语音识别：ASR-py"><a href="#语音识别：ASR-py" class="headerlink" title="语音识别：ASR.py"></a>语音识别：ASR.py</h3><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="keyword">import</span> sounddevice <span class="keyword">as</span> sd</span><br><span class="line">    <span class="keyword">import</span> sherpa_ncnn</span><br><span class="line"><span class="keyword">except</span> ImportError <span class="keyword">as</span> e:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Please source first. You can use&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>()</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;source ~/python_venv/bin/activate&quot;</span>)</span><br><span class="line">    sys.exit(-<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">ASR_system</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, base_path</span>):</span><br><span class="line">        self.base_path = base_path</span><br><span class="line">        self.recognizer = self.create_recognizer()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">create_recognizer</span>(<span class="params">self</span>):</span><br><span class="line">        recognizer = sherpa_ncnn.Recognizer(</span><br><span class="line">        tokens=<span class="string">f&quot;<span class="subst">&#123;self.base_path&#125;</span>/tokens.txt&quot;</span>,</span><br><span class="line">        encoder_param=<span class="string">f&quot;<span class="subst">&#123;self.base_path&#125;</span>/encoder_jit_trace-pnnx.ncnn.param&quot;</span>,</span><br><span class="line">        encoder_bin=<span class="string">f&quot;<span class="subst">&#123;self.base_path&#125;</span>/encoder_jit_trace-pnnx.ncnn.bin&quot;</span>,</span><br><span class="line">        decoder_param=<span class="string">f&quot;<span class="subst">&#123;self.base_path&#125;</span>/decoder_jit_trace-pnnx.ncnn.param&quot;</span>,</span><br><span class="line">        decoder_bin=<span class="string">f&quot;<span class="subst">&#123;self.base_path&#125;</span>/decoder_jit_trace-pnnx.ncnn.bin&quot;</span>,</span><br><span class="line">        joiner_param=<span class="string">f&quot;<span class="subst">&#123;self.base_path&#125;</span>/joiner_jit_trace-pnnx.ncnn.param&quot;</span>,</span><br><span class="line">        joiner_bin=<span class="string">f&quot;<span class="subst">&#123;self.base_path&#125;</span>/joiner_jit_trace-pnnx.ncnn.bin&quot;</span>,</span><br><span class="line">        num_threads=<span class="number">4</span>,</span><br><span class="line">        )</span><br><span class="line">        <span class="keyword">return</span> recognizer</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">start_recognition</span>(<span class="params">self, total_timeout = <span class="number">10</span>, silence_timeout =<span class="number">1</span></span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;主人您好，请问有什么需要帮助。&quot;</span>)</span><br><span class="line">        sample_rate = self.recognizer.sample_rate</span><br><span class="line">        samples_per_read = <span class="built_in">int</span>(<span class="number">0.1</span> * sample_rate)  <span class="comment"># 0.1 second = 100 ms</span></span><br><span class="line">        last_text = <span class="string">&quot;&quot;</span></span><br><span class="line">        silence_time = time.time()  <span class="comment"># initial time</span></span><br><span class="line">        total_time = time.time()</span><br><span class="line"></span><br><span class="line">        <span class="keyword">with</span> sd.InputStream(channels=<span class="number">1</span>, dtype=<span class="string">&quot;float32&quot;</span>, samplerate=sample_rate) <span class="keyword">as</span> s:</span><br><span class="line">            <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">                samples, _ = s.read(samples_per_read)  <span class="comment"># a blocking read</span></span><br><span class="line">                samples = samples.reshape(-<span class="number">1</span>)</span><br><span class="line">                self.recognizer.accept_waveform(sample_rate, samples)</span><br><span class="line">                result = self.recognizer.text <span class="comment"># overlay content</span></span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> last_text != result: <span class="comment"># if I speak</span></span><br><span class="line">                    last_text = result</span><br><span class="line">                    silence_time = time.time() <span class="comment"># silence_time start counting or reset</span></span><br><span class="line">                    total_time = time.time() <span class="comment"># total_time start counting or reset</span></span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> time.time() - silence_time &gt; silence_timeout:</span><br><span class="line">                    <span class="keyword">if</span> last_text:</span><br><span class="line">                        <span class="keyword">yield</span> last_text.strip()</span><br><span class="line">                        last_text = <span class="string">&quot;&quot;</span> <span class="comment"># clear text</span></span><br><span class="line">                        self.recognizer.reset()</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> time.time() - total_time &gt; total_timeout:</span><br><span class="line">                    <span class="built_in">print</span>(<span class="string">&quot;没有人说话，我先溜了&quot;</span>)</span><br><span class="line">                    <span class="keyword">break</span></span><br></pre></td></tr></table></figure></div>

<h3 id="Mqtt-python"><a href="#Mqtt-python" class="headerlink" title="Mqtt-python"></a>Mqtt-python</h3><p>创建库<code>mqtt_client.py</code>：</p>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> paho.mqtt.client <span class="keyword">as</span> mqtt</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">mqtt_controller</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, server, port=<span class="number">1883</span></span>):</span><br><span class="line">        self.client = mqtt.Client()</span><br><span class="line">        self.server = server</span><br><span class="line">        self.port = <span class="number">1883</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">connect</span>(<span class="params">self</span>):</span><br><span class="line">        self.client.connect(self.server, self.port, <span class="number">60</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">publish</span>(<span class="params">self, topic, message</span>):</span><br><span class="line">        self.client.publish(topic, message)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">disconnect</span>(<span class="params">self</span>):</span><br><span class="line">        self.client.disconnect()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">instruct</span>(<span class="params">self, order</span>):</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&quot;开灯&quot;</span> <span class="keyword">in</span> order:</span><br><span class="line">            self.publish(<span class="string">&quot;test/led&quot;</span>, <span class="string">&quot;led on&quot;</span>)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;已开灯&quot;</span>)</span><br><span class="line">        <span class="keyword">elif</span> <span class="string">&quot;关灯&quot;</span> <span class="keyword">in</span> order:</span><br><span class="line">            self.publish(<span class="string">&quot;test/led&quot;</span>, <span class="string">&quot;led off&quot;</span>)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;已关灯&quot;</span>)</span><br></pre></td></tr></table></figure></div>

<h3 id="语音合成：Espeak-NG-TTS"><a href="#语音合成：Espeak-NG-TTS" class="headerlink" title="语音合成：Espeak-NG TTS"></a>语音合成：Espeak-NG TTS</h3><p><a class="link"   href="https://github.com/espeak-ng/espeak-n" >espeak-ng <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p>这是一个轻量化的离线语音合成模块，支持多种语言，包括中文。</p>
<p>安装：</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get install espeak-ng</span><br></pre></td></tr></table></figure></div>

<p>测试：</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">espeak-ng hello <span class="comment"># 英语</span></span><br><span class="line">espeak-ng -v cmn-latn-pinyin <span class="string">&quot;你好世界&quot;</span> <span class="comment"># 普通话</span></span><br><span class="line">espeak-ng -v yue <span class="string">&quot;丢雷老母&quot;</span> <span class="comment"># 粤语</span></span><br></pre></td></tr></table></figure></div>

<p>在python脚本中使用：</p>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> subprocess</span><br><span class="line"><span class="keyword">import</span> time <span class="comment"># 用于断句</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">speak</span>(<span class="params">text, language=<span class="string">&#x27;cmn-latn-pinyin&#x27;</span></span>):</span><br><span class="line">    subprocess.call([<span class="string">&#x27;espeak-ng&#x27;</span>, <span class="string">&#x27;-v&#x27;</span>, language, text])</span><br><span class="line"></span><br><span class="line">speak(<span class="string">&quot;你好&quot;</span>)</span><br><span class="line">time.sleep(<span class="number">1</span>)</span><br><span class="line">speak(<span class="string">&quot;世界&quot;</span>)</span><br></pre></td></tr></table></figure></div>

<h3 id="主程序：Stupid-py"><a href="#主程序：Stupid-py" class="headerlink" title="主程序：Stupid.py"></a>主程序：Stupid.py</h3><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">from</span> awaken <span class="keyword">import</span> snowboy_awaken</span><br><span class="line"><span class="keyword">from</span> mqtt_client <span class="keyword">import</span> mqtt_controller</span><br><span class="line"><span class="keyword">from</span> ASR <span class="keyword">import</span> ASR_system</span><br><span class="line"></span><br><span class="line">model = sys.argv[<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(sys.argv) == <span class="number">1</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Error: need to specify model name&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Usage: python demo.py your.model&quot;</span>)</span><br><span class="line">    sys.exit(-<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">IP = <span class="string">&quot;192.168.3.232&quot;</span> <span class="comment"># IP address for Mqtt broker</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">global</span> asr_text</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">appliances_controller</span>(): <span class="comment"># Control the house appliances by mqtt</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">recognize</span>(): <span class="comment"># auto speech recognition success</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;唤醒成功！&quot;</span>)</span><br><span class="line">    appliances.connect()</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;MQTT连接成功&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> text <span class="keyword">in</span> asr.start_recognition():</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;语音识别：<span class="subst">&#123;text&#125;</span>&quot;</span>)</span><br><span class="line">        appliances.instruct(text)</span><br><span class="line"></span><br><span class="line">    appliances.disconnect()</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;MQTT断开连接&quot;</span>)</span><br><span class="line"></span><br><span class="line">asr = ASR_system(<span class="string">&quot;/home/hwx_pi/sherpa-ncnn/sherpa-ncnn-streaming-zipformer-zh-14M-2023-02-23&quot;</span>)</span><br><span class="line">awaken = snowboy_awaken(model, detected_callback = recognize) <span class="comment"># wake up the robot</span></span><br><span class="line">appliances = mqtt_controller(IP)</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    awaken.start()</span><br><span class="line"><span class="keyword">finally</span>:</span><br><span class="line">    awaken.stop()</span><br></pre></td></tr></table></figure></div>

<h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ul>
<li><a class="link"   href="https://blog.csdn.net/qq_38844263/article/details/127143725" >[Raspi][SnowBoy][教程]树莓派SnowBoy搭建教程 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://blog.csdn.net/qq_43280079/article/details/105039963" >关于树莓派编译及运行Snowboy的详细教程 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://www.jianshu.com/p/a1c06020f5fd" >树莓派使用 snowboy 配置语音唤醒 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://github.com/Kitt-AI/snowboy/issues/713" >makefile有问题 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://k2-fsa.github.io/sherpa/intro.html" >sherpa-ncnn <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
</ul>
]]></content>
      <categories>
        <category>Other Projects</category>
      </categories>
  </entry>
</search>
